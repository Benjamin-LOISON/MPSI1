(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    217645,       4754]
NotebookOptionsPosition[    216172,       4720]
NotebookOutlinePosition[    216550,       4736]
CellTagsIndexPosition[    216507,       4733]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<((1+x)^2)*y''[x]+(1+x)*y'[x]-2\[Equal]0\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Differential equation solution\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7501483805570707`*^9, 
  3.750148407679527*^9}},ExpressionUUID->"9e6a543b-a5f8-4140-ba81-\
b6fbfee22bcc"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "((1+x)^2)*y''[x]+(1+x)*y'[x]-2\[Equal]0", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Differential equation solution"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Differential equation solutions", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "DSolve[{-2 + (1 + x) y'[x] + (1 + x)^2 y''[x] == 0}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  SubscriptBox["c", "1"], " ", 
                  RowBox[{"log", "(", 
                    RowBox[{"x", "+", "1"}], ")"}]}], "+", 
                SubscriptBox["c", "2"], "+", 
                RowBox[{
                  SuperscriptBox["log", "2"], "(", 
                  RowBox[{"x", "+", "1"}], ")"}]}]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 StyleBox[
                  TemplateBox[{"\"Solve \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}], "2"]}], "+", 
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}]}], "-", "2"}], 
                    HoldForm], "\[LongEqual]", "0"}], TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[CalculateScan`StepByStepMath`StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]] 
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`x, 1]^2, 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]] 
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`x, 1], -2] == 0]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], 
                    TemplateBox[{}, "RowDefault"], "\":\""}, "RowDefault"], 
                  GrayLevel[0.5], StripOnInput -> False], {
                 LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Let \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"v", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`v[$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    "\",\"", "\" \""}, "RowDefault"], "\"which \"", 
                    "\"gives \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "\[LongEqual]", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"v", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]] == 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`v[$CellContext`x], $CellContext`x]]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Rewrite \"", "\"the \"", "\"equation:\""},
                     "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"v", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "+", 
                    FractionBox[
                    RowBox[{"v", "(", "x", ")"}], 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm]]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    FractionBox["2", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}], "2"]]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Let \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{"\[Mu]", "(", "x", ")"}], "\[LongEqual]", 
                    TagBox[
                    SuperscriptBox["\[ExponentialE]", 
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm]], 
                    HoldForm], "\[LongEqual]", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm]}], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`showDetailsWrapper[$CellContext`\[Mu][$\
CellContext`x] == CalculateScan`StepByStepMath`StepByStepDSolve`Private`MyExp[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Integrate[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`x, 1]^(-1), $CellContext`x]]] == 
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`x, 1], CalculateScan`StepByStepMath`StepByStepIntegrate, (
                    1 + $CellContext`x)^(-1), $CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\".\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Multiply \"", "\"both \"", "\"sides \"", "\"by \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Mu]", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`\[Mu][$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}], " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"v", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"v", "(", "x", ")"}]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    FractionBox["2", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm]]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"1", "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}]}], HoldForm]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    1 == CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x][
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`x, 1]]]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False], "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}], " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"v", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}]}], HoldForm], 
                    " ", 
                    RowBox[{"v", "(", "x", ")"}]}]}], HoldForm], 
                    "\[LongEqual]", 
                    FractionBox["2", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm]]}]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Apply \"", "\"the \"", "\"reverse \"", "\"product \"", 
                    "\"rule \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"f", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "g"}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"g", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "f"}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}]}], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`f 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[$CellContext`g, $CellContext`x]], $CellContext`g 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[$CellContext`f, $CellContext`x]]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{"f", " ", "g"}], ")"}]}], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x]][$CellContext`f $CellContext`g]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\" \""}, "RowDefault"], "\"to \"", 
                    "\"the \"", "\"left\[Hyphen]hand \"", "\"side:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}], " ", 
                    RowBox[{"v", "(", "x", ")"}]}], ")"}]}], HoldForm], 
                    "\[LongEqual]", 
                    FractionBox["2", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm]]}]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Integrate \"", "\"both \"", "\"sides \"", "\"with \"", 
                    "\"respect \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["x", TraditionalForm]]], 
                    ExpressionCell[$CellContext`x]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}], " ", 
                    RowBox[{"v", "(", "x", ")"}]}], ")"}]}], HoldForm], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["2", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Evaluate \"", "\"the \"", "\"integrals:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}], " ", 
                    RowBox[{"v", "(", "x", ")"}]}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}]}], "+", 
                    SubscriptBox["c", "1"]}], HoldForm], 
                    StyleBox[
                    "\", where \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    SubscriptBox["c", "1"], 
                    StyleBox[
                    "\" is an arbitrary constant.\"", FontColor -> 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Divide \"", "\"both \"", "\"sides \"", "\"by \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Mu]", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`\[Mu][$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`x, 1]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False]}, "RowDefault"]}, "RowDefault"]}, "RowDefault"], 
                    "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"v", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    FractionBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}]}], "+", 
                    SubscriptBox["c", "1"]}], HoldForm], 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm]]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"v", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`v[$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "\[LongEqual]", 
                    FractionBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}]}], "+", 
                    SubscriptBox["c", "1"]}], HoldForm], 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm]]}]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Integrate \"", "\"both \"", "\"sides \"", "\"with \"", 
                    "\"respect \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["x", TraditionalForm]]], 
                    ExpressionCell[$CellContext`x]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}]}], "+", 
                    SubscriptBox["c", "1"]}], HoldForm], 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["log", "2"], "(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}], "+", 
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{"x", "+", "1"}], HoldForm], ")"}]}], "+", 
                    SubscriptBox["c", "2"]}], HoldForm], 
                    StyleBox[
                    "\", where \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    SubscriptBox["c", "2"], 
                    StyleBox[
                    "\" is an arbitrary constant.\"", FontColor -> 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                TemplateBox[{
                  RowBox[{"log", "(", "x", ")"}], "\" \"", 
                  "\"is the natural logarithm\""}, "RowDefault"], 
                TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "DifferentialEquationSolution__Hide steps"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "3.858", 
    "parsetiming" -> "0.795", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa594105e88i7a1f487a100002dh56be9845chhce", "host" -> 
    "http://www4f.wolframalpha.com", "server" -> "24", "related" -> 
    "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa595105e88i7a1f487a100003077c43e3abha80d4587552287198035910", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2018, 11, 2, 12, 53, 34.472358`9.290045887733346}, "Line" -> 1,
     "SessionID" -> 29637712123536511263}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "((1+x)^2)*y''[x]+(1+x)*y'[x]-2\[Equal]0"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1345., {1469., 1481.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7501484146030083`*^9},ExpressionUUID->"2108a064-015f-40b1-aa42-\
013cb8194d53"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.75014993916928*^9, 
  3.750150352758336*^9},ExpressionUUID->"a5b67ce1-ec25-4548-b559-\
366ab86dccd4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1"}], ")"}], 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"2", "*", "x", "*", 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.750173461257968*^9, 
  3.750173503836357*^9}},ExpressionUUID->"3668a989-00a7-45f0-b2be-\
57327be60211"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["x", 
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}]]}], "+", 
     FractionBox[
      RowBox[{"C", "[", "1", "]"}], 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.750173488186081*^9, 
  3.750173504351978*^9}},ExpressionUUID->"3cb5b647-3bbd-49e6-8fc8-\
c7284a530491"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
     RowBox[{"2", "*", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", 
    SuperscriptBox["\[ExponentialE]", "x"]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.750180483998169*^9, 
  3.7501805027564244`*^9}},ExpressionUUID->"3d09e208-d5e6-482a-be2f-\
06c1e6b91a58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       SuperscriptBox["x", "2"]}], "2"], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", "x", " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.750180503951227*^9},ExpressionUUID->"b094717b-a66e-4a4b-9220-\
e908e77661ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<y''[x]-2*y'[x]+y[x]\[Equal]e^x\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Differential equation solution\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.750180622016719*^9, 
  3.7501806376385427`*^9}},ExpressionUUID->"ddea5ae8-38d3-46af-a76a-\
354e0317debd"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "y''[x]-2*y'[x]+y[x]\[Equal]e^x", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Differential equation solution"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Differential equation solutions", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"DSolve[{y[x] - 2 y'[x] + y''[x] == E^x}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  SubscriptBox["c", "2"], " ", 
                  SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}], "+", 
                RowBox[{
                  SubscriptBox["c", "1"], " ", 
                  SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
                FractionBox[
                 RowBox[{
                   SuperscriptBox["\[ExponentialE]", "x"], " ", 
                   SuperscriptBox["x", "2"]}], "2"]}]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 StyleBox[
                  TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{"\"Solve \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "-", 
                    RowBox[{"2", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], "\[LongEqual]", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 
                    2}]], (-2) 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], 
                    $CellContext`y[$CellContext`x]] == E^$CellContext`x]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"]}, "RowDefault"]}, "RowDefault"], "\":\""}, 
                   "RowWithSeparators"], 
                  GrayLevel[0.5], StripOnInput -> False], {
                 LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"will \"", 
                    "\"be \"", "\"the \"", "\"sum \"", "\"of \"", "\"the \"", 
                    "\"complementary \"", "\"solution \"", "\"and \"", 
                    "\"particular \"", "\"solution.\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    "\"Find the complementary solution by solving \"", 
                    FontColor -> GrayLevel[0.5], StripOnInput -> False], 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "-", 
                    RowBox[{"2", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 
                    2}]], (-2) 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], 
                    $CellContext`y[$CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["0", TraditionalForm]]], 
                    ExpressionCell[0]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], 
                    StyleBox[
                    "\":\"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False]}, "RowDefault"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Assume \"", "\"a \"", "\"solution \"", "\"will \"", 
                    "\"be \"", "\"proportional \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"for \"", "\"some \"", "\"constant \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\".\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"y", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`y[$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    "\" \""}, "RowDefault"], "\"into \"", "\"the \"", 
                    "\"differential \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], "-", 
                    RowBox[{"2", " ", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm]}], 
                    "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", {$CellContext`x, 2}][
                    E^($CellContext`\[Lambda] $CellContext`x)]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) $CellContext`\
\[Lambda]^2]], FontColor -> GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x][
                    E^($CellContext`\[Lambda] $CellContext`x)]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Lambda]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) $CellContext`\
\[Lambda]]], FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "-", 
                    RowBox[{"2", " ", "\[Lambda]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Factor \"", "\"out \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], "-", 
                    RowBox[{"2", " ", "\[Lambda]"}], "+", "1"}], HoldForm], 
                    ")"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{"\"Since \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], "\[NotEqual]", "0"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) != 0]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\" \""}, "RowDefault"], "\"for \"", "\"any \"", 
                    "\"finite \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "\",\"", "\" \""}, "RowDefault"], 
                    "\"the \"", "\"zeros \"", "\"must \"", "\"come \"", 
                    "\"from \"", "\"the \"", "\"polynomial:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], "-", 
                    RowBox[{"2", " ", "\[Lambda]"}], "+", "1"}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", "0"}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Factor:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"\[Lambda]", "-", "1"}], HoldForm], ")"}], "2"], 
                    "\[LongEqual]", "0"}]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Solve \"", "\"for \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"\[Lambda]", "\[LongEqual]", "1"}], 
                    StyleBox[
                    "\" or \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    RowBox[{"\[Lambda]", "\[LongEqual]", "1"}]}, 
                    "RowDefault"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"multiplicity \"", "\"of \"", "\"the \"", 
                    "\"root \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], 
                    ExpressionCell[1]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], 
                    ExpressionCell[2]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"which \"", "\"gives \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "x", ")"}], "\[LongEqual]", 
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"]}]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 1][$CellContext`x] == 
                    E^$CellContext`x Subscript[$CellContext`c, 1]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\", \"", TraditionalForm]]], 
                    ExpressionCell[", "]], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "x", ")"}], "\[LongEqual]", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 2][$CellContext`x] == 
                    E^$CellContext`x $CellContext`x 
                    Subscript[$CellContext`c, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"as \"", "\"solutions, \"", "\"where \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"are \"", "\"arbitrary \"", 
                    "\"constants.\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"is \"", 
                    "\"the \"", "\"sum \"", "\"of \"", "\"the \"", 
                    "\"above \"", "\"solutions:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "x", ")"}], "+", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}], 
                    HoldForm]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Determine \"", "\"the \"", "\"particular \"", 
                    "\"solution \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "-", 
                    RowBox[{"2", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], "\[LongEqual]", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 
                    2}]], (-2) 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], 
                    $CellContext`y[$CellContext`x]] == E^$CellContext`x]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\" \""}, "RowDefault"], "\"by \"", "\"the \"", 
                    "\"method \"", "\"of \"", "\"undetermined \"", 
                    "\"coefficients:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"particular \"", "\"solution \"", "\"to \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "-", 
                    RowBox[{"2", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 
                    2}]], (-2) 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], 
                    $CellContext`y[$CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", "x"], 
                    TraditionalForm]]], 
                    ExpressionCell[E^$CellContext`x]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    "\" \""}, "RowDefault"], "\"is \"", "\"of \"", "\"the \"",
                     "\"form:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox[
                    StyleBox["a", Italic, StripOnInput -> False], "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], ")"}]}], 
                    HoldForm]}], 
                    StyleBox[
                    "\", where \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], 
                    StyleBox[
                    "\" was multiplied by \"", FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    SuperscriptBox["x", "2"], 
                    StyleBox[
                    "\" to account for \"", FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}], 
                    StyleBox[
                    "\" in the complementary solution.\"", FontColor -> 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Solve \"", "\"for \"", "\"the \"", "\"unknown \"", 
                    "\"constant \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Compute \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x], $CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", 
                    SuperscriptBox["x", "2"]}], ")"}]}], HoldForm]}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}], 
                    HoldForm]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{" \[LongEqual] "}}, 
                    "Rows" -> {{" \[LongEqual] "}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Compute \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x], {$CellContext`x, 2}]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", 
                    SuperscriptBox["x", "2"]}], ")"}]}], HoldForm]}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}], 
                    HoldForm], ")"}]}]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{" \[LongEqual] "}}, 
                    "Rows" -> {{" \[LongEqual] "}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Substitute \"", "\"the \"", "\"particular \"", 
                    "\"solution \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False], "\" \""}, "RowDefault"], "\"into \"", "\"the \"", 
                    "\"differential \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "-", 
                    RowBox[{"2", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    SuperscriptBox["\[ExponentialE]", "x"], HoldForm]}, 
                    "RowDefault"], HoldForm]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}], 
                    HoldForm], ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}], 
                    HoldForm], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", 
                    SuperscriptBox["x", "2"]}]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    SuperscriptBox["\[ExponentialE]", "x"], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Simplify:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    SuperscriptBox["\[ExponentialE]", "x"]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Equate \"", "\"the \"", "\"coefficients \"", "\"of \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", "x"], 
                    TraditionalForm]]], 
                    ExpressionCell[E^$CellContext`x]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"on \"", "\"both \"", "\"sides \"", 
                    "\"of \"", "\"the \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "1"]}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", "1"}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Solve \"", "\"the \"", "\"equation:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    SubscriptBox["a", "1"], "\[LongEqual]", 
                    FractionBox["1", "2"]}]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 3, RowAlignments -> Baseline, 
                    ColumnAlignments -> Left], 
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$, TableSpacing == {1, 3}]]]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"into \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", 
                    SuperscriptBox["x", "2"]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^$CellContext`x $CellContext`x^2 
                    Subscript[$CellContext`a, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], " ", 
                    SuperscriptBox["x", "2"]}], "2"]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"is:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "\"c\""], "(", "x", ")"}], "+", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], " ", 
                    SuperscriptBox["x", "2"]}], "2"], "+", 
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}], 
                    HoldForm]}, "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "Solve with undetermined coefficients", 
         "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Solve with undetermined coefficients", "input" -> 
           "DifferentialEquationSolution__Solve with undetermined \
coefficients"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Solve with variation of parameters", "input" -> 
           "DifferentialEquationSolution__Solve with variation of \
parameters"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Solve with Laplace transform", "input" -> 
           "DifferentialEquationSolution__Solve with Laplace transform"}, \
{}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "DifferentialEquationSolution__Hide steps"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.465", 
    "parsetiming" -> "0.756", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa698231gc77dc13b245800004ab14a29762972ba", "host" -> 
    "http://www4c.wolframalpha.com", "server" -> "41", "related" -> 
    "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa699231gc77dc13b245800000e12f47gg3d298cd2280401133652745401", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2018, 11, 2, 21, 50, 41.7146996`9.372863997778177}, "Line" -> 
    4, "SessionID" -> 29637887492008905688}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "y''[x]-2*y'[x]+y[x]\[Equal]e^x"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1345., {2784., 2796.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.75018064193511*^9},ExpressionUUID->"65fa4435-2a02-41f9-bd38-17dd82c6599f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<y''[x]+y[x]\[Equal]2*((Cos(x))^2)\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Differential equation solution\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7501823271197357`*^9, 
  3.7501823461916037`*^9}},ExpressionUUID->"465598ec-9d0f-4fdb-92ba-\
d796df0c35d1"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "y''[x]+y[x]\[Equal]2*((Cos(x))^2)", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Differential equation solution"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Differential equation solutions", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"DSolve[{y[x] + y''[x] == 2 Cos[x]^2}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  SubscriptBox["c", "2"], " ", 
                  RowBox[{"sin", "(", "x", ")"}]}], "+", 
                RowBox[{
                  SubscriptBox["c", "1"], " ", 
                  RowBox[{"cos", "(", "x", ")"}]}], "-", 
                RowBox[{
                  RowBox[{
                    FractionBox["1", "3"]}], " ", 
                  RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", "1"}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1\
, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 StyleBox[
                  TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{"\"Solve \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], "\[LongEqual]", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SuperscriptBox["cos", "2"], "(", "x", ")"}]}]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 
                    $CellContext`y[$CellContext`x]] == 
                    2 Cos[$CellContext`x]^2]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"]}, "RowDefault"]}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                  GrayLevel[0.5], StripOnInput -> False], {
                 LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"will \"", 
                    "\"be \"", "\"the \"", "\"sum \"", "\"of \"", "\"the \"", 
                    "\"complementary \"", "\"solution \"", "\"and \"", 
                    "\"particular \"", "\"solution.\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    "\"Find the complementary solution by solving \"", 
                    FontColor -> GrayLevel[0.5], StripOnInput -> False], 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 
                    $CellContext`y[$CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["0", TraditionalForm]]], 
                    ExpressionCell[0]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], 
                    StyleBox[
                    "\":\"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False]}, "RowDefault"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Assume \"", "\"a \"", "\"solution \"", "\"will \"", 
                    "\"be \"", "\"proportional \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"for \"", "\"some \"", "\"constant \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\".\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"y", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`y[$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    "\" \""}, "RowDefault"], "\"into \"", "\"the \"", 
                    "\"differential \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", {$CellContext`x, 2}][
                    E^($CellContext`\[Lambda] $CellContext`x)]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) $CellContext`\
\[Lambda]^2]], FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Factor \"", "\"out \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], "+", "1"}], HoldForm], 
                    ")"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{"\"Since \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], "\[NotEqual]", "0"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) != 0]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\" \""}, "RowDefault"], "\"for \"", "\"any \"", 
                    "\"finite \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "\",\"", "\" \""}, "RowDefault"], 
                    "\"the \"", "\"zeros \"", "\"must \"", "\"come \"", 
                    "\"from \"", "\"the \"", "\"polynomial:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], "+", "1"}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", "0"}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Solve \"", "\"for \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"\[Lambda]", "\[LongEqual]", 
                    TagBox["\[ImaginaryI]", HoldForm]}], 
                    StyleBox[
                    "\" or \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    RowBox[{"\[Lambda]", "\[LongEqual]", 
                    TagBox[
                    RowBox[{"-", "\[ImaginaryI]"}], HoldForm]}]}, 
                    "RowDefault"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"roots \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\"\[PlusMinus] \"", TraditionalForm]]], 
                    ExpressionCell["\[PlusMinus] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox["\[ImaginaryI]", HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    Complex[0, 1]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False]}, "RowDefault"], "\" \""}, "RowDefault"], 
                    "\"give \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "x", ")"}], "\[LongEqual]", 
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]]}]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 1][$CellContext`x] == 
                    E^(Complex[0, 1] $CellContext`x) 
                    Subscript[$CellContext`c, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\", \"", TraditionalForm]]], 
                    ExpressionCell[", "]], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "x", ")"}], "\[LongEqual]", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]]}]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 2][$CellContext`x] == 
                    E^(Complex[0, -1] $CellContext`x) 
                    Subscript[$CellContext`c, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"as \"", "\"solutions, \"", "\"where \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"are \"", "\"arbitrary \"", 
                    "\"constants.\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"is \"", 
                    "\"the \"", "\"sum \"", "\"of \"", "\"the \"", 
                    "\"above \"", "\"solutions:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "x", ")"}], "+", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "\[ImaginaryI]", " ", "x"}]]}]}], HoldForm]},
                     "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Apply \"", "\"Euler's \"", "\"identity \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    TagBox[
                    RowBox[{"\[Alpha]", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]}], HoldForm]], 
                    "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "\[Alpha]"], " ", 
                    RowBox[{"cos", "(", "\[Beta]", ")"}]}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    SuperscriptBox["\[ExponentialE]", "\[Alpha]"], " ", 
                    RowBox[{"sin", "(", "\[Beta]", ")"}]}]}], HoldForm]}], 
                    HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    E^CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`\[Alpha], Complex[0, 1] $CellContext`\[Beta]] == 
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[E^$CellContext`\[Alpha] Cos[$CellContext`\[Beta]], Complex[0, 1] 
                    E^$CellContext`\[Alpha] Sin[$CellContext`\[Beta]]]]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"cos", "(", "x", ")"}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"sin", "(", "x", ")"}]}]}], HoldForm], ")"}]}], 
                    "+", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"cos", "(", "x", ")"}], "-", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"sin", "(", "x", ")"}]}]}], HoldForm], ")"}]}]}], 
                    HoldForm]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Regroup \"", "\"terms:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SubscriptBox["c", "1"], "+", 
                    SubscriptBox["c", "2"]}], HoldForm], ")"}], " ", 
                    RowBox[{"cos", "(", "x", ")"}]}], "+", 
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SubscriptBox["c", "1"], "-", 
                    SubscriptBox["c", "2"]}], HoldForm], ")"}], " ", 
                    RowBox[{"sin", "(", "x", ")"}]}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Redefine \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    SubscriptBox["c", "1"], "+", 
                    SubscriptBox["c", "2"]}], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    Subscript[$CellContext`c, 1], 
                    Subscript[$CellContext`c, 2]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"as \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], 
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SubscriptBox["c", "1"], "-", 
                    SubscriptBox["c", "2"]}], HoldForm], ")"}]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    Complex[0, 1] 
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    Subscript[$CellContext`c, 1], -
                    Subscript[$CellContext`c, 2]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"as \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\",\"", 
                    "\" \""}, "RowDefault"], "\"since \"", "\"these \"", 
                    "\"are \"", "\"arbitrary \"", "\"constants:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    RowBox[{"cos", "(", "x", ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    RowBox[{"sin", "(", "x", ")"}]}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Determine \"", "\"the \"", "\"particular \"", 
                    "\"solution \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], "\[LongEqual]", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SuperscriptBox["cos", "2"], "(", "x", ")"}]}]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 
                    $CellContext`y[$CellContext`x]] == 
                    2 Cos[$CellContext`x]^2]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"by \"", "\"the \"", "\"method \"", "\"of \"", 
                    "\"undetermined \"", "\"coefficients:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Simplify:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{"1", "+", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"particular \"", "\"solution \"", 
                    "\"will \"", "\"be \"", "\"the \"", "\"sum \"", "\"of \"",
                     "\"the \"", "\"particular \"", "\"solutions \"", 
                    "\"to \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 
                    $CellContext`y[$CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], 
                    ExpressionCell[1]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 
                    $CellContext`y[$CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    Cos[2 $CellContext`x]]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], "\".\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"particular \"", "\"solution \"", "\"to \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 
                    $CellContext`y[$CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], 
                    ExpressionCell[1]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"is \"", "\"of \"", "\"the \"", 
                    "\"form:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", 
                    SubscriptBox["p", "1"]], "(", "x", ")"}], "\[LongEqual]", 
                    SubscriptBox["a", "1"]}]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"particular \"", "\"solution \"", "\"to \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 
                    $CellContext`y[$CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    Cos[2 $CellContext`x]]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"is \"", "\"of \"", "\"the \"", 
                    "\"form:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", 
                    SubscriptBox["p", "2"]], "(", "x", ")"}], "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "3"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm]}]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Sum \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", 
                    SubscriptBox["p", "1"]], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 
                    Subscript[$CellContext`p, 1]][$CellContext`x]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", 
                    SubscriptBox["p", "2"]], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 
                    Subscript[$CellContext`p, 2]][$CellContext`x]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\" \""}, "RowDefault"], "\"to \"", 
                    "\"obtain \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False], "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", 
                    SubscriptBox["p", "1"]], "(", "x", ")"}], "+", 
                    RowBox[{
                    SubscriptBox["y", 
                    SubscriptBox["p", "2"]], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    SubscriptBox["a", "1"], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "3"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Solve \"", "\"for \"", "\"the \"", "\"unknown \"", 
                    "\"constants \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\", \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[", ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\", \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[", ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style["and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "3"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 3]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Compute \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x], {$CellContext`x, 2}]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SubscriptBox["a", "1"], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "3"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm], ")"}]}], 
                    HoldForm]}, "RowDefault"]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "4", " ", 
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "-", 
                    RowBox[{"4", " ", 
                    SubscriptBox["a", "3"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{" \[LongEqual] "}}, 
                    "Rows" -> {{" \[LongEqual] "}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Substitute \"", "\"the \"", "\"particular \"", 
                    "\"solution \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False], "\" \""}, "RowDefault"], "\"into \"", "\"the \"", 
                    "\"differential \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}], "+", "1"}], HoldForm], 
                    HoldForm]}, "RowDefault"], HoldForm]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "4", " ", 
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "-", 
                    RowBox[{"4", " ", 
                    SubscriptBox["a", "3"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    SubscriptBox["a", "1"], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "3"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}], "+", "1"}], HoldForm], 
                    HoldForm]}, "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Simplify:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    SubscriptBox["a", "1"], "-", 
                    RowBox[{"3", " ", 
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "-", 
                    RowBox[{"3", " ", 
                    SubscriptBox["a", "3"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{"1", "+", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Equate \"", "\"the \"", "\"coefficients \"", "\"of \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], 
                    ExpressionCell[1]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"on \"", "\"both \"", "\"sides \"", "\"of \"", 
                    "\"the \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    SubscriptBox["a", "1"], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", "1"}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Equate \"", "\"the \"", "\"coefficients \"", "\"of \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    Cos[2 $CellContext`x]]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"on \"", "\"both \"", "\"sides \"", "\"of \"", 
                    "\"the \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"-", "3", " ", 
                    SubscriptBox["a", "2"]}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", "1"}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Equate \"", "\"the \"", "\"coefficients \"", "\"of \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    Sin[2 $CellContext`x]]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"on \"", "\"both \"", "\"sides \"", "\"of \"", 
                    "\"the \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"-", "3", " ", 
                    SubscriptBox["a", "3"]}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", "0"}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Solve \"", "\"the \"", "\"system:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    SubscriptBox["a", "1"], "\[LongEqual]", "1"}]}, {
                    RowBox[{
                    SubscriptBox["a", "2"], "\[LongEqual]", 
                    RowBox[{"-", 
                    FractionBox["1", "3"]}]}]}, {
                    RowBox[{
                    SubscriptBox["a", "3"], "\[LongEqual]", "0"}]}}, 
                    RowSpacings -> 1, ColumnSpacings -> 3, RowAlignments -> 
                    Baseline, ColumnAlignments -> Left], 
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$, TableSpacing == {1, 3}]]]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\", \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[", ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\", \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[", ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style["and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "3"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 3]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"into \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    SubscriptBox["a", "1"], "+", 
                    RowBox[{
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}], " ", 
                    SubscriptBox["a", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}], " ", 
                    SubscriptBox["a", "3"]}]}], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    Subscript[$CellContext`a, 1], Cos[2 $CellContext`x] 
                    Subscript[$CellContext`a, 2], Sin[2 $CellContext`x] 
                    Subscript[$CellContext`a, 3]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "3"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", "1"}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"is:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "\"c\""], "(", "x", ")"}], "+", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "3"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    RowBox[{"cos", "(", "x", ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    RowBox[{"sin", "(", "x", ")"}]}], "+", "1"}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "Solve with undetermined coefficients", 
         "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Solve with undetermined coefficients", "input" -> 
           "DifferentialEquationSolution__Solve with undetermined \
coefficients"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Solve with variation of parameters", "input" -> 
           "DifferentialEquationSolution__Solve with variation of \
parameters"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Solve with Laplace transform", "input" -> 
           
           "DifferentialEquationSolution__Solve with Laplace transform"}, \
{}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "DifferentialEquationSolution__Hide steps"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "3.41", 
    "parsetiming" -> "0.654", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa837236hahe0fd845dg000003h506d2d7be7c002", "host" -> 
    "http://www3.wolframalpha.com", "server" -> "28", "related" -> 
    "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa838236hahe0fd845dg0000035bg78ce0h7ai68f2404638749508410477", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2018, 11, 2, 22, 19, 10.9113038`8.790451609752038}, "Line" -> 
    5, "SessionID" -> 29637887492008905688}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "y''[x]+y[x]\[Equal]2*((Cos(x))^2)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{2369., {3023., 3035.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.750182351124733*^9},ExpressionUUID->"51afee21-c3a2-4c6c-affb-\
2b914fbd9338"]
}, Open  ]]
},
WindowSize->{2560, 1357},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>2. Inherited,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 518, 11, 136, "Input",ExpressionUUID->"9e6a543b-a5f8-4140-ba81-b6fbfee22bcc"],
Cell[1101, 35, 44454, 950, 2986, "Output",ExpressionUUID->"2108a064-015f-40b1-aa42-013cb8194d53"]
}, Open  ]],
Cell[45570, 988, 149, 3, 57, "Input",ExpressionUUID->"a5b67ce1-ec25-4548-b559-366ab86dccd4"],
Cell[CellGroupData[{
Cell[45744, 995, 552, 17, 62, "Input",ExpressionUUID->"3668a989-00a7-45f0-b2be-57327be60211"],
Cell[46299, 1014, 500, 16, 96, "Output",ExpressionUUID->"3cb5b647-3bbd-49e6-8fc8-c7284a530491"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46836, 1035, 521, 15, 57, "Input",ExpressionUUID->"3d09e208-d5e6-482a-be2f-06c1e6b91a58"],
Cell[47360, 1052, 603, 18, 99, "Output",ExpressionUUID->"b094717b-a66e-4a4b-9220-e908e77661ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48000, 1075, 509, 11, 97, "Input",ExpressionUUID->"ddea5ae8-38d3-46af-a76a-354e0317debd"],
Cell[48512, 1088, 72548, 1553, 5616, "Output",ExpressionUUID->"65fa4435-2a02-41f9-bd38-17dd82c6599f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121097, 2646, 514, 11, 57, "Input",ExpressionUUID->"465598ec-9d0f-4fdb-92ba-d796df0c35d1"],
Cell[121614, 2659, 94542, 2058, 6127, "Output",ExpressionUUID->"51afee21-c3a2-4c6c-affb-2b914fbd9338"]
}, Open  ]]
}
]
*)

