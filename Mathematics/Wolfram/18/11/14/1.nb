(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    353779,       7445]
NotebookOptionsPosition[    345425,       7291]
NotebookOutlinePosition[    345803,       7307]
CellTagsIndexPosition[    345760,       7304]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["3", "x"], "+", 
      SuperscriptBox["4", "x"], "-", 
      SuperscriptBox["6", "x"]}], ")"}], 
    RowBox[{"Tan", "[", 
     FractionBox[
      RowBox[{"\[Pi]", "*", "x"}], "2"], "]"}]], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.751201706211417*^9, 3.751201732705824*^9}, {
  3.7512021881425467`*^9, 
  3.7512022028419266`*^9}},ExpressionUUID->"5bc024b6-ecc0-4235-b237-\
fa0a4b8eff4a"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox["729", "16"], ")"}], 
  FractionBox["1", "\[Pi]"]]], "Output",
 CellChangeTimes->{
  3.751202203439875*^9},ExpressionUUID->"69596e84-960c-43de-91c4-\
91e5337a4feb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["729", "16"], ")"}], 
   FractionBox["1", "\[Pi]"]], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7512249815896463`*^9, 
  3.7512249839038506`*^9}},ExpressionUUID->"4f401033-11c6-49c6-b672-\
ba029efbe856"],

Cell[BoxData["3.372493948681391`"], "Output",
 CellChangeTimes->{
  3.7512249848190527`*^9},ExpressionUUID->"d3a01c33-63b0-43b4-aa3d-\
d24523884f7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}], ")"}], 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", "1"}], ")"}], 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "2"}], "x"}]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7512083873930254`*^9, 
  3.7512084292350616`*^9}},ExpressionUUID->"14d099cc-1d14-46c2-ab39-\
0c64c1132225"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "x"], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["x", "2"]}], ")"}], " ", 
       RowBox[{"C", "[", "1", "]"}]}], "x"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7512084296745195`*^9},ExpressionUUID->"b6ae42d2-3c62-4610-b604-\
02242d3bd91f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Log", "[", "x", "]"}], "-", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "2"}], "x"}], 
     RowBox[{"x", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}], ")"}]}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"A", "[", "x", "]"}]]}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7512094851304493`*^9, 3.751209522215723*^9}, {
   3.7512096440492115`*^9, 3.751209669014227*^9}, {3.7512097029516125`*^9, 
   3.7512097138369093`*^9}, 3.7512097858816357`*^9, {3.7512098346500883`*^9, 
   3.7512098526661854`*^9}, {3.751209887174341*^9, 3.751209940214136*^9}, {
   3.751209979584767*^9, 
   3.751210005091419*^9}},ExpressionUUID->"814dfa41-1ecc-4c3f-8065-\
76189c8d7406"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["x", "2"]}]]], "Output",
 CellChangeTimes->{{3.751209827994093*^9, 3.7512098531527348`*^9}, 
   3.7512099405971107`*^9, {3.75120998007745*^9, 
   3.7512100056778517`*^9}},ExpressionUUID->"21021af5-505d-4950-8fae-\
bba5234ab643"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "2"}], "x"}], 
   RowBox[{"x", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}], ")"}]}]], 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"A", "[", "x", "]"}]]}]], "Input",ExpressionUUID->"3ee9e518-877a-\
4a1b-8ac5-b1339767e684"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "x"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{
  3.751210014392908*^9},ExpressionUUID->"b5ba64ca-bcec-4787-a43d-\
2f804332c937"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
     RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", 
    RowBox[{"Cosh", "[", "x", "]"}]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.751213666375537*^9, 
  3.751213695072951*^9}},ExpressionUUID->"74293d66-b765-4b03-9355-\
25f531ea7233"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      FractionBox["1", "8"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "x"}]], "-", 
        RowBox[{"2", " ", "x"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]], " ", "x"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.751213701781749*^9, 
  3.7512137166559377`*^9}},ExpressionUUID->"f1ec2fd3-55a7-4d50-8947-\
07f27e56613b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "8"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], "-", 
      RowBox[{"2", " ", "x"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "x"}]], " ", "x"}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "x"], " ", 
    RowBox[{"C", "[", "1", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]], " ", 
    RowBox[{"C", "[", "2", "]"}]}]}]}]], "Input",
 NumberMarks->False,ExpressionUUID->"c5cc6000-f340-4b99-a61a-9cadd9c7ab32"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"Sinh", "[", "x", "]"}], "2"], "*", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "2"], "+", "x"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7512138743115764`*^9, 
  3.751213934726386*^9}},ExpressionUUID->"47d712d5-3ce1-4fa7-9509-\
d9cc7e3a6f06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "''"}], "[", "x", "]"}], "-", 
  RowBox[{"f", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.7512139174412813`*^9, 
  3.751213921746046*^9}},ExpressionUUID->"709ff97b-08ff-4a11-8d3d-\
ca0fddb5347b"],

Cell[BoxData[
 RowBox[{"Cosh", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.7512139225374613`*^9, 
  3.7512139374299617`*^9}},ExpressionUUID->"53fb330d-35db-4c9a-bda5-\
f29b958dea17"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    SubscriptBox["\[Integral]", "0"], "x"], 
   RowBox[{
    RowBox[{"g", "[", "t", "]"}], 
    RowBox[{"\[DifferentialD]", "t"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7512153175456095`*^9, 3.751215387477701*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"73169c8a-22f2-46f4-b443-6d26baa481bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"2", "+", 
    RowBox[{"Sinh", "[", "x", "]"}], "-", 
    RowBox[{"Cosh", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7512096223762064`*^9, 3.7512096477268953`*^9}, {
  3.75121681421262*^9, 3.7512168379818773`*^9}, {3.7512168793950887`*^9, 
  3.7512168841200037`*^9}},ExpressionUUID->"efdc0715-184e-4cf9-a57e-\
1359181e7769"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$15503#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.999999591836735, 9.999999591836735}, {-2, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.751216838453614*^9, {3.751216880513242*^9, 
   3.751216886336263*^9}},ExpressionUUID->"860c6f2c-2d3b-434a-aca8-\
b0f64fd9986f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Sinh", "[", "x", "]"}], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "x"], 
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], 
      RowBox[{"Cosh", "[", "t", "]"}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
   RowBox[{
    RowBox[{"Cosh", "[", "x", "]"}], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "x"], 
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], 
      RowBox[{"Sinh", "[", "t", "]"}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7512169646729994`*^9, 3.7512170686466646`*^9}, {
  3.751217125847873*^9, 
  3.75121712803526*^9}},ExpressionUUID->"07940388-9e9f-4572-986d-\
a75067796df3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"g", "'"}], "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7512170715918145`*^9, 
  3.7512170798876176`*^9}},ExpressionUUID->"b8270d65-8272-4662-9ea4-\
59dd8f26a736"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cosh", "[", "x", "]"}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "x"], 
    RowBox[{
     RowBox[{
      RowBox[{"Cosh", "[", "t", "]"}], " ", 
      RowBox[{"f", "[", "t", "]"}]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "x"], 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t", "]"}], " ", 
       RowBox[{"Sinh", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], " ", 
   RowBox[{"Sinh", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.751217073464484*^9, 3.7512170802855544`*^9}, 
   3.7512171306870832`*^9},ExpressionUUID->"1fd0dc94-fa4b-46ea-a33f-\
a00bea76ea76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "''"}], "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"g", "''"}], "[", "x", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.751217085583987*^9, 3.751217089265773*^9}, {
  3.7512176598532267`*^9, 
  3.7512176621102095`*^9}},ExpressionUUID->"4282d3ae-74e1-4f7a-9cfc-\
4f242e39be12"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"Cosh", "[", "x", "]"}], "2"], " ", 
   RowBox[{"f", "[", "x", "]"}]}], "-", 
  RowBox[{
   RowBox[{"Cosh", "[", "x", "]"}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "x"], 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], " ", 
      RowBox[{"Sinh", "[", "t", "]"}]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "x"], 
     RowBox[{
      RowBox[{
       RowBox[{"Cosh", "[", "t", "]"}], " ", 
       RowBox[{"f", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], " ", 
   RowBox[{"Sinh", "[", "x", "]"}]}], "-", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sinh", "[", "x", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.751217089656787*^9, 3.7512171327527246`*^9, 
  3.7512176624899063`*^9},ExpressionUUID->"b2312d13-3c1d-456d-a3fc-\
af0d4cb2b6ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], "-", 
  RowBox[{
   RowBox[{"Cosh", "[", "x", "]"}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "x"], 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], " ", 
      RowBox[{"Sinh", "[", "t", "]"}]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "x"], 
     RowBox[{
      RowBox[{
       RowBox[{"Cosh", "[", "t", "]"}], " ", 
       RowBox[{"f", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], " ", 
   RowBox[{"Sinh", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.751217089656787*^9, 3.7512171327527246`*^9, 
  3.7512176625716877`*^9},ExpressionUUID->"0213e85d-1b11-4510-aae2-\
37c34496fdb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "''"}], "[", "x", "]"}], "-", 
   RowBox[{"g", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7512170922572045`*^9, 
  3.7512171027092752`*^9}},ExpressionUUID->"a5a93334-4548-47a1-bb5b-\
4f6f92ec2aec"],

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.751217096727062*^9, 3.751217103148102*^9}, 
   3.751217136032881*^9},ExpressionUUID->"cce0a772-808a-4820-810f-\
72d3c5511f3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.7512193040447135`*^9, 
  3.751219307103326*^9}},ExpressionUUID->"2c6dd358-4bd8-43a3-a13e-\
632f4fdaad7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Cosh", "[", "\[Pi]", "]"}]}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], " ", 
      RowBox[{"Sinh", "[", "t", "]"}]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
     RowBox[{
      RowBox[{
       RowBox[{"Cosh", "[", "t", "]"}], " ", 
       RowBox[{"f", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], " ", 
   RowBox[{"Sinh", "[", "\[Pi]", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.751219307570078*^9},ExpressionUUID->"6106b496-a054-44df-8afa-\
6eacf84ef23e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "'"}], "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.7512193842764645`*^9, 
  3.7512193866392484`*^9}},ExpressionUUID->"f470b62c-9bdb-477c-a41e-\
608de1bbbc97"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cosh", "[", "\[Pi]", "]"}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
    RowBox[{
     RowBox[{
      RowBox[{"Cosh", "[", "t", "]"}], " ", 
      RowBox[{"f", "[", "t", "]"}]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t", "]"}], " ", 
       RowBox[{"Sinh", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], " ", 
   RowBox[{"Sinh", "[", "\[Pi]", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.751219387110987*^9},ExpressionUUID->"64d2d2c1-e1e7-4670-8baa-\
72a4e3af01be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"x", "+", "Pi"}], "]"}], "-", 
  RowBox[{"g", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.7512193174611216`*^9, 
  3.751219325512063*^9}},ExpressionUUID->"4bf41877-5157-4170-9559-\
dcb81e651ac5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cosh", "[", "x", "]"}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "x"], 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], " ", 
      RowBox[{"Sinh", "[", "t", "]"}]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
  RowBox[{
   RowBox[{"Cosh", "[", 
    RowBox[{"\[Pi]", "+", "x"}], "]"}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     RowBox[{"\[Pi]", "+", "x"}]], 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], " ", 
      RowBox[{"Sinh", "[", "t", "]"}]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "x"], 
     RowBox[{
      RowBox[{
       RowBox[{"Cosh", "[", "t", "]"}], " ", 
       RowBox[{"f", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], " ", 
   RowBox[{"Sinh", "[", "x", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", 
      RowBox[{"\[Pi]", "+", "x"}]], 
     RowBox[{
      RowBox[{
       RowBox[{"Cosh", "[", "t", "]"}], " ", 
       RowBox[{"f", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], " ", 
   RowBox[{"Sinh", "[", 
    RowBox[{"\[Pi]", "+", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7512193259060106`*^9},ExpressionUUID->"d57fde02-f5e6-4167-8acb-\
02020639eded"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "x_", "]"}], "=", 
  RowBox[{"f", "[", 
   RowBox[{"\[Phi]", "[", "x", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.751223553004963*^9, 3.7512235700951385`*^9}, {
  3.7512236046890273`*^9, 
  3.751223724572612*^9}},ExpressionUUID->"a43bbb22-0b77-49f9-a011-\
18e1b786a413"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"\[Phi]", "[", "x", "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.751223701958395*^9, 
  3.7512237252981806`*^9}},ExpressionUUID->"ade5e75b-3902-41fe-9d8c-\
0b70c28b3b66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.751223703582409*^9, 
  3.751223729636119*^9}},ExpressionUUID->"f4916ee2-9617-48ba-b6c8-\
b06dbd7d4c3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["f", "\[Prime]",
    MultilineFunction->None], "[", 
   RowBox[{"\[Phi]", "[", "x", "]"}], "]"}], " ", 
  RowBox[{
   SuperscriptBox["\[Phi]", "\[Prime]",
    MultilineFunction->None], "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.7512237042875233`*^9, 
  3.751223729990938*^9}},ExpressionUUID->"13c59049-5e59-49f2-99c5-\
c1bec97fd236"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "''"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.7512237315874977`*^9, 
  3.7512237331977043`*^9}},ExpressionUUID->"1dbe8cee-26c4-4c22-9abd-\
dfc7cb583607"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], "2"], " ", 
   RowBox[{
    SuperscriptBox["f", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", 
    RowBox[{"\[Phi]", "[", "x", "]"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{
    SuperscriptBox["f", "\[Prime]",
     MultilineFunction->None], "[", 
    RowBox[{"\[Phi]", "[", "x", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.751223733488923*^9},ExpressionUUID->"08f44796-976e-46ee-b483-\
cfb228e89bcd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["3", "x"], "+", 
    SuperscriptBox["4", "x"], "-", 
    SuperscriptBox["6", "x"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.751224773750266*^9, 3.751224820927472*^9}, {
  3.7512250198192124`*^9, 
  3.751225020120407*^9}},ExpressionUUID->"2e10d30b-ea42-4035-bbe4-\
df8bf4e25ca6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", 
       RowBox[{"Log", "[", "3", "]"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Log", "[", "4", "]"}]}], "-", 
      RowBox[{"6", " ", 
       RowBox[{"Log", "[", "6", "]"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"x", "-", "1"}], ")"}]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"x", "-", "1"}], "]"}], "2"],
    SeriesData[$CellContext`x, 1, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 1, {1, 3 Log[3] + 4 Log[4] - 6 Log[6]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7512247876366415`*^9, 3.7512248213453555`*^9}, 
   3.751225020451081*^9},ExpressionUUID->"3a8139cc-0243-45f8-aebf-\
44a3e9637705"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{"Pi", "*", 
     FractionBox["x", "2"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.751224858297044*^9, 3.751224881858019*^9}, {
  3.7512250087986298`*^9, 
  3.7512250347170763`*^9}},ExpressionUUID->"160159bb-0a35-4527-af3d-\
6a65d74e1e79"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox["2", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{"x", "-", "1"}], ")"}]}]]}], "+", 
   RowBox[{
    FractionBox["1", "6"], " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{"x", "-", "1"}], ")"}]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", 
      RowBox[{"x", "-", "1"}], "]"}], "3"],
    SeriesData[$CellContext`x, 1, {}, -1, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 1, {(-2)/Pi, 0, Rational[1, 6] Pi}, -1, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7512248713818345`*^9, 3.7512248822479763`*^9}, {
  3.751225031997086*^9, 
  3.751225035085235*^9}},ExpressionUUID->"4613727d-f743-4a1a-9193-\
dc778f0c7847"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "3", "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"Log", "[", "4", "]"}]}], "-", 
       RowBox[{"6", " ", 
        RowBox[{"Log", "[", "6", "]"}]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", "1"}], ")"}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["2", 
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", "1"}], ")"}]}]]}], "+", 
       RowBox[{
        FractionBox["1", "6"], " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}]}]}]]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7512248981146264`*^9, 3.75122494047964*^9}, {
  3.751225010932188*^9, 3.7512250112283955`*^9}, {3.751225042193801*^9, 
  3.751225091056655*^9}},ExpressionUUID->"282d2f5f-29d2-41b3-90f4-\
af00b3f217fe"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    InterpretationBox[
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], "]"}]}], 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "1"}], ")"}]}]]}], "+", 
      RowBox[{
       FractionBox["1", "6"], " ", "\[Pi]", " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}]}], "+", 
      InterpretationBox[
       SuperscriptBox[
        RowBox[{"O", "[", 
         RowBox[{"x", "-", "1"}], "]"}], "3"],
       SeriesData[$CellContext`x, 1, {}, -1, 3, 1],
       Editable->False]}],
     SeriesData[$CellContext`x, 
      1, {(-2) Pi^(-1) Log[-1 + $CellContext`x], 0, Rational[1, 6] Pi 
       Log[-1 + $CellContext`x]}, -1, 3, 1],
     Editable->False]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", 
      RowBox[{"Log", "[", "3", "]"}]}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"Log", "[", "4", "]"}]}], "-", 
     RowBox[{"6", " ", 
      RowBox[{"Log", "[", "6", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.7512250589160557`*^9, 
  3.751225091420243*^9}},ExpressionUUID->"ec9fe257-bfdf-4c51-8b84-\
76e3b9889c88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "x"}], "]"}]}], 
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", "1"}], ")"}]}]]}], "+", 
       RowBox[{
        FractionBox["1", "6"], " ", "\[Pi]", " ", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}]}]}]]}], ",", 
    RowBox[{"x", "\[Rule]", "1"}]}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7512249440638*^9, 3.7512249747158403`*^9}, {
  3.7512250717621503`*^9, 
  3.751225229236247*^9}},ExpressionUUID->"2efa2e91-fc54-4efb-a873-\
e86488fa9c26"],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{{3.751224965607659*^9, 3.751224975516073*^9}, 
   3.7512250724345098`*^9, {3.751225170143379*^9, 3.7512251811541214`*^9}, {
   3.7512252201129584`*^9, 
   3.7512252298482094`*^9}},ExpressionUUID->"c5e06533-fd7b-4387-87a5-\
c1a045f73923"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", "^", "x"}], " ", "+", " ", 
      RowBox[{"4", "^", "x"}], " ", "-", " ", 
      RowBox[{"6", "^", "x"}]}], ")"}], "^", 
    RowBox[{"Tan", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Pi", "*", "x"}], ")"}], "/", "2"}], "]"}]}], ",", " ", 
   RowBox[{"x", " ", "->", " ", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.751225762726805*^9, 3.7512257705814366`*^9}, 
   3.7512258089627547`*^9},ExpressionUUID->"b8b48adc-da09-4bdf-83a6-\
57015c2141a7"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox["729", "16"], ")"}], 
  FractionBox["1", "\[Pi]"]]], "Output",
 CellChangeTimes->{
  3.7512258141873536`*^9},ExpressionUUID->"1211b9a2-55b6-4839-ae9e-\
b22c8d0da52f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  "\"\<Limit[(3^x + 4^x - 6^x)^Tan[(Pi*x)/2], x -> 1]\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.751225821915284*^9, 
  3.75122587768604*^9}},ExpressionUUID->"b969705d-fc74-41b4-9575-\
b89b44556758"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Limit[(3^x + 4^x - 6^x)^Tan[(Pi*x)/2], x -> 1]", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, PodStates -> {"Limit__Step-by-step solution"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Limit", "scanner" -> "Limit", "id" -> "Limit", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "2", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Limit[(3^x + 4^x - 6^x)^Tan[(Pi x)/2], x -> 1]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{
                 UnderscriptBox["lim", 
                  RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                 StyleBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], ")"}], 
                   RowBox[{"tan", "(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Pi]", " ", "x"}], ")"}], "/", "2"}], ")"}]], 
                  ScriptLevel -> 0, StripOnInput -> False]}], "\[LongEqual]", 
               TagBox[
                RadicalBox[
                 FractionBox["729", "16"], "\[Pi]"], Identity]}], HoldForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"Find the following limit\""}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], 
                    RowBox[{"tan", "(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Pi]", " ", "x"}], ")"}], "/", "2"}], ")"}]]}], 
                    ScriptLevel -> 0, StripOnInput -> False], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], 
                    RowBox[{"tan", "(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Pi]", " ", "x"}], ")"}], "/", "2"}], ")"}]], 
                    HoldForm], "\[LongEqual]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], 
                    RowBox[{"tan", "(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Pi]", " ", "x"}], ")"}], "/", "2"}], ")"}]]}]},
                     "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], 
                    RowBox[{"tan", "(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Pi]", " ", "x"}], ")"}], "/", "2"}], ")"}]]}], 
                    ScriptLevel -> 0, StripOnInput -> False], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], 
                    RowBox[{"tan", "(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Pi]", " ", "x"}], ")"}], "/", "2"}], ")"}]]}], 
                    ScriptLevel -> 0, StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    RowBox[{"exp", "(", 
                    TagBox[
                    RowBox[{"log", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], 
                    RowBox[{"tan", "(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Pi]", " ", "x"}], ")"}], "/", "2"}], ")"}]], 
                    ")"}], HoldForm], ")"}]}], ScriptLevel -> 0, StripOnInput -> 
                    False]}, "RowDefault"]}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    RowBox[{"exp", "(", 
                    RowBox[{"log", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], 
                    RowBox[{"tan", "(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Pi]", " ", "x"}], ")"}], "/", "2"}], ")"}]], 
                    ")"}], ")"}]}], ScriptLevel -> 0, StripOnInput -> False], 
                    HoldForm], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"exp", "(", 
                    RowBox[{"log", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], 
                    RowBox[{"tan", "(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Pi]", " ", "x"}], ")"}], "/", "2"}], ")"}]], 
                    ")"}], ")"}], "\[LongEqual]", 
                    RowBox[{"exp", "(", 
                    FrameBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], " ", 
                    RowBox[{"tan", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}], FrameStyle -> 
                    GrayLevel[0.8], FrameMargins -> 1, BaselinePosition -> 
                    Baseline, ContentPadding -> False, StripOnInput -> False],
                     ")"}]}]}, "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    RowBox[{"exp", "(", 
                    FrameBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], " ", 
                    RowBox[{"tan", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}], FrameStyle -> 
                    GrayLevel[0.8], FrameMargins -> 1, BaselinePosition -> 
                    Baseline, ContentPadding -> False, StripOnInput -> False],
                     ")"}]}], ScriptLevel -> 0, StripOnInput -> False], 
                    HoldForm], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    RowBox[{"exp", "(", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], " ", 
                    RowBox[{"tan", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}], ")"}]}], 
                    ScriptLevel -> 0, StripOnInput -> False], "\[LongEqual]", 
                    RowBox[{"exp", "(", 
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], " ", 
                    RowBox[{"tan", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}]}], ScriptLevel -> 
                    0, StripOnInput -> False], ")"}]}]}, "RowDefault"], 
                    "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TagBox[
                    FrameBox[
                    RowBox[{"exp", "(", 
                    TagBox[
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], " ", 
                    RowBox[{"tan", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}]}], ScriptLevel -> 
                    0, StripOnInput -> False], HoldForm], ")"}], FrameStyle -> 
                    GrayLevel[0.8], FrameMargins -> 1, BaselinePosition -> 
                    Baseline, ContentPadding -> False, StripOnInput -> False],
                     HoldForm], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{"\"Using \"", 
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    RowBox[{"tan", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}], HoldForm], 
                    "\[LongEqual]", 
                    TagBox[
                    FractionBox[
                    RowBox[{"sin", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}], 
                    TagBox[
                    RowBox[{"cos", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}], HoldForm]], 
                    HoldForm]}], "\",\"", "\" \""}, "RowDefault"], 
                    "\"write \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], " ", 
                    RowBox[{"tan", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}], "\" \""}, 
                    "RowDefault"], "\"as \"", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], " ", 
                    RowBox[{"sin", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}], 
                    TagBox[
                    RowBox[{"cos", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}], HoldForm]]}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TagBox[
                    RowBox[{"exp", "(", 
                    TagBox[
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], " ", 
                    RowBox[{"sin", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}], 
                    TagBox[
                    RowBox[{"cos", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}], HoldForm]]}], 
                    ScriptLevel -> 0, StripOnInput -> False], HoldForm], 
                    ")"}], HoldForm], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{"\"By \"", "\"the \"", "\"product \"", 
                    TemplateBox[{"\"rule,\\n\"", 
                    TemplateBox[{
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], " ", 
                    RowBox[{"sin", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}], 
                    TagBox[
                    RowBox[{"cos", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}], HoldForm]]}], 
                    ScriptLevel -> 0, StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    RowBox[{"sin", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}], ScriptLevel -> 
                    0, StripOnInput -> False], HoldForm], ")"}], " ", 
                    RowBox[{"(", 
                    TagBox[
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    FractionBox[
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], 
                    TagBox[
                    RowBox[{"cos", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}], HoldForm]]}], 
                    ScriptLevel -> 0, StripOnInput -> False], HoldForm], 
                    ")"}]}]}, "RowDefault"]}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TagBox[
                    RowBox[{"exp", "(", 
                    RowBox[{
                    TagBox[
                    FrameBox[
                    TagBox[
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    RowBox[{"sin", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}], ScriptLevel -> 
                    0, StripOnInput -> False], HoldForm], FrameStyle -> 
                    GrayLevel[0.8], FrameMargins -> 1, BaselinePosition -> 
                    Baseline, ContentPadding -> False, StripOnInput -> False],
                     HoldForm], " ", 
                    TagBox[
                    FrameBox[
                    TagBox[
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    FractionBox[
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], 
                    TagBox[
                    RowBox[{"cos", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}], HoldForm]]}], 
                    ScriptLevel -> 0, StripOnInput -> False], HoldForm], 
                    FrameStyle -> GrayLevel[0.8], FrameMargins -> 1, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    StripOnInput -> False], HoldForm]}], ")"}], HoldForm], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    RowBox[{"sin", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}], ScriptLevel -> 
                    0, StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    RowBox[{"sin", "(", 
                    TagBox[
                    FractionBox["\[Pi]", "2"], HoldForm], ")"}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "1"}, "RowDefault"]}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TagBox[
                    RowBox[{"exp", "(", 
                    TagBox[
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    FractionBox[
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], 
                    TagBox[
                    RowBox[{"cos", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}], HoldForm]]}], 
                    ScriptLevel -> 0, StripOnInput -> False], HoldForm], 
                    ")"}], HoldForm], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Applying \"", "\"l'H\[OHat]pital's \"", "\"rule, \"", 
                    "\"we \"", "\"get \"", 
                    TemplateBox[{"\"that\\n\"", 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    FractionBox[
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], 
                    RowBox[{"cos", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]]}], ScriptLevel -> 
                    0, StripOnInput -> False], "\"\[LongEqual]\"", 
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    FractionBox[
                    RowBox[{
                    FractionBox["\[DifferentialD]", 
                    RowBox[{"\[DifferentialD]", "x"}]], 
                    RowBox[{"log", "(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}]}], 
                    RowBox[{
                    FractionBox["\[DifferentialD]", 
                    RowBox[{"\[DifferentialD]", "x"}]], 
                    RowBox[{"cos", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}]]}], 
                    ScriptLevel -> 0, StripOnInput -> False]}, {
                    "\"\"", "\"\[LongEqual]\"", 
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    FractionBox[
                    FractionBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["3", "x"], " ", 
                    RowBox[{"log", "(", "3", ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["4", "x"], " ", 
                    RowBox[{"log", "(", "4", ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["6", "x"], " ", 
                    RowBox[{"log", "(", "6", ")"}]}]}], HoldForm], 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "x"], "+", 
                    SuperscriptBox["4", "x"], "-", 
                    SuperscriptBox["6", "x"]}], HoldForm]], 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", "\[Pi]", " ", 
                    RowBox[{"sin", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}]}]]}], 
                    ScriptLevel -> 0, StripOnInput -> False]}, {
                    "\"\"", "\"\[LongEqual]\"", 
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["3", "x"], " ", 
                    RowBox[{"log", "(", "3", ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["4", "x"], " ", 
                    RowBox[{"log", "(", "4", ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["6", "x"], " ", 
                    RowBox[{"log", "(", "6", ")"}]}]}], HoldForm], ")"}]}], 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["3", "x"]}], "-", 
                    SuperscriptBox["4", "x"], "+", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], " ", 
                    TagBox[
                    RowBox[{"sin", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}], 
                    HoldForm]}]]}]}], ScriptLevel -> 0, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, "RowDefault"]}, "RowDefault"], 
                    "\"\[InvisibleComma]\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TagBox[
                    RowBox[{"exp", "(", 
                    FrameBox[
                    TagBox[
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"log", "(", "3", ")"}], " ", 
                    SuperscriptBox["3", "x"]}], "-", 
                    RowBox[{
                    RowBox[{"log", "(", "4", ")"}], " ", 
                    SuperscriptBox["4", "x"]}], "+", 
                    RowBox[{
                    RowBox[{"log", "(", "6", ")"}], " ", 
                    SuperscriptBox["6", "x"]}]}], HoldForm], ")"}]}], 
                    RowBox[{"\[Pi]", " ", 
                    TagBox[
                    RowBox[{"sin", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}], HoldForm], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["3", "x"]}], "-", 
                    SuperscriptBox["4", "x"], "+", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}]}]]}]}], 
                    ScriptLevel -> 0, StripOnInput -> False], HoldForm], 
                    FrameStyle -> GrayLevel[0.8], FrameMargins -> 1, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    StripOnInput -> False], ")"}], HoldForm], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    RowBox[{
                    UnderscriptBox["lim", 
                    RowBox[{"x", "\[Rule]", "1"}]], "\[ThinSpace]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["3", "x"], " ", 
                    RowBox[{"log", "(", "3", ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["4", "x"], " ", 
                    RowBox[{"log", "(", "4", ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["6", "x"], " ", 
                    RowBox[{"log", "(", "6", ")"}]}]}], HoldForm], ")"}]}], 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["3", "x"]}], "-", 
                    SuperscriptBox["4", "x"], "+", 
                    SuperscriptBox["6", "x"]}], HoldForm], ")"}], " ", 
                    TagBox[
                    RowBox[{"sin", "(", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "x"}], "2"], ")"}], 
                    HoldForm]}]]}]}], ScriptLevel -> 0, StripOnInput -> 
                    False], "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TemplateBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["3", 
                    TagBox["1", HoldForm]], " ", 
                    RowBox[{"log", "(", "3", ")"}]}], "-", 
                    RowBox[{
                    SuperscriptBox["4", 
                    TagBox["1", HoldForm]], " ", 
                    RowBox[{"log", "(", "4", ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["6", 
                    TagBox["1", HoldForm]], " ", 
                    RowBox[{"log", "(", "6", ")"}]}]}], HoldForm], ")"}]}], 
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["3", 
                    TagBox["1", HoldForm]]}], "-", 
                    SuperscriptBox["4", 
                    TagBox["1", HoldForm]], "+", 
                    SuperscriptBox["6", 
                    TagBox["1", HoldForm]]}], HoldForm], ")"}], " ", 
                    TagBox[
                    RowBox[{"sin", "(", 
                    TagBox[
                    FractionBox["\[Pi]", "2"], HoldForm], ")"}], 
                    HoldForm]}]]}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    FractionBox[
                    RowBox[{"log", "(", 
                    FractionBox["729", "16"], ")"}], "\[Pi]"]}, 
                    "RowDefault"]}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TagBox[
                    RowBox[{"exp", "(", 
                    FrameBox[
                    FractionBox[
                    RowBox[{"log", "(", 
                    FractionBox["729", "16"], ")"}], "\[Pi]"], FrameStyle -> 
                    GrayLevel[0.8], FrameMargins -> 1, BaselinePosition -> 
                    Baseline, ContentPadding -> False, StripOnInput -> False],
                     ")"}], HoldForm], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    RowBox[{"exp", "(", 
                    FractionBox[
                    RowBox[{"log", "(", 
                    FractionBox["729", "16"], ")"}], "\[Pi]"], ")"}], 
                    HoldForm], "\[LongEqual]", 
                    RadicalBox[
                    FractionBox["729", "16"], "\[Pi]"]}]}, "RowDefault"], 
                    "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    RadicalBox[
                    FractionBox["729", "16"], "\[Pi]"], HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "2"}, {
         XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                TemplateBox[{
                  RowBox[{"log", "(", "x", ")"}], "\" \"", 
                  "\"is the natural logarithm\""}, "RowDefault"], 
                TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}], 
         XMLElement["info", {"text" -> "R is the set of real numbers"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Reals.html", 
             "text" -> "Documentation", "title" -> "Documentation"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/R.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                TemplateBox[{
                  TagBox["\[DoubleStruckCapitalR]", 
                   Function[{}, Reals]], "\" \"", 
                  "\"is the set of real numbers\""}, "RowDefault"], 
                TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Limit__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> "Limit__Hide steps"}, {}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Plot", "scanner" -> "Limit", "id" -> "Plot", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot[(3^x + 4^x - 6^x)^Tan[(Pi x)/2], {x, -3.5, 5.5}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJw1knk01XsXxpHyG8hUSkRI5jEpw/l+T0mUQqKOHEPIkBBKlNmRoZskQ5mi
SKYSQmXYqTQQb1K3JNdcVwqXzNX1rvW+e61n7bX/2c+zPuuRcfa1OsrDxcWV
sKT/7lV8tp9//6bhSkmwNDWdibODFO+z5mn4EsD5Pq2eiTeNzCTcnaJBaO2P
he9eGVjvVZq6y9808G0/JfJ84gp2uNx5qrmDhlQT9dQMlTT8hTffRPoVDWsy
9gWwo1OxX2CAeNAzGjaNmR6r60nBHFuReqW6pf9Kv/nkci/jImlL3gsFNHjJ
R2Yp7b2EtS9Jvxu6RgPJt+JVcGMSruMZK0QZNPS3j7rz6ibhtqELZuOJNIza
d73Vtk3EUyUtyQeCaDi6SyBzLiQBh67PdC31pyHS/ziqTInHKy4e013uTUPE
gNUlpYo4LO5PdlUfoUHjbgT31M9zGG0zkVlnRkP2go1Q7rto/KxIbNLfmAa/
iAPdn8SjsaXE8JMWTMPUoAVSdY7CLr84HqE6NET5H6gs5I7Eo77W+u/Ul/Jk
1aeXsCJwYJ8cv4YSDW48nKMfPcJx3JOmO73raXByyDapmQzBwrrJkXprabiU
sbq4ofkszig8ciBZhIagkeH+vOtncFkC14wRHw0yurjL/mQQ7rBEqHCcglrR
SC23syexXZOAENdXCta7t0/yXgrAg5s/9bGGKHhE+Yjvvu2PZ8RCYqguCmad
M2WVf5/AEXFmh1w6KcgqaH12VvsEpubXKdW1UVCkczO/9oMPlvx0v9X7MQXZ
1dV6XqNe+KZ5fE5zPQXGhpbyL+KPYQ1gnZCupaA9T6tivY4n3nFjRvR1KQV6
3uZBsbfdsLvnFjudNApuyAHnrLYz5npx1F80iYKGhMzHzuuO4CuKafH/xFNQ
958pnZ6VTvj55+ma8lAKrP96VcHexsZOJgrtF09TUPGAKCzwOIxnbx4a9vGj
QLn4ssbBOyys6Fa7Su0oBWeEB0v0Q20wPP2iwu9IwRi5YLp2mTVmyYsbfWVR
sILN/lKeZYXjB4P9ivZSkFwwZhFIWGLZncVxcbsoeKPDtfFuxT784EbXNXcm
BeHVNV2PAs3wiLNBm7wOBVL+69FjJxMc1eQ1xKu+xKPt8LA+xxivk81aHFCg
wG3IUEDgqRGuiGwVfSxDgXTwZ8QnuwPv6VtUvi5Bwa2qNY4LV5m4n6m2I3L1
Eq+hM3fDDyF8Jtfe1kmQAg3jsGzHUgNc4tgQK7WMgn4et5/qfbp4Z+P3nJ+L
JJRNoqr6Oh3cLSVd3T1NQs92/5p+0MYnwyxePRwnoUvV+3j8V03M3xM+mDFC
ggn/NkmrU+o4n1G+EDxIQhTbXSGBpYINs3tFbHtI0E1zV/0Yoog7F4WUt70n
QfD9co/wHnl8nL19+5oOEvQc5wZaguUwb50fa7plya8mSlvLTAZnSVz3ffuU
BMlzejuDcqSwztmOc1WNJBRcjWhXXS6BW7t4ci7fJ+FdmX3IyidrsKv+5nv+
lSQEBzlOfO5chRevurTuLyNBv9FU8JGWCE6ZuzygWUjCqS7re41FgljN9sm8
YB4JTn3HYpL9aNxcOyU8lkFCKVLlRJfzYYe18kptKSScH48sy2Tz4unTNsyy
RBJE1U9muh7nxol/xhz6I46EiWf6Ea/LfqJNW6t9vKJI2DXzKthNYQ41pA3H
7AkhQZUtUpCz5Qc6OC2WrRRIQlzyREviiwn03cakijhBQmPKHDux+Bs6d+90
y2dPEjJEEnKvpX9BUqtv9Te7kOA7m99ssmMQVZ98P1dgT8K81urrrJReZN5J
CMccIuHYt+yLQ/90oeHNeoqu+0m403HN4Xv9WxR22RMbmZGwQOg7f3d/jcQm
rx6UNV7ipXJl5Hx+C7pj9dKbG5Ng5Gxh3dX0FJlWzHN6t5FQeXjt+bQ5QL3C
KlmN2iScTp4b0dB/gIL87CpzVElQlDHc0CJQhYRen38ZuokEsfTib242t9Et
zbo+9gYS+A0uCgmV3UTMpNFZg3UkyB6x81FoyEXvxySFJFYt5e8v/6HndgWd
sNinMC+w1Kdun6io2EtIVPgP3e3EUh/CJD5VHI1H1R0vjeN4SJDKFxvYvTEK
sVJIm/ZFAi5k5ngy4oLRgo2pq9gMAWISLaU7b/uhnDWxAfYTBAS4opZ5YQ/E
/PA0Kv8rAdaWb8NerHZCAxm8yV+HCHB/oCzJEbVB59hGedq9BNx63n8mmjBD
SlJR5cFdBMw0+WCrCSZq/QsaoZMA5oe6PWo1Osg373cbXzsBtXsOmP1ZqIhE
XFCP+QsC+FZorFkIl0T3NoZ+S31MgJHe/rKSvwURa/jhYnc9AekOnAcbd3Cj
+cJ5emMtAd2SVVHfZicY2Z56El4VBPhds0vYPdXHYKoEKVeUEmCRTnPnyb5m
9I9W683dJMChdItvtXgjI+b2D1NmHgHL1AbMOXeLGYondFixmQTcK1GwVI1P
ZbRoBbi3pRJwPjn7i/fWCIbP5N3A1UkEhHJeGkZnujGE743HsBMIcJt9o1cw
tJdRFaiReoNDgEqY8wP3Bk3GoW0++SNhBBhQRcIabGHG/FxppVYwAWfUAnYt
rxozzHr4tSkogACeCFvVQN4XhjhUuaPRmwAqvMDwV2muYT/y7FvhQcDIx30m
TCN/Qw7XrfF9zgQMUmr7AgAbvoyWF+w+SEA+9w/+ql+PDbyNXaXk9hNgrkx1
e2cEGwjx3VA7ZkaA6UsDGzuZjQY2CRv2zmICWmPNhnjMzfR7kyTiVykRsP/a
9R5+Ic2t0VaHr9jJEVA+6js2Vdi8ZdOqq4XX1xNQWpk+K//2zWavdLFmTREC
0hJr5M1rmKorbW3enuYnoN6xU2whBMuVr0sZbFhBQFFndmzT/R/Uge6OyeXc
BHD9b/5/a2v1WcnFSzD/BWT2/5k=
                    "]], 
                    LineBox[CompressedData["
1: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
                    "]], 
                    LineBox[CompressedData["
1:eJwVlnc81e8bxo8t2cpOUihJknxpuD8VSkYSEjKjIiPZktBAom9EStkNO1lZ
j5GML4rslePgHITPcTjI+p3fX8/r/d/z3Nd9Xc+1x97d2JGZQCAIMREI/z+1
suMD+1WnkMoRovHeCAmMvvjFx1F+Cmm+nHqktiKOTQRJ+fTyTqHxcMRlTBDH
utgjvHXpFNQVVLKeJyKGFYpaex1qoKDYd8bMNu4iWGpq093kHApanD/SGJcr
jD1XOHpXII6CvilDXQt9J+Z2ktNzyZ6CvC9Gpmy+34Fda/C8c+MCBUkeULsU
zb0D0zcc9ug/QkGtiZuLpwKEMAXbQvcqAgUp1p+M/+YiiL3rEbNLo5CRZJ/c
mz5cABMyCDF+8pOMOnyyrHsCBbB1DaNjl1LISLogRkkwjR/zKCiVUwsno74b
t9UzTvJjE3K7RSU8yGi/i7bOs1I+rF1o7u84kNFuNzspIwNe7Eyk6Z9meTIa
2W9E7EznwUoJVcN5fGRU5VYrf5+JB0uZfVrj93sSlfScOlD8czt2t/HAY+7g
SeTd3r9zvmgbRjn1ry/VaRKZ+vp/azi+DbMqWrnZYziJ8i5fIqs0cGI6qY16
KVKT6HiSeOzEJAdWLnL41CP2SeQ7qf9fdRAHdjg6Xsl5bgJleF/RMxXlwEQD
HQVUqydQhE3ACVZzdiyK2sos9n4CGUzLBTSts2FMN1UXN55NIPgieTI1gw2b
NmHpbbw2gaa6lwuYNlixSqXUJMuNcbQv0nGNtY0FU87kjMYmxlEB+57PpMcs
WKaER7Bs2ziixFdGU86wYNGcYD+fNI7uOOgf4KplxuzGhuTDTo6jqjr1Q56/
mLAecy2xm/vGkayRuohmEhN24Uc2lwH3OOIiqvjGOzFhqpUBs8JDJOS7/Xxj
wRYBY48X/ZIVSEI3ztuk850hYAHcDzJiHEhIcduH2KqdBGw+lPzSS4+EmkeN
HWS6t6DPvcRPU4KE3tGDLzAd3oIsXRPNzvIxlDVd5Ur/uwFSNRWHS9PG0IO1
zNw3hRsQq7Z3T1LkGKJzrPpsumzAvb0LLE4WYygs1OdKPWkdLm7ENK+uElEM
98T5/ok1mFtTfnOfRESntP67T8tdg+i/HbdZ2ogo+SGT83HfNWhdFuLnSSEi
9NCxUZFnDc4vJJhJ6xARv8/lpSbtv0DG1fdnHiYiLnvhfhfhv/B4vn/1gBgR
fX8jE71FXoWGPxJvj/4ZRflY3/HRZ6twhpxM0nkximg1X+lE0goQJ7Di/wJH
kVlUh5hjxQo8GCc+NnIcRZyBOgPZsSuAiHsVLNRH0cEdGpseOivgV3aROFD5
G9H7zrZbFi2DS5rNmrzpCIoi5joczaNDVnLquyP7R5DzaJrMagwdKEmk0yfW
hpFEfsaQlicdrifcCDdMHUa6Sj8T7dXpYB3lvtN7dggxybhgzi1LkBTxuex+
zRDib7lwUrBgCQYf0yzDY4fQzV+3aQrxS2Ae4pv2RmMIJexRvJzpsATGPsGH
6x4NosbqpvgHLEvw/G5t53/mg8iTGc/3+LMIPzxYfLoPDqLfuv5xNd2LoO/y
pJLSMYDUH+Vf9vu0CNq2Mbp8UgNI8riNk7DpIqhfSHawKulDpqbySh8qaDBb
Sjny6lEfOhQYH2PwkQZpsiqELpM+ZFv91PncSxpwMzUk6dF6UacUbnDYgwbE
0unu48q96FNF2KX3B2gQL6ua4bPVg1IcDUurRWmgHxvkWdjeg0Rba8R3c9Kg
xI2fT8G1B/W36LQUkhcgUlbtvFhWN1p2/CLOmrUAEBssbOrfjTLDgoKPv1mA
RULz+PPz3Ui6vD8yP2oBrIcsQzjJXUgspfzOJY8FUIkNKV/e24WMXmhOmR9f
gEFCm2LP206k86i/PKePCs/dhNcEXDtRRFb2m2ttVNAZsmk2ONmJjgdZH4A6
KhSULjg2DHQgyvY6v39zqPDQTTS5SKQD5UT85rANo4LGkJ0rPvkTjbRGXArz
p8KcbvYJxZKfSExn27ZOdyqYy2r2pZv8RKEeuTfmrRhc1igjt/cHkvTpkxPX
oEJdrAV6W9uOPJOrtkUoU0HRfdZyp207CsuaXpXaTwUmOaGXrG/b0NN3OVzV
IlTIirXmIAm3ovcXu2oqVnBYc1uaSeZqRkklSN+kFgd+F7dtCflNKCZIzvJW
BQ77bpDlok2a0KpHduzrYhwMbfrt7r1rRA77rO2MsnBIuVjVa67yHblmb//F
9BKHYj21pYu9DSjcI/gpHoNDy7l8wXP3GtDAbLXhaiQONEg1OPb9GyoYndu8
EoKDjvKjegGLemQ2Sow8646DpeLmKOdWHTrj9XznujMOHvt9N7fS61Dumv1Q
qxMOidK3NOZma1FQi5d+iTUOf/gN8ltCatDeDgeV9Is4EHi+t9bK1SCO5jRB
UX0cFATvd91JQIj/rFtm+nkcgpjtLxgerEZcOzSVN0/jIEM6oMZxuQLt+sSs
WHkMB/1BiTtLSeVoYJvBDFEFB+9fPDmkya/I84g83y5lHJrqqXtqAsrQyKkH
s50KOFArSFZ530oRcr1rbbAfB/Gi7oQk3lJ0/2pfypAsDq4ZX3n804qRDFGX
T2MPDvFJ2edv/ClCp/X6l9l241AT9zbMVK0ILXMPKJAlcRB8FLJ6pKUQ6Q6L
UidEcTgZdFdVekchKpMK12ERwcHR29Gd1/ozGsxtcFbdyZjPfy9aukn5qEbN
L7tDAIf6Ch+s0DcPVVR7x5zix0E4x6Ikensukm4w6KjkxaEiSibt3NEsZOX/
mnVpOw68Qeyi+xo/ou06KXW5XDjYuk4/I1h+QHSLd77+23BgNyz0/xqagYJ3
ajrpcuBwVTN+/qVwOkrYrXLHgB2HHKUAR8+sVHRZFe28zobDlpT1oKFmCtKJ
/3vqGSsO6VIP08wy3qJLxU+6mlhwOL+lF83X+hrduBL/TZjBc7+FAppoCehY
2+iqDzMOcTWDjiESL1GkSpbtFBMOx1PTLx0/+wIplldOuDL4pWDD4EGraFTY
DL7rBBxKxs7sIB0JR/4p+XtSGNxbWKP/miMUFZ770G7OYCpbEFd6uS+KHfa8
KcdgJ30qXabVCWlf4xngZLDREd87zD8PwW5fKT4Cg5+rSGvvfewMv/xWaNsZ
zO4fdyQ9wR/ktOO9FRlsf1vfVpweCosWiSF2DMaS2uUdpCNAeuYcezaDd7ca
zWdfiAH5jcgFTsZ9t4JuWQaUvwCutD/HAhk891IBvfvxErSPxdcwMd47kjsj
Uz/+CqKzDcOSGNzekPOYvPoGuOb93PUY86kadp3ezpcMP88L+vIy5tkTICIv
KpgKlr0FURMMbmdfMc9KSoMGgdD0n4z5f3/RF3lSPgNCr+jm/2DoUyX1tbL9
cybYR1lnjDH0K8pKnLM9+QGyanJ8tzH0zVELkKZ9/wib4wVSWgz9kwxPPBQZ
ygbT7JSaRW6GHgMSJZ+ccmHxkcknZ8b+RDmtk09Q8yDKX//0Ih8OmmhEVpnl
M7jczrQ9I8TQi+2Hpn/TZyi3OjzAzthPNT10pe5ZIeSZGpBHhHE41JscYSJa
BLtjfd83i+Owf9fztLfDReBmMmc4xNj/fQ4PKibTiiHap9WXmeEPyXnbWb9D
pXBL8eKpiL04cHPIXHp7phxOW8uaPTiEA6eBoPMkRwV8vUypVGL4kzWWOexw
WwVwqt+Lxxn+XZMiFdVeqYJzFFJGnjrDzxLG3HfVamAXeb/1Dm0cPDVbXokk
1oDiB6cn1ox88LA7I1u5VgNbw7RjlXo43P6goslWWwtsRa+OFRrjcP2okEeC
Xj04zpRZRdjhYKLX9avC9jtgf/Q6p0MZfi0zfxVX+x34XuzDLJ8w3iM7bOUq
0wgiZzQ2Rp4y8m9zYkJqvBFm80zjpBl5+aJweTnkRjP4RS6+fvYRh59iEpLn
3Vph4zVPqcQvHMoeJ49K/2iFo9iOxMY+Rt7S9mauHm6Dh38Lq56M4ODepqiU
TW2Dx9pWktrTDD+HaGK83j9AwKnCuYSZCnKLyirTpzrga4RK5+N/qPBa4W6c
mVsH3ChzYAnRpAKvXTG97l0HxDtKTD3XpgK9TaPizVYHGK9rnV64TIWGD2e0
DGo7IVFI3bD6DhWuW5qYFWh1gc68tmDCZyr0/RtfJundBea3rRr+fqWCflOf
eERmF9RPVB7yYfx/qseu/bZj74bACIOiol9UYOFzuinU1A2Tat29JstUSKvz
DfDR6wVaeECF9tkFqKHoSKb79UK+ea1klP4C/OYVrv6R2QuyPTZuU6YLIGlZ
xHSA0AfMmbyhUzcXIIGGhw8W9cHHt2zTLM8XIGqfcwImNQCV0kbdjWMLkHVB
Q8NVbwBEOwjYv7ML0OzBOZjoNwCKr0nXvVYWgL3qvRStcwB2jHh9DOelQYgp
KTPzySCsx7f9nDtBA5/HVkVc1CGwOKm2b+wNDeJyDpr9IzUMl++r59ky+suX
zr/LDnrDEHBx+f56EQ1wqcQTVZnD8MFfdjmqnQYupd117hYjEEW2eirKsgi2
FMOOrvrf8N3GaEPEcxFkM6V9L+oRoVrUV5x0awlWgh8WtjoQIe7YTgGOe0vQ
akGZ1b1HhB/qKq+vRi+BF3/Bda1cIkSqcYRGfVmCb4FgrME3BuUhkcwaBEYf
NLY+tPfXGBhaM4srp9NB/VDdzZSZMRDts+MMLaMDN6dcxi5WEoTc6VPhbqdD
UdWsuOgxEhT/fM/TukoH1gNBnDwJJDiRxWPKa7IMGVtvSHSLcZhKeM1hsIPR
Vwe2pLzujoO73oXa+4dWQL/YwYL6dBy6dTzylhh9dtH5YMdM5Tjs8+5dLAlY
Aa2e8upRqQk4aybFkj6xAuM5/YktYxMgYfMCE2hZhbInp7rPrU1AS71vlhBl
FaLsU/kbhCbh9J9kDlf2v6AqeusJ0pqEaE7VyQNaf+Fh2IpX0ftJyJUpGlqo
/wt7LUSM3jmT4dago5dAD6Pf55zODgwhg5/IN83m5TXw2XJhv/qKDHd+5bmN
ia1DU0ZNpdB3MpilnpIEm3Vwm791IGIPBaJH6bbtc+tQ9rCS2auPAlwZS6bN
Mptg3zt57dI8BTYiLivZ623CdgWBr0rsU/Cv0gMdf69NsP7h6D51dAr2aSQt
KzRtAos435B1zBQs3FNJG/LeAsN8u2JdnWm4wYbpmfkQsGWmKH75a9Ng2tur
Ix9DwFJMSlxYvaahrPKtnf5HAkZb5ZJBqdPwyEbaM3GQgL3SKopW3ZiGH8qc
v910mLAzCSNTAjtmYI2l1pXfngmbmeLUnleYAR3/bK0d95kwzZhra5/MZ8Aw
mb/jQikTRupnv7m7aAZsV7ahPCVmLErxSP16ywwsd7DGvDVgxtSCLaUGiDNg
z2qpSXBlxsL3FXTF8f2BQmFerYO5zJiS+9XTXC5/wIBV87r9URbMjzVHfGnP
LFzvoqviV1mxpFv9YTbqs8Cex/s19wErVtPOPttsOAtXH38f4/rIinEk2qF3
gbPwXWU8/MsKKxZ/SOT6+e5ZGJ9zWVNOY8PKX2i1Fc7MAv0rK7rWzoaNLN9R
28U8BxDx2kV/jQ2Tq2vlXFCag9837e6FXWHHis1Cc9+Ez8E/bJPWc2IcWF9F
vjB78hzM3ripjvQ5sHXp4WCP4jno9zPruv+AA9Oa+cdYe2wOgoW068anObCu
4Fn63Il5+OR386NgKycmPnPWIYgyD/NUoyv+hVzY/wAwWLzx
                    "]], 
                    LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAcwpeTsEL8D9R8DKq4UQLQMAeh/J1
JPA/P+Pwa/blC0AI6eHESlHwP1C8M1v0Hg1Ampt4+X9c8D+KWWKstnENQCxO
Dy61Z/A/WfuL3WbGDUBQszyXH37wP2UTULvWdQ5AmH2XafSq8D8L9AtKDe8P
QCowLp4ptvA/KpmNTqkpEEC84sTSXsHwP32oobAUXRBA4EfyO8nX8D8j4NK9
+McQQCcSTQ6eBPE/gSQXcoKvEUC4xONC0w/xPxLUDXxz7RFASnd6dwgb8T9G
ZHjZJi0SQG7cp+ByMfE/++JQOyKyEkC2pgKzR17xP4J+PovM1BNAKn3XXHBq
8T9lSfwc7ikUQJ5TrAaZdvE/EFCsTwKCFECHAFZa6o7xPzAncrWhOxVA/NYq
BBOb8T9uVFdyg50VQHCt/607p/E/A6FVYQUDFkBYWqkBjb/xP1pjmje72RZA
zDB+q7XL8T9yw0yiYUsXQEAHU1Xe1/E/7SfbAo7BF0AptPyoL/DxP4b8P1aR
vBhAnorRUlj88T/rxubFAkIZQBJhpvyACPI/SktWSTDNGUD6DVBQ0iDyP245
aN8/9hpAues/CBMs8j8yMeFSI4kbQCAuzb4=
                    "]], 
                    LineBox[CompressedData["
1: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
                    "]], 
                    LineBox[CompressedData["
1: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
J/3/9if/B5XGOEg=
                    "]], 
                    LineBox[CompressedData["
1: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
f14OGpXisqLuTczPC3jYEX5/7KYs9x+Ng9H5
                    "]], 
                    
                    LineBox[{{2.9434095072827082`, -4.1327420054929185`}, {
                    2.9434095072827082`, 6.883923811907424}}], 
                    
                    LineBox[{{4.959150795353056, 6.883923811907424}, {
                    4.959150795353056, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.624965806259182, -4.1327420054929185`}, {
                    2.626679071626052, 6.883923811907424}}], 
                    
                    LineBox[{{2.991184282666595, 6.883923811907424}, {
                    2.991184282666595, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.914245156378442, -4.1327420054929185`}, {
                    4.914245156378442, 6.883923811907424}}], 
                    
                    LineBox[{{2.9318129784393085`, -4.1327420054929185`}, {
                    2.9318129784393085`, 6.883923811907424}}], 
                    
                    LineBox[{{4.947296004813763, 6.883923811907424}, {
                    4.947296004813763, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.860260282999505, 6.883923811907424}, {
                    4.860260282999505, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.979206902675946, -4.1327420054929185`}, {
                    2.979206902675946, 6.883923811907424}}], 
                    
                    LineBox[{{4.902667851037896, 6.883923811907424}, {
                    4.902667851037896, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.955274740970935, 6.883923811907424}, {
                    2.955274740970935, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.924582619442132, 6.883923811907424}, {
                    4.924582619442132, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.9253384754743443`, 6.883923811907424}, {
                    2.9253384754743443`, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.9732182142905015`, 6.883923811907424}, {
                    2.9732182142905015`, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.8605640348471657`, 6.883923811907424}, {
                    2.8605640350442534`, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.9027773182470873`, 6.883923811907424}, {
                    2.9027773182470895`, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.9377873981847165`, 6.883923811907424}, {
                    2.9377873981847165`, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.953230777271233, 6.883923811907424}, {
                    4.953230777271233, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.9851955926712597`, -4.1327420054929185`}, {
                    2.9851955926712597`, 6.883923811907424}}], 
                    
                    LineBox[{{4.822574117453646, -4.1327420054929185`}, {
                    4.822574117453679, 6.883923811907424}}], 
                    
                    LineBox[{{2.9147791737124, -4.1327420054929185`}, {
                    2.9147791737124, 6.883923811907424}}], 
                    
                    LineBox[{{4.938413134835404, 6.883923811907424}, {
                    4.938413134835404, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.970223884191937, -4.1327420054929185`}, {
                    2.970223884191937, 6.883923811907424}}], 
                    
                    LineBox[{{2.947176706746333, 6.883923811907424}, {
                    2.947176706746333, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.962116202052401, -4.1327420054929185`}, {
                    4.962116202052401, 6.883923811907424}}], 
                    
                    LineBox[{{2.757646554855715, 6.883923811907424}, {
                    2.7576532019151365`, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.950261312031654, -4.1327420054929185`}, {
                    4.950261312031654, 6.883923811907424}}], 
                    
                    LineBox[{{2.982201247673592, 6.883923811907424}, {
                    2.982201247673592, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.958272213145278, -4.1327420054929185`}, {
                    2.958272213145278, 6.883923811907424}}], 
                    
                    LineBox[{{4.884734850259963, -4.1327420054929185`}, {
                    4.884734850259963, 6.883923811907424}}], 
                    
                    LineBox[{{2.8227846694845335`, -4.1327420054929185`}, {
                    2.8227846925950146`, 6.883923811907424}}], 
                    
                    LineBox[{{4.94432677637666, -4.1327420054929185`}, {
                    4.94432677637666, 6.883923811907424}}], 
                    
                    LineBox[{{4.991770318313632, -4.1327420054929185`}, {
                    4.991770318313632, 6.883923811907424}}], 
                    
                    LineBox[{{2.88509793491617, -4.1327420054929185`}, {
                    2.8850979349172836`, 6.883923811907424}}], 
                    
                    LineBox[{{2.9522856009852725`, -4.1327420054929185`}, {
                    2.9522856009852725`, 6.883923811907424}}], 
                    
                    LineBox[{{4.956185396678926, -4.1327420054929185`}, {
                    4.956185396678926, 6.883923811907424}}], 
                    
                    LineBox[{{2.9642383565328094`, 6.883923811907424}, {
                    2.9642383565328094`, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.625579829110268, -4.1327420054929185`}, {
                    4.625583743275932, 6.883923811907424}}], 
                    
                    LineBox[{{4.9799086676031745`, 6.883923811907424}, {
                    4.9799086676031745`, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.757749803307127, 6.883923811907424}, {
                    4.75774980352069, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.932716504134931, -4.1327420054929185`}, {
                    4.932716504134931, 6.883923811907424}}]}, 
                    Annotation[#, "Charting`Private`Tag$997270#1"]& ], 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQLcIe+fz/f+4DDFAwt0JjZ8QvBF/t1feujV8QfMuz
0/SSXyL4cZOvlB67hOCvlA9g6V2K4NtZuCtKeSP46Zmm0SbTuOD8An9f9V+8
nHC+8o6/3/bOZ4fz9X7WPNtgwQbnv99rrme6mQXOj2LtrtzuzgznV1+QlD29
lxHO/1Jc/oDXmgFhnsltv7lL/u6H8e+32/U6TvsF5z99cOnSw93f4fw5r1gi
Hrz/Aufv+722l/H5Rzg/Q0Vgqq3KOzhfK2FT/l6GF3C+/9/+kz9/PoTzLbzm
J8dsuwHn/877+no+10k432rh4kAr50lwfoj3lcu7E47Zw/iLDpVXlXlfh/NV
lyqU+3s/hPOVo8QD5mU9h/MrWNZIfVV8C+dLvXZOrn3xHs4HAIsHhnc=
                    "]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQXcwV53eQ+4M9AxRo1V6PKcj6COfPC17DNrMMwW9n
CIt61YfgR0StZOzdj+D/4g0IuKTwCc63LZ37NuYxgr/Ju2h663sEX03J3XHd
bwSf7/yHKf+FP8P59zRcbBa5IPgNd151PV+K4H/ZtN9EYBOCn9E55Z7FPgQ/
0MzOqOsagq80YeJNHfYvcP60tLTmUGEEn8vWWrdOHsH//PJJw3lzBP+Is4VG
UQaCrxz24eGpYgS/KWPFbOV6BP9hVUJoTReC79ArwX91KoI/f/6FE7oLEfx/
Gzua2tYg+AyNwfXia7/Yi0w3bH3bLnAAAOCIc48=
                    "]], 
                    LineBox[CompressedData["
1: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
                    "]], 
                    LineBox[CompressedData["
1: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
y9UCYJVp32hRg4Gy0oi5RLgg/B+5MKpN
                    "]], 
                    LineBox[CompressedData["
1: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
VQzpjY4GkQL9jH8B9i/Ilw==
                    "]], 
                    
                    LineBox[{{2.4746640399062323`, 6.883923811907424}, {
                    2.476679166952087, 6.535878989296141}, {
                    2.4794074577773015`, 6.013888483358226}, {
                    2.4821357486025164`, 5.437342677487158}, {
                    2.4848640394277313`, 4.802194126541808}, {
                    2.487592330252946, 4.104114527281387}, {2.490320621078161,
                     3.33847567383928}, {2.4930489119033754`, 
                    2.5003291753512857`}, {2.49577720272859, 
                    1.5843848658680315`}, {2.4985054935538047`, 
                    0.5849878347541413}, {
                    2.5012337843790196`, -0.5039059957868847}, {
                    2.5039620752042344`, -1.688755820501576}, {
                    2.5089276608703313`, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.9198703343137247`, -4.1327420054929185`}, {
                    2.9198703343137247`, 6.883923811907424}}], 
                    
                    LineBox[{{4.935456374028706, -4.1327420054929185`}, {
                    4.935456374028706, 6.883923811907424}}], 
                    
                    LineBox[{{4.982874080280788, -4.1327420054929185`}, {
                    4.982874080280788, 6.883923811907424}}], 
                    
                    LineBox[{{4.959150880926449, -4.1327420054929185`}, {
                    4.959150880926449, 6.883923811907424}}], 
                    
                    LineBox[{{2.991184282666595, 6.883923811907424}, {
                    2.991184282666595, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.8438291766312163`, -4.1327420054929185`}, {
                    2.8438291791104704`, 6.883923811907424}}], 
                    
                    LineBox[{{4.499660220130697, 6.883923811907424}, {
                    4.500103815076183, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.979206902675989, 6.883923811907424}, {
                    2.979206902675989, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.9552717906756, 6.883923811907424}, {
                    2.9552717906756, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.794923423262003, 6.883923811907424}, {
                    4.794923423264928, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.9710124295704725`, -4.1327420054929185`}, {
                    4.9710124295704725`, 6.883923811907424}}], 
                    
                    LineBox[{{4.704816326164284, -4.1327420054929185`}, {
                    4.704816352819786, 6.883923811907424}}], 
                    
                    LineBox[{{2.908983090386985, 6.883923811907424}, {
                    2.9089830903869855`, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.941368225469713, 6.883923811907424}, {
                    4.941368225469713, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.973218214228936, -4.1327420054929185`}, {
                    2.973218214228936, 6.883923811907424}}], 
                    
                    LineBox[{{4.988804905636016, 6.883923811907424}, {
                    4.988804905636016, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.9493416640955967`, 6.883923811907424}, {
                    2.9493416640955967`, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.96508160643919, 6.883923811907424}, {
                    4.96508160643919, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.919405308085507, -4.1327420054929185`}, {
                    4.919405308085507, 6.883923811907424}}], 
                    
                    LineBox[{{4.953220821194065, -4.1327420054929185`}, {
                    4.953220821194065, 6.883923811907424}}], 
                    
                    LineBox[{{2.9851955926712597`, 6.883923811907424}, {
                    2.9851955926712597`, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.908548097724788, 6.883923811907424}, {
                    4.908548097724788, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.9612466773098234`, 6.883923811907424}, {
                    2.9612466773098234`, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.843597335202089, -4.1327420054929185`}, {
                    4.843597335202089, 6.883923811907424}}], 
                    
                    LineBox[{{4.894548779313342, -4.1327420054929185`}, {
                    4.894548779313342, 6.883923811907424}}], 
                    
                    LineBox[{{2.9463226320718348`, -4.1327420054929185`}, {
                    2.9463226320718348`, 6.883923811907424}}], 
                    
                    LineBox[{{4.873666119963941, 6.883923811907424}, {
                    4.873666119963941, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.934908013710818, -4.1327420054929185`}, {
                    2.934908013710818, 6.883923811907424}}], 
                    
                    LineBox[{{4.950256147152437, 6.883923811907424}, {
                    4.950256147152437, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.982201247673592, -4.1327420054929185`}, {
                    2.982201247673592, 6.883923811907424}}], 
                    
                    LineBox[{{2.958253321786927, -4.1327420054929185`}, {
                    2.958253321786927, 6.883923811907424}}], 
                    
                    LineBox[{{4.973977842247948, 6.883923811907424}, {
                    4.973977842247948, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.927749446511704, 6.883923811907424}, {
                    4.927749446511704, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.9286006826536886`, 6.883923811907424}, {
                    2.9286006826536886`, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.944385428360743, -4.1327420054929185`}, {
                    4.944385428360743, 6.883923811907424}}], 
                    
                    LineBox[{{2.7951395155488545`, 6.883923811907424}, {
                    2.7951398740772, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.991770318313634, -4.1327420054929185`}, {
                    4.991770318313634, 6.883923811907424}}], 
                    
                    LineBox[{{2.7047288713435926`, -4.1327420054929185`}, {
                    2.704827789729462, 6.883923811907424}}], 
                    
                    LineBox[{{2.9523121968646353`, -4.1327420054929185`}, {
                    2.9523121968646353`, 6.883923811907424}}], 
                    
                    LineBox[{{1.29609048811822, -4.1327420054929185`}, {
                    1.2962585251655971`, 6.883923811907424}}], 
                    
                    LineBox[{{2.9405666872526077`, 6.883923811907424}, {
                    2.9405666872526077`, -4.1327420054929185`}}], 
                    
                    LineBox[{{4.956185649519854, 6.883923811907424}, {
                    4.956185649519854, -4.1327420054929185`}}], 
                    
                    LineBox[{{2.9881899376689276`, -4.1327420054929185`}, {
                    2.9881899376689276`, 6.883923811907424}}], 
                    
                    LineBox[{{2.8946601286280953`, -4.1327420054929185`}, {
                    2.89466012862813, 6.883923811907424}}], 
                    
                    LineBox[{{2.8739789363018926`, 6.883923811907424}, {
                    2.8739789363154555`, -4.1327420054929185`}}]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$997270#2"]& ], {}}, {{}, {}, {}, \
{}}}, {}, {}}, {GridLines -> Dynamic[
                   Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                  AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{-4., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-2., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-6., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-5.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-5., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-4.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-3.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-3., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-2.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-0.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {5.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {6.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {7., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {7.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {8., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{-2., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-4., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-3.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-3., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-2.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-1., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {-0.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {5.5, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[{0, 0}], Selectable -> False], TraditionalForm], {
                    0.005, 0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {None, None}, 
                 DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 
                 NCache[GoldenRatio^(-1), 0.6180339887498948], 
                 Axes -> {True, True}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1], BaseStyle -> Automatic, DisplayFunction :> 
                 Identity, Epilog -> {
                   RGBColor[1, 0, 0], 
                   Dashing[0.01], 
                   Thickness[0.01], 
                   AbsolutePointSize[6], 
                   AbsoluteThickness[1], {{{
                    Dashing[None], 
                    CircleBox[{1., 3.372493948681391}, 
                    Offset[3]]}}, {
                    PointBox[{1., 1.}]}}}, 
                 Frame -> {{False, False}, {False, False}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1], 
                 FrameTicks -> {{Automatic, Automatic}, {
                   Automatic, Automatic}}, GridLines -> {None, None}, 
                 GridLinesStyle -> {
                   GrayLevel[0.85], 
                   GrayLevel[0.9]}, ImageSize -> 200, 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                   PointSize[Medium], "PointSizeFunction" -> "SmallPointSize",
                    "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{-3.5, 5.5}, {-4.1327420054929185`, 
                  6.883923811907424}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.02]}}, Prolog -> {
                   Opacity[0], 
                   TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                 Ticks -> {Automatic, Automatic}}], 
               TagBox[
                GridBox[{{
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"x", 
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {4, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[4], Selectable -> False], "\"from \"", 
                    RowBox[{"-", 
                    TagBox["3.5", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "3.5"]]}], 
                    "\" to \"", 
                    TagBox["5.5", 
                    $CellContext`TagBoxWrapper["StringBoxes" -> "5.5"]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {"\"\""}, {
                   TemplateBox[{
                    GraphicsBox[{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    LineBox[{{0, 0}, {10, 0}}]}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)}], 
                    StyleBox["\" real part\"", Smaller, 
                    GrayLevel[0.3], StripOnInput -> False]}, "RowDefault"]}, {
                   TemplateBox[{
                    GraphicsBox[{
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    LineBox[{{0, 0}, {10, 0}}]}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)}], 
                    StyleBox["\" imaginary part\"", Smaller, 
                    GrayLevel[0.3], StripOnInput -> False]}, "RowDefault"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 DefaultBaseStyle -> "Column", 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{0}}}], "Column"]}, 
              "Labeled", DisplayFunction -> (FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                   
                   ItemBox[#2, Alignment -> {Inherited, Bottom}, 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ), 
              InterpretationFunction -> (RowBox[{
                 StyleBox[
                 "Labeled", FontFamily -> "Bitstream Vera Sans", 
                  FontSize -> -1 + Inherited], "[", 
                 RowBox[{#, ",", #2, ",", 
                   RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Right", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                 "]"}]& )], 
             $CellContext`TagBoxWrapper["StringBoxes" -> ""]], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "Series,Simplification,Sum", "timedoutpods" -> "", 
    "timing" -> "5.109", "parsetiming" -> "0.972", "parsetimedout" -> "false",
     "recalculated" -> 
    "http://www4b.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa203914e2f3icda258h3800003edif62f589cgh6a2689526546027549574", "id" -> 
    "MSPa204014e2f3icda258h3800002c0a0fhefib4b710", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "49", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa204114e2f3icda258h38000039ghd6b6448g561a2689526546027549574", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2018, 11, 15, 0, 11, 30.8844254`9.24231443310068}, "Line" -> 
    102, "SessionID" -> 29644626630232133871}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Limit[(3^x + 4^x - 6^x)^Tan[(Pi*x)/2], x -> 1]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$}, {Typeset`aux1$$, Typeset`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1383., {1416., 1426.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7512258414776144`*^9, 
  3.7512258909263134`*^9},ExpressionUUID->"a4a9d43a-b9a3-4f91-a979-\
23fef19b1469"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"u", "[", "x", "]"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7512274714965286`*^9, 
  3.7512274862793264`*^9}},ExpressionUUID->"70e5ed16-b316-4c5d-8e0e-\
df900c5595b5"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["u", "\[Prime]",
    MultilineFunction->None], "[", "x", "]"}], 
  RowBox[{"u", "[", "x", "]"}]]], "Output",
 CellChangeTimes->{{3.7512274787242956`*^9, 
  3.751227486714978*^9}},ExpressionUUID->"ac7dccd6-7edd-4496-9c25-\
726029abee64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"u", "[", "x", "]"}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7512274904665203`*^9, 
  3.75122750944285*^9}},ExpressionUUID->"0902dc29-722d-42c7-9f09-\
fbdd75bbe1d6"],

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"u", "[", "x", "]"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{{3.7512275003927507`*^9, 
  3.7512275097609997`*^9}},ExpressionUUID->"defb9dd4-2f87-463f-bcc2-\
4a8e4ac3f84d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox["2", 
    RowBox[{"x", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", "1"}], ")"}]}]], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.75122757777225*^9, 
  3.751227595471218*^9}},ExpressionUUID->"6976d0be-3605-4c06-b660-\
50908209235a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Log", "[", "x", "]"}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       SuperscriptBox["x", "2"]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.751227595834248*^9},ExpressionUUID->"82f1d258-db59-49dd-b6f1-\
f08ef46fa243"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", "\"\<Integrate[2/(x(x^2-1)),x]\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.751227699678011*^9, 
  3.7512277140497904`*^9}},ExpressionUUID->"9a77e528-6204-447f-9788-\
b079e6ce8585"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Integrate[2/(x(x^2-1)),x]", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, PodStates -> {"IndefiniteIntegral__Step-by-step solution"}},
    Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Indefinite integrals", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[2/(x (x^2 - 1)), x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   FractionBox["2", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["x", "2"], "-", "1"}], ")"}]}]], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}], ")"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"log", "(", "x", ")"}]}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Take the integral:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["2", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["x", "2"], "-", "1"}], ")"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Factor \"", "\"out \"", "\"constants:\""},
                     "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"2", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["x", "2"], "-", "1"}], ")"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    FractionBox["1", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["x", "2"], "-", "1"}], ")"}]}]], "\",\"", 
                    "\" \""}, "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    SuperscriptBox["x", "2"]}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\[LongEqual]", 
                    RowBox[{"2", " ", "x"}]}], "\"\[ThinSpace]\""}, 
                    "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "x"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"u", "-", "1"}], ")"}], " ", "u"}]], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"u", "-", "1"}], ")"}], " ", "u"}]], "\",\"", 
                    "\" \""}, "RowDefault"], "\"use \"", "\"partial \"", 
                    "\"fractions:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"u", "-", "1"}]], "-", 
                    FractionBox["1", "u"]}], ")"}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Integrate \"", "\"the \"", "\"sum \"", "\"term \"", 
                    "\"by \"", "\"term \"", "\"and \"", "\"factor \"", 
                    "\"out \"", "\"constants:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", "u"], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}], "+", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"u", "-", "1"}]], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    FractionBox["1", "u"], "\" \""}, "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    RowBox[{"log", "(", "u", ")"}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"log", "(", "u", ")"}]}], "+", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"u", "-", "1"}]], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    FractionBox["1", 
                    RowBox[{"u", "-", "1"}]], "\",\"", "\" \""}, 
                    "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"s", "\[LongEqual]", 
                    RowBox[{"u", "-", "1"}]}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "s"}], "\[LongEqual]", 
                    "\"\""}], "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"log", "(", "u", ")"}]}], "+", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", "s"], 
                    RowBox[{"\[DifferentialD]", "s"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    FractionBox["1", "s"], "\" \""}, "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    RowBox[{"log", "(", "s", ")"}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{"log", "(", "s", ")"}], "-", 
                    RowBox[{"log", "(", "u", ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"s", "\[LongEqual]", 
                    RowBox[{"u", "-", "1"}]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"u", "-", "1"}], ")"}], "-", 
                    RowBox[{"log", "(", "u", ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    SuperscriptBox["x", "2"]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{
                    SuperscriptBox["x", "2"], "-", "1"}], ")"}], "-", 
                    RowBox[{"log", "(", 
                    SuperscriptBox["x", "2"], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"An \"", "\"alternative \"", "\"form \"", "\"of \"", 
                    "\"the \"", "\"integral \"", "\"is:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{"log", "(", 
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    SuperscriptBox["x", "2"]]}], ")"}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Which \"", "\"is \"", "\"equivalent \"", "\"for \"", 
                    "\"restricted \"", 
                    TemplateBox[{"x", "\" \""}, "RowDefault"], "\"values \"", 
                    "\"to:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "2"]}], ")"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"log", "(", "x", ")"}]}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                TemplateBox[{
                  RowBox[{"log", "(", "x", ")"}], "\" \"", 
                  "\"is the natural logarithm\""}, "RowDefault"], 
                TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "IndefiniteIntegral__Hide steps"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Plots of the integral", "scanner" -> "Integral", "id" -> 
     "Plot", "position" -> "200", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Plot[-2 Log[x] + Log[1 - x^2], {x, -2.5, 2.5}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max11042$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`min11041$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min11041$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max11042$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$3046087$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min11041$\
3046092$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max11042$\
3046093$$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max11042$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`\
min11041$$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$3046087$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min11041$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min11041$\
3046092$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max11042$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max11042$\
3046093$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    Labeled[
                    CalculateUtilities`GraphicsUtilities`Private`post$3046065[
                    Plot[{
                    Re[(-2) Log[$CellContext`x] + Log[1 - $CellContext`x^2]], 
                    Im[(-2) Log[$CellContext`x] + Log[1 - $CellContext`x^2]]}, 
                    SlotSequence[2], PlotStyle -> {{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, 
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]]}]], 
                    Column[{
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" real part", Smaller, 
                    GrayLevel[0.3]]}], 
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" imaginary part", Smaller, 
                    GrayLevel[0.3]]}]}, Spacings -> 0], {{Right, Bottom}}], 
                    HoldAll][(-2) Log[$CellContext`x] + 
                    Log[1 - $CellContext`x^2], {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min11041$$], 
                    (
                    Piecewise[{{
                    0. + 2.6726124191242433` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    2.6726124191242433` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min11041$$], \
-2.5], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min11041$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max11042$$]], 
                    (Piecewise[{{
                    0. + 2.6726124191242433` Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    2.6726124191242433` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min11041$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max11042$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min11041$$ + 
                    0.005, CalculateUtilities`GraphicsUtilities`Private`\
max11042$$]], 2.5]}, LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, 
                    PlotRange -> {Automatic, Automatic}, LabelStyle -> {}, 
                    Ticks -> Automatic, ImageSize -> Scaled[0.4], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min11041$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max11042$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$3046065]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$3046065[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$3046065[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7/APkPiMBpvYJySggzFpQEnK995ip7Fw7WA72+\
DPg89ukmbtKsV0gKb0w6m+NI/vnnvuek+OZJT2e72evmrNB8lJegNPj60ZylkuC0HeneaKas2kSK/\
gs9vWxNTsUQ4/KPG+69a8l2oGxp9f4fvAk4KDoV8N48wwqif7CvKMJbr2jBQ7tj+ZcJkAZz/p0+\
2tnZdbu7seBmMZgTFUCb3dFjLPFGia9hDomjVvOYhv/vioPH4qOI/p94KKhOoH1jtWQCyMFMAxn+\
BbLzdTdzExA4KAIhdOk5PnsO0F2igmpmM6y/GN88l63hYY1FR7bu6V3KxTkA//\
Jj6QsYvJe1zS7uwIDAvjktF3Vlb/nLsBnl+\
3hVfyZDVxmN8bjryBYcdUL9P5rHWdPCNV17ro51xd1HzZaJDnT5n6f+\
mQabMcxou2YdDZka3xau0tw++0hZc5dv1c3Pet+\
ewdJeCq4VAJ7qMkBZ9H0Ux54CXaPl2dW4fHuFPxHaMzpIIVTmTjLPvF9cfDCrzeFGKs3WQD0hH1DIh\
oTq2LOG732JSZYQYKEgs8v65fNtlY1qEE3Nm+9kwQZgeYJ2Td8oTmIF2oO5gk+/\
JHxa3kcqbJkPcDYeiUqrWiv4X1UZZcQcYyMJIYL2jqNZjDKqkRqGDZD0qQOAfBEJL9sh/\
3zT9crARSta9QXcqzOHClOQ1Pol8W+\
JCKqcmaO3bg6ApuW8wmkie16iKWpovTZnNM95tMN25oDvRQEkJLEj7Qu02h2xT+\
6qawtAd3a0K3JnRrQrcmdGvC/7smuIjxX+k35Ba4dg=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Plot[-2 Log[x] + Log[1 - x^2], {x, -15, 15}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max11044$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`min11043$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min11043$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max11044$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$3046173$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min11043$\
3046174$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max11044$\
3046175$$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max11044$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`\
min11043$$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$3046173$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min11043$$, 
                    
                    CalculateUtilities`GraphicsUtilities`Private`min11043$\
3046174$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max11044$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max11044$\
3046175$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    Labeled[
                    CalculateUtilities`GraphicsUtilities`Private`post$3046153[
                    Plot[{
                    Re[(-2) Log[$CellContext`x] + Log[1 - $CellContext`x^2]], 
                    Im[(-2) Log[$CellContext`x] + Log[1 - $CellContext`x^2]]}, 
                    SlotSequence[2], PlotStyle -> {{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, 
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]]}]], 
                    Column[{
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" real part", Smaller, 
                    GrayLevel[0.3]]}], 
                    Row[{
                    Graphics[{
                    Directive[
                    RGBColor[1, 0.3, 0], 
                    AbsoluteThickness[1]], 
                    AbsoluteThickness[1], 
                    Line[{{0, 0}, {10, 0}}]}, ImageSize -> {20, 4}, 
                    BaselinePosition -> (Center -> Center)], 
                    Style[" imaginary part", Smaller, 
                    GrayLevel[0.3]]}]}, Spacings -> 0], {{Right, Bottom}}], 
                    HoldAll][(-2) Log[$CellContext`x] + 
                    Log[1 - $CellContext`x^2], {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min11043$$], 
                    (
                    Piecewise[{{
                    0. + 16.03567451474546 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    16.03567451474546 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min11043$$], \
-15.], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min11043$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max11044$$]], 
                    (
                    Piecewise[{{
                    0. + 16.03567451474546 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 16.03567451474546 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min11043$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max11044$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min11043$$ + 
                    0.03, CalculateUtilities`GraphicsUtilities`Private`\
max11044$$]], 15.]}, LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, 
                    PlotRange -> {Automatic, Automatic}, LabelStyle -> {}, 
                    Ticks -> Automatic, ImageSize -> Scaled[0.4], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min11043$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max11044$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$3046153]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$3046153[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$3046153[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbikw3t/+ARKfEaPTviHBOjYmDShJ+\
V4vuSQWrh1sZxv8efDZTdKsXaWYDtCUfjjVl+bx3XPPXe/5iQiSfq/XUzeN+\
SBYnGzh6ZkxIzHLRcHj9+\
e5BKWo4MkNfHbPmBD0PjDyA2Lnu23MgZAzot35Db5PWFQwouGrpoxqCmp6KEme0UjVnrGkp+\
YnUyYiwuhPeDF8tbO7vTt0MBjLmGgNkqthW8g8k0RB0kOgW8bsMcK/\
uePT8vipYCyE7wXwCNRj451IEhsYwQnDfLxvvd5MPcDENOExkfGV02TlOWp7gdKS8nQCsxzfuJys7b\
bARKbKcfOw5Gadglz4d/CBCG1MzmOTtmdLoF8Y14y+i7L659wN8Py2LbwUZ6uJw/\
zeMeSNaHoKapnOl63r5BiputZGP+fqqubLRoO8fMrU/0vHVOnlMF63DQNmJ6bGq7W3DL/\
TFl7k2PVzcT8y5rNzlICrhkMluI8iLtg8imbKAyfR9umq3Dgcxv2K7xCdPhWscAITZ9kvtj+\
eVOD1phBi7aYbkA6vZ0AAORhXbLndpynVo4xIEhng+\
XX9sskmog7F4872tac8pmaAOULWLU9ojpKFuhMdZV/+qLiVXC40GfJ+xDWkINeK/\
i7WRxpyeTwRnpGEeEFTr94cVkmNifSW/aAECXPCKULSX+Zjv7mHi5VAqg4lqks6Fge2NOf+\
SfTLAh8DT3XW3LE9R5d322I2gTirVRfQJFmcNptjut9kunFDc6D7kuBbEv+\
B3m0K3abwVzeFpT24WxO6NaFbE7o1oVsT/t81wUaM/0q/Afz0uFY="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Complex-valued plots", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Complex-valued plots", "input" -> 
           "Plot__Complex-valued plots"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Real-valued plots", "input" -> 
           "Plot__Real-valued plots"}, {}]}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Alternate form of the integral", "scanner" -> 
     "Integral", "id" -> "AlternateForm", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"FunctionExpand[-2 Log[x] + Log[1 - x^2]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{
                   RowBox[{"log", "(", 
                    RowBox[{"1", "-", "x"}], ")"}], "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"log", "(", "x", ")"}]}], "+", 
                   RowBox[{"log", "(", 
                    RowBox[{"x", "+", "1"}], ")"}]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}, StripOnInput -> False], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}, StripOnInput -> False], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Alternate form assuming x is positive", "scanner" -> 
     "Integral", "id" -> "PositiveAlternateForm", "position" -> "400", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"FullSimplify[-2 Log[x] + Log[1 - x^2], x > 0]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{"log", "(", 
                   RowBox[{
                    FractionBox["1", 
                    SuperscriptBox["x", "2"]], "-", "1"}], ")"}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}, StripOnInput -> False], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}, StripOnInput -> False], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x=-1", "scanner" -> 
     "Series", "id" -> "SeriesExpansionOfTheIntegralAt `1`x=-1.", "position" -> 
     "500", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Series[-2 Log[x] + Log[1 - x^2], {x, -1, 4}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{"\[Piecewise]", 
                GridBox[{{
                   RowBox[{
                    RowBox[{"(", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"x", "+", "1"}], ")"}], "+", 
                    RowBox[{"log", "(", "2", ")"}]}], ")"}], "-", 
                    FractionBox[
                    RowBox[{"x", "+", "1"}], "2"], "-", 
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", "1"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "24"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", "1"}], ")"}], "3"]}], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", "1"}], ")"}], "4"], ")"}], 
                    SeriesData[$CellContext`x, -1, {}, 0, 4, 1], Editable -> 
                    False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", "2", "]"}], "+", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "x"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], ",", 
                    RowBox[{"-", 
                    FractionBox["1", "8"]}], ",", 
                    RowBox[{"-", 
                    FractionBox["1", "24"]}]}], "}"}], ",", "0", ",", "4", 
                    ",", "1"}], "]"}]}, "SeriesData", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                    ")"}], "-", 
                    RowBox[{"2", " ", 
                    TemplateBox[{
                    RowBox[{"(", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
                    RowBox[{"(", 
                    RowBox[{"x", "+", "1"}], ")"}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", "1"}], ")"}], "2"]}], "-", 
                    RowBox[{
                    FractionBox["1", "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", "1"}], ")"}], "3"]}], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", "1"}], ")"}], "4"], ")"}], 
                    SeriesData[$CellContext`x, -1, {}, 0, 4, 1], Editable -> 
                    False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], ",", 
                    RowBox[{"-", 
                    FractionBox["1", "3"]}]}], "}"}], ",", "0", ",", "4", ",",
                     "1"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                    ")"}]}, "Conjugate", SyntaxForm -> SuperscriptBox]}]}], 
                   RowBox[{
                    RowBox[{"Im", "(", "x", ")"}], "<", "0"}]}, {
                   TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"x", "+", "1"}], ")"}], "-", 
                    RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], "+", 
                    RowBox[{"log", "(", "2", ")"}]}], ")"}], "+", 
                    FractionBox[
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{"x", "+", "1"}], ")"}]}], "2"], "+", 
                    RowBox[{
                    FractionBox["7", "8"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", "1"}], ")"}], "2"]}], "+", 
                    RowBox[{
                    FractionBox["5", "8"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", "1"}], ")"}], "3"]}], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", "1"}], ")"}], "4"], ")"}], 
                    SeriesData[$CellContext`x, -1, {}, 0, 4, 1], Editable -> 
                    False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
                    "+", 
                    RowBox[{"Log", "[", "2", "]"}], "+", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "+", "x"}], "]"}]}], ",", 
                    FractionBox["3", "2"], ",", 
                    FractionBox["7", "8"], ",", 
                    FractionBox["5", "8"]}], "}"}], ",", "0", ",", "4", ",", 
                    "1"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"otherwise\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, ColumnAlignments -> {Left}, 
                 ColumnSpacings -> 1.2, ColumnWidths -> Automatic, 
                 AllowedDimensions -> {2, Automatic}, Selectable -> True, 
                 Editable -> True]}}, ColumnAlignments -> {Left}, 
              ColumnSpacings -> 0.5, ColumnWidths -> Automatic], "Piecewise", 
             SyntaxForm -> Span, SelectWithContents -> True, Selectable -> 
             False, Editable -> False, DeleteWithContents -> True], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["infos", {"count" -> "3"}, {
       XMLElement["info", {"text" -> "z^* is the complex conjugate of z"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Conjugate.html",
            "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ComplexComponents/Conjugate",
            "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/ComplexConjugate.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                TemplateBox[{"z"}, "Conjugate", SyntaxForm -> SuperscriptBox],
                 "\" \"", "\"is the complex conjugate of\"", "\" \"", "z"}, 
               "RowDefault"], TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}], 
       XMLElement["info", {"text" -> "Im(z) is the imaginary part of z"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Im.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ComplexComponents/Im", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/ImaginaryPart.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}], 
         XMLElement["cell", {"compressed" -> False, "string" -> True}, {
           Cell[
            BoxData[
             FormBox[
              TemplateBox[{
                RowBox[{"Im", "(", "z", ")"}], "\" \"", 
                "\"is the imaginary part of\"", "\" \"", "z"}, "RowDefault"], 
              TraditionalForm]], "Output", {
            Background -> None, 
             GraphicsBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
               DefaultAxesStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
               Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
               DefaultTicksStyle -> 
               Directive[
                FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
             Graphics3DBoxOptions -> {
              DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
            NumberPoint -> ".", 
            AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
            RenderingOptions -> {
             "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}], 
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", 
           "text" -> "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x=0", "scanner" -> 
     "Series", "id" -> "SeriesExpansionOfTheIntegralAt `1`x=0.", "position" -> 
     "600", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Series[-2 Log[x] + Log[1 - x^2], {x, 0, 4}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  RowBox[{
                    RowBox[{"-", 
                    RowBox[{"2", " ", 
                    RowBox[{"log", "(", "x", ")"}]}]}], "-", 
                    SuperscriptBox["x", "2"], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox["x", "4"], ")"}], 
                    SeriesData[$CellContext`x, 0, {}, 0, 4, 1], Editable -> 
                    False]}], 
                  RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"Log", "[", "x", "]"}]}], ",", "0", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", "0", ",", "4", ",", 
                    "1"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                 InterpretationFunction -> (#2& ), SyntaxForm -> Plus]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"Puiseux series\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x=1", "scanner" -> 
     "Series", "id" -> "SeriesExpansionOfTheIntegralAt `1`x=1.", "position" -> 
     "700", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Series[-2 Log[x] + Log[1 - x^2], {x, 1, 4}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{"\[Piecewise]", 
                GridBox[{{
                   RowBox[{
                    TemplateBox[{
                    RowBox[{"(", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}]}], ")"}], "+", 
                    FractionBox[
                    RowBox[{"x", "-", "1"}], "2"], "-", 
                    RowBox[{
                    FractionBox["1", "8"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], "2"]}], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], "3"], ")"}], 
                    SeriesData[$CellContext`x, 1, {}, 0, 3, 1], Editable -> 
                    False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "]"}], ",", 
                    FractionBox["1", "2"], ",", 
                    RowBox[{"-", 
                    FractionBox["1", "8"]}]}], "}"}], ",", "0", ",", "3", ",",
                     "1"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                    ")"}]}, "Conjugate", SyntaxForm -> SuperscriptBox], "+", 
                    RowBox[{"(", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}]}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], "2"], "-", 
                    RowBox[{
                    FractionBox["2", "3"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], "3"]}], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], "4"], ")"}], 
                    SeriesData[$CellContext`x, 1, {}, 1, 4, 1], Editable -> 
                    False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2"}], ",", "1", ",", 
                    RowBox[{"-", 
                    FractionBox["2", "3"]}]}], "}"}], ",", "1", ",", "4", ",",
                     "1"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                    ")"}]}], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Im", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], "2"], ")"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Im", "(", "x", ")"}]}]}], ">", "0"}]}, {
                   TemplateBox[{
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}]}], ")"}], "-", 
                    FractionBox[
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}]}], "2"], "+", 
                    RowBox[{
                    FractionBox["7", "8"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], "2"]}], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], "3"], ")"}], 
                    SeriesData[$CellContext`x, 1, {}, 0, 3, 1], Editable -> 
                    False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "]"}], ",", 
                    RowBox[{"-", 
                    FractionBox["3", "2"]}], ",", 
                    FractionBox["7", "8"]}], "}"}], ",", "0", ",", "3", ",", 
                    "1"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                    InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"otherwise\"", "\[NoBreak]", 
                    "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, ColumnAlignments -> {Left}, 
                 ColumnSpacings -> 1.2, ColumnWidths -> Automatic, 
                 AllowedDimensions -> {2, Automatic}, Selectable -> True, 
                 Editable -> True]}}, ColumnAlignments -> {Left}, 
              ColumnSpacings -> 0.5, ColumnWidths -> Automatic], "Piecewise", 
             SyntaxForm -> Span, SelectWithContents -> True, Selectable -> 
             False, Editable -> False, DeleteWithContents -> True], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x=\[Infinity]", 
     "scanner" -> "Series", "id" -> 
     "SeriesExpansionOfTheIntegralAt `1`x=Infinity", "position" -> "800", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Series[-2 Log[x] + Log[1 - x^2], {x, Infinity, 4}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"-", 
                    SuperscriptBox["x", "2"]}], ")"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"log", "(", "x", ")"}]}]}], ")"}], "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "x"], ")"}], "2"], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "x"], ")"}], "4"], ")"}], 
                    SeriesData[$CellContext`x, 
                    DirectedInfinity[1], {}, 0, 4, 1], Editable -> False]}], 
                  RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "\[Infinity]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"Log", "[", "x", "]"}]}], "+", 
                    RowBox[{"Log", "[", 
                    RowBox[{"-", 
                    SuperscriptBox["x", "2"]}], "]"}]}], ",", "0", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", "0", ",", "4", ",", 
                    "1"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                 InterpretationFunction -> (#2& ), SyntaxForm -> Plus]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"Puiseux series\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}, StripOnInput -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`aux1$$ = {
   True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "8", "datatypes" -> 
    "", "timedout" -> "Integral", "timedoutpods" -> "", "timing" -> "4.18", 
    "parsetiming" -> "0.86", "parsetimedout" -> "false", "recalculated" -> 
    "http://www5a.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa93581c51a28e21h5eh7000004b6bd3b33fc4aa5h6140422195261669885", "id" -> 
    "MSPa93591c51a28e21h5eh7000001hbaeg7e7ga9d990", "host" -> 
    "http://www5a.wolframalpha.com", "server" -> "52", "related" -> 
    "http://www5a.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa93601c51a28e21h5eh7000004bggi9if8i40b5fa6140422195261669885", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2018, 11, 15, 0, 42, 3.5213421`8.29928320000526}, "Line" -> 
    108, "SessionID" -> 29644626630232133871}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Integrate[2/(x(x^2-1)),x]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1383., {1932., 1942.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.751227724157061*^9},ExpressionUUID->"ac78e9a9-915b-4476-aaa7-\
5a63423cc993"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"-", "1"}], 
    SuperscriptBox["x", "2"]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7512280350038958`*^9, 
  3.7512280700532913`*^9}},ExpressionUUID->"e4b6f65e-fba5-463a-8ea1-\
e393386535ef"],

Cell[BoxData[
 FractionBox["1", "x"]], "Output",
 CellChangeTimes->{{3.751228048227762*^9, 
  3.751228070405473*^9}},ExpressionUUID->"86a63414-7c7d-49f7-9a59-\
a9d85b4e204a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "y", "]"}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "-", "1"}], ")"}], 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"2", 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.751228096416654*^9, 
  3.7512281303832407`*^9}},ExpressionUUID->"3cd6a547-2d8b-46c6-b6e4-\
74e7d54eb72c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "x", "]"}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{"1", "-", 
             SuperscriptBox["x", "2"]}], "]"}]}]}], ")"}]}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "x", "]"}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{"1", "-", 
             SuperscriptBox["x", "2"]}], "]"}]}]}], ")"}]}]], " ", 
      RowBox[{"Log", "[", "x", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.75122812185421*^9, 
  3.7512281308779182`*^9}},ExpressionUUID->"efd4dde7-f7de-4463-9ff4-\
a3f61708e83a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "x", "]"}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"Log", "[", 
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}], "]"}]}]}], ")"}]}]], " ", 
       RowBox[{"C", "[", "1", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "x", "]"}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"Log", "[", 
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}], "]"}]}]}], ")"}]}]], " ", 
       RowBox[{"Log", "[", "x", "]"}]}]}]}], "}"}], "}"}], "]"}]], "Input",
 NumberMarks->False,ExpressionUUID->"679e29c8-97cf-4855-8e34-5348a2a310c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "-", 
         RowBox[{"Log", "[", "x", "]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.751228139714801*^9},ExpressionUUID->"853cb1cc-762a-42d4-8a33-\
88bc4de1e4be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"x", "*", 
     RowBox[{"Log", "[", "x", "]"}]}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7512287230318856`*^9, 
  3.7512287376992297`*^9}},ExpressionUUID->"8528e79f-83da-42c9-823a-\
a6662bfdb779"],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Log", "[", "x", "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.751228738013394*^9},ExpressionUUID->"a86a9453-255a-42fe-98c1-\
c5f702302825"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{"Log", "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Log", "[", "x", "]"}], "2"], "*", 
     SuperscriptBox["x", "2"]}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.751228986749133*^9, 3.7512289963556557`*^9}, {
  3.7512292188028355`*^9, 3.751229225583599*^9}, {3.751229326953005*^9, 
  3.7512293279897428`*^9}},ExpressionUUID->"868c3bae-34e2-4ef8-a599-\
a265ff040a51"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   RowBox[{"x", " ", 
    RowBox[{"Log", "[", "x", "]"}]}]]}]], "Output",
 CellChangeTimes->{3.751228996720769*^9, 3.7512292259526124`*^9, 
  3.7512293284495134`*^9},ExpressionUUID->"295d5545-34d3-481d-83d5-\
acfd7007c066"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{"Log", "[", "x", "]"}], "*", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "-", 
     RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], "x"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "+", "1"}], ")"}]}]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.751229093344011*^9, 
  3.751229126358345*^9}},ExpressionUUID->"2e4d557f-1d01-4548-9884-\
7b7bc6dd3d2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", "x"], "+", 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Log", "[", "x", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7512291268500295`*^9},ExpressionUUID->"c4f723f2-7985-4901-ad77-\
0b1a828a30b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionPeriod", "[", 
  RowBox[{
   RowBox[{"Tan", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.751229769408739*^9, 
  3.7512297813034787`*^9}},ExpressionUUID->"6c241ade-5b1b-46c4-9dc0-\
c98e317a5a36"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{{3.751229778192808*^9, 
  3.751229781585678*^9}},ExpressionUUID->"c7d52f64-71e8-4f32-ac67-\
3693801387a1"]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 547, 16, 58, "Input",ExpressionUUID->"5bc024b6-ecc0-4235-b237-fa0a4b8eff4a"],
Cell[1130, 40, 226, 7, 77, "Output",ExpressionUUID->"69596e84-960c-43de-91c4-91e5337a4feb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1393, 52, 280, 8, 75, "Input",ExpressionUUID->"4f401033-11c6-49c6-b672-ba029efbe856"],
Cell[1676, 62, 149, 3, 67, "Output",ExpressionUUID->"d3a01c33-63b0-43b4-aa3d-d24523884f7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1862, 70, 652, 21, 46, "Input",ExpressionUUID->"14d099cc-1d14-46c2-ab39-0c64c1132225"],
Cell[2517, 93, 458, 15, 78, "Output",ExpressionUUID->"b6ae42d2-3c62-4610-b604-02242d3bd91f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3012, 113, 975, 26, 116, "Input",ExpressionUUID->"814dfa41-1ecc-4c3f-8065-76189c8d7406"],
Cell[3990, 141, 300, 7, 90, "Output",ExpressionUUID->"21021af5-505d-4950-8fae-bba5234ab643"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4327, 153, 326, 11, 80, "Input",ExpressionUUID->"3ee9e518-877a-4a1b-8ac5-b1339767e684"],
Cell[4656, 166, 296, 10, 99, "Output",ExpressionUUID->"b5ba64ca-bcec-4787-a43d-2f804332c937"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4989, 181, 421, 12, 72, "Input",ExpressionUUID->"74293d66-b765-4b03-9355-25f531ea7233"],
Cell[5413, 195, 962, 28, 133, "Output",ExpressionUUID->"f1ec2fd3-55a7-4d50-8947-07f27e56613b"]
}, Open  ]],
Cell[6390, 226, 814, 24, 102, "Input",ExpressionUUID->"c5cc6000-f340-4b99-a61a-9cadd9c7ab32"],
Cell[7207, 252, 358, 11, 70, "Input",ExpressionUUID->"47d712d5-3ce1-4fa7-9509-d9cc7e3a6f06"],
Cell[CellGroupData[{
Cell[7590, 267, 253, 7, 42, "Input",ExpressionUUID->"709ff97b-08ff-4a11-8d3d-ca0fddb5347b"],
Cell[7846, 276, 188, 4, 67, "Output",ExpressionUUID->"53fb330d-35db-4c9a-bda5-f29b958dea17"]
}, Open  ]],
Cell[8049, 283, 396, 11, 66, "Input",ExpressionUUID->"73169c8a-22f2-46f4-b443-6d26baa481bd"],
Cell[CellGroupData[{
Cell[8470, 298, 613, 16, 72, "Input",ExpressionUUID->"efdc0715-184e-4cf9-a57e-1359181e7769"],
Cell[9086, 316, 8156, 151, 297, "Output",ExpressionUUID->"860c6f2c-2d3b-434a-aca8-b0f64fd9986f"]
}, Open  ]],
Cell[17257, 470, 835, 24, 153, "Input",ExpressionUUID->"07940388-9e9f-4572-986d-a75067796df3"],
Cell[CellGroupData[{
Cell[18117, 498, 238, 6, 42, "Input",ExpressionUUID->"b8270d65-8272-4662-9ea4-59dd8f26a736"],
Cell[18358, 506, 768, 23, 149, "Output",ExpressionUUID->"1fd0dc94-fa4b-46ea-a33f-a00bea76ea76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19163, 534, 364, 9, 72, "Input",ExpressionUUID->"4282d3ae-74e1-4f7a-9cfc-4f242e39be12"],
Cell[19530, 545, 1005, 31, 213, "Output",ExpressionUUID->"b2312d13-3c1d-456d-a3fc-af0d4cb2b6ac"],
Cell[20538, 578, 803, 24, 149, "Output",ExpressionUUID->"0213e85d-1b11-4510-aae2-37c34496fdb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21378, 607, 293, 8, 42, "Input",ExpressionUUID->"a5a93334-4548-47a1-bb5b-4f6f92ec2aec"],
Cell[21674, 617, 204, 4, 67, "Output",ExpressionUUID->"cce0a772-808a-4820-810f-72d3c5511f3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21915, 626, 183, 4, 42, "Input",ExpressionUUID->"2c6dd358-4bd8-43a3-a13e-632f4fdaad7f"],
Cell[22101, 632, 753, 24, 149, "Output",ExpressionUUID->"6106b496-a054-44df-8afa-6eacf84ef23e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22891, 661, 203, 5, 42, "Input",ExpressionUUID->"f470b62c-9bdb-477c-a41e-608de1bbbc97"],
Cell[23097, 668, 733, 23, 149, "Output",ExpressionUUID->"64d2d2c1-e1e7-4670-8baa-72a4e3af01be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23867, 696, 258, 7, 42, "Input",ExpressionUUID->"4bf41877-5157-4170-9559-dcb81e651ac5"],
Cell[24128, 705, 1423, 46, 264, "Output",ExpressionUUID->"d57fde02-f5e6-4167-8acb-02020639eded"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25588, 756, 319, 8, 42, "Input",ExpressionUUID->"a43bbb22-0b77-49f9-a011-18e1b786a413"],
Cell[25910, 766, 216, 5, 67, "Output",ExpressionUUID->"ade5e75b-3902-41fe-9d8c-0b70c28b3b66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26163, 776, 198, 5, 42, "Input",ExpressionUUID->"f4916ee2-9617-48ba-b6c8-b06dbd7d4c3a"],
Cell[26364, 783, 395, 11, 67, "Output",ExpressionUUID->"13c59049-5e59-49f2-99c5-c1bec97fd236"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26796, 799, 203, 5, 42, "Input",ExpressionUUID->"1dbe8cee-26c4-4c22-9abd-dfc7cb583607"],
Cell[27002, 806, 690, 21, 67, "Output",ExpressionUUID->"08f44796-976e-46ee-b483-cfb228e89bcd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27729, 832, 430, 12, 42, "Input",ExpressionUUID->"2e10d30b-ea42-4035-bbe4-df8bf4e25ca6"],
Cell[28162, 846, 831, 24, 97, "Output",ExpressionUUID->"3a8139cc-0243-45f8-aebf-44a3e9637705"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29030, 875, 401, 11, 66, "Input",ExpressionUUID->"160159bb-0a35-4527-af3d-6a65d74e1e79"],
Cell[29434, 888, 772, 23, 93, "Output",ExpressionUUID->"4613727d-f743-4a1a-9193-dc778f0c7847"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30243, 916, 1053, 31, 63, "Input",ExpressionUUID->"282d2f5f-29d2-41b3-90f4-af00b3f217fe"],
Cell[31299, 949, 1394, 42, 80, "Output",ExpressionUUID->"ec9fe257-bfdf-4c51-8b84-76e3b9889c88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32730, 996, 912, 27, 70, "Input",ExpressionUUID->"2efa2e91-fc54-4efb-a873-e86488fa9c26"],
Cell[33645, 1025, 297, 5, 49, "Output",ExpressionUUID->"c5e06533-fd7b-4387-87a5-c1a045f73923"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33979, 1035, 574, 16, 43, "Input",ExpressionUUID->"b8b48adc-da09-4bdf-83a6-57015c2141a7"],
Cell[34556, 1053, 228, 7, 75, "Output",ExpressionUUID->"1211b9a2-55b6-4839-ae9e-b22c8d0da52f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34821, 1065, 246, 5, 43, "Input",ExpressionUUID->"b969705d-fc74-41b4-9575-b89b44556758"],
Cell[35070, 1072, 139842, 2741, 2870, "Output",ExpressionUUID->"a4a9d43a-b9a3-4f91-a979-23fef19b1469"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174949, 3818, 268, 7, 43, "Input",ExpressionUUID->"70e5ed16-b316-4c5d-8e0e-df900c5595b5"],
Cell[175220, 3827, 293, 8, 74, "Output",ExpressionUUID->"ac7dccd6-7edd-4496-9c25-726029abee64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175550, 3840, 264, 7, 81, "Input",ExpressionUUID->"0902dc29-722d-42c7-9f09-fbdd75bbe1d6"],
Cell[175817, 3849, 289, 8, 73, "Output",ExpressionUUID->"defb9dd4-2f87-463f-bcc2-4a8e4ac3f84d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176143, 3862, 337, 11, 88, "Input",ExpressionUUID->"6976d0be-3605-4c06-b660-50908209235a"],
Cell[176483, 3875, 387, 13, 69, "Output",ExpressionUUID->"82f1d258-db59-49dd-b6f1-f08ef46fa243"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176907, 3893, 228, 5, 43, "Input",ExpressionUUID->"9a77e528-6204-447f-9788-b079e6ce8585"],
Cell[177138, 3900, 161564, 3155, 3902, "Output",ExpressionUUID->"ac78e9a9-915b-4476-aaa7-5a63423cc993"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338739, 7060, 283, 8, 79, "Input",ExpressionUUID->"e4b6f65e-fba5-463a-8ea1-e393386535ef"],
Cell[339025, 7070, 174, 4, 69, "Output",ExpressionUUID->"86a63414-7c7d-49f7-9a59-a9d85b4e204a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339236, 7079, 611, 18, 78, "Input",ExpressionUUID->"3cd6a547-2d8b-46c6-b6e4-74e7d54eb72c"],
Cell[339850, 7099, 1073, 32, 68, "Output",ExpressionUUID->"efd4dde7-f7de-4463-9ff4-a3f61708e83a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340960, 7136, 1084, 31, 65, "Input",ExpressionUUID->"679e29c8-97cf-4855-8e34-5348a2a310c3"],
Cell[342047, 7169, 543, 18, 75, "Output",ExpressionUUID->"853cb1cc-762a-42d4-8a33-88bc4de1e4be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342627, 7192, 295, 8, 81, "Input",ExpressionUUID->"8528e79f-83da-42c9-823a-a6662bfdb779"],
Cell[342925, 7202, 189, 5, 49, "Output",ExpressionUUID->"a86a9453-255a-42fe-98c1-c5f702302825"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343151, 7212, 505, 13, 83, "Input",ExpressionUUID->"868c3bae-34e2-4ef8-a599-a265ff040a51"],
Cell[343659, 7227, 272, 7, 73, "Output",ExpressionUUID->"295d5545-34d3-481d-83d5-acfd7007c066"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343968, 7239, 613, 19, 77, "Input",ExpressionUUID->"2e4d557f-1d01-4548-9884-7b7bc6dd3d2e"],
Cell[344584, 7260, 378, 12, 69, "Output",ExpressionUUID->"c4f723f2-7985-4901-ad77-0b1a828a30b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344999, 7277, 249, 6, 43, "Input",ExpressionUUID->"6c241ade-5b1b-46c4-9dc0-c98e317a5a36"],
Cell[345251, 7285, 158, 3, 106, "Output",ExpressionUUID->"c7d52f64-71e8-4f32-ac67-3693801387a1"]
}, Open  ]]
}
]
*)

