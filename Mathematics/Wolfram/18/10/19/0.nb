(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    375183,       8190]
NotebookOptionsPosition[    370826,       8079]
NotebookOutlinePosition[    371200,       8095]
CellTagsIndexPosition[    371157,       8092]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
     RowBox[{"4", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"4", 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"16", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"16", "x"}], "-", "14"}], ")"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", "x"}]]}]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7487939576331186`*^9, 
  3.74879400615911*^9}},ExpressionUUID->"60348c5e-2907-4b18-b0d8-\
691ea266086d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}]], " ", "x", " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.74879398584285*^9, 
  3.748794007156533*^9}},ExpressionUUID->"b5106ad4-e1fe-4207-bde4-\
d15eb25ed23c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{
  "\"\<y''[x]+4y'[x]+4y[x]-((16\!\(\*SuperscriptBox[\(x\), \(2\)]\)+16x-14)\!\
\(\*SuperscriptBox[\(\[ExponentialE]\), \(2  x\)]\))\[Equal]0\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Differential equation solution\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7486918584884634`*^9, 3.7486918764681234`*^9}, {
   3.7486950945029287`*^9, 3.748695096868552*^9}, 3.7487971515388756`*^9, {
   3.7487972755666065`*^9, 
   3.74879729714915*^9}},ExpressionUUID->"acc9ffb7-05fd-4b34-bd11-\
0067c303206b"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "y''[x]+4y'[x]+4y[x]-((16\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)+16x-14)\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(2  \
x\)]\))\[Equal]0", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Differential equation solution"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Differential equation solutions", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"DSolve[{4 y[x] + 4 y'[x] + y''[x] == 0}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  SubscriptBox["c", "1"], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "x"}]]}], "+", 
                RowBox[{
                  SubscriptBox["c", "2"], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "x"}]], " ", "x"}]}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 StyleBox[
                  TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{"\"Solve \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    RowBox[{"4", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    "\[LongEqual]", "0"}], TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 4 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], 
                    4 $CellContext`y[$CellContext`x]] == 0]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"]}, "RowDefault"], "\":\""}, 
                   "RowWithSeparators"], 
                  GrayLevel[0.5], StripOnInput -> False], {
                 LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Assume \"", "\"a \"", "\"solution \"", "\"will \"", 
                    "\"be \"", "\"proportional \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"for \"", "\"some \"", "\"constant \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\".\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"y", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`y[$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    "\" \""}, "RowDefault"], "\"into \"", "\"the \"", 
                    "\"differential \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], "+", 
                    RowBox[{"4", " ", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm]}], 
                    "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}]}], HoldForm], "\" \""},
                     "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", {$CellContext`x, 2}][
                    E^($CellContext`\[Lambda] $CellContext`x)]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) $CellContext`\
\[Lambda]^2]], FontColor -> GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x][
                    E^($CellContext`\[Lambda] $CellContext`x)]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Lambda]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) $CellContext`\
\[Lambda]]], FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "+", 
                    RowBox[{"4", " ", "\[Lambda]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}]}], HoldForm], "\" \""},
                     "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Factor \"", "\"out \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], "+", 
                    RowBox[{"4", " ", "\[Lambda]"}], "+", "4"}], HoldForm], 
                    ")"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{"\"Since \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], "\[NotEqual]", "0"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) != 0]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\" \""}, "RowDefault"], "\"for \"", "\"any \"", 
                    "\"finite \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "\",\"", "\" \""}, "RowDefault"], 
                    "\"the \"", "\"zeros \"", "\"must \"", "\"come \"", 
                    "\"from \"", "\"the \"", "\"polynomial:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], "+", 
                    RowBox[{"4", " ", "\[Lambda]"}], "+", "4"}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", "0"}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Factor:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"\[Lambda]", "+", "2"}], HoldForm], ")"}], "2"], 
                    "\[LongEqual]", "0"}]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Solve \"", "\"for \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"\[Lambda]", "\[LongEqual]", 
                    RowBox[{"-", "2"}]}], 
                    StyleBox[
                    "\" or \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    RowBox[{"\[Lambda]", "\[LongEqual]", 
                    RowBox[{"-", "2"}]}]}, "RowDefault"]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"multiplicity \"", "\"of \"", "\"the \"", 
                    "\"root \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm]]], 
                    ExpressionCell[-2]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], 
                    ExpressionCell[2]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"which \"", "\"gives \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "x", ")"}], "\[LongEqual]", 
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "x"}]]}]}], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 1][$CellContext`x] == 
                    E^((-2) $CellContext`x) Subscript[$CellContext`c, 1]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\", \"", TraditionalForm]]], 
                    ExpressionCell[", "]], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "x", ")"}], "\[LongEqual]", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "x"}]], " ", "x"}]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 2][$CellContext`x] == (
                    E^((-2) $CellContext`x) $CellContext`x) 
                    Subscript[$CellContext`c, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"as \"", "\"solutions, \"", "\"where \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"are \"", "\"arbitrary \"", 
                    "\"constants.\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"is \"", 
                    "\"the \"", "\"sum \"", "\"of \"", "\"the \"", 
                    "\"above \"", "\"solutions:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "x", ")"}], "+", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "2", " ", "x"}]]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "2", " ", "x"}]], " ", "x"}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "DifferentialEquationSolution__Approximate form"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Solve as a homogeneous linear equation", 
         "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Solve as a homogeneous linear equation", "input" -> 
           "DifferentialEquationSolution__Solve as a homogeneous linear \
equation"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Solve with Laplace transform", "input" -> 
           "DifferentialEquationSolution__Solve with Laplace transform"}, \
{}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "DifferentialEquationSolution__Hide steps"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "y''[x]+4y'[x]+4y[x]", "score" -> "0.35212765957446807", "level" -> 
        "medium"}, {}]}]}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> "7.297", 
    "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSPa1842419hfg7b7g62d68f100003c76e8a01g3ag108", "host" -> 
    "http://www5a.wolframalpha.com", "server" -> "32", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2018, 10, 17, 22, 35, 5.5363292`8.495796881662615}, "Line" -> 
    3, "SessionID" -> 20141252593234844199}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = 
   "y''[x]+4y'[x]+4y[x]-((16\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)+16x-14)\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(2  \
x\)]\))\[Equal]0"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1383., {969., 979.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.748797160835516*^9, 
  3.748797305559305*^9},ExpressionUUID->"c8def604-28ec-442f-82f3-\
fa4cb569c7b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{
  "\"\<y''[x]+4y'[x]+4y[x]-((16\!\(\*SuperscriptBox[\(x\), \(2\)]\)+16x-14)\!\
\(\*SuperscriptBox[\(\[ExponentialE]\), \(2  x\)]\))\[Equal]0\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Differential equation solution\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",ExpressionUUID->"e866c7cc-4819-4b9a-8896-\
7c5b792c0f44"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "y''[x]+4y'[x]+4y[x]-((16\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)+16x-14)\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(2  \
x\)]\))\[Equal]0", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Differential equation solution"}, 
    PodStates -> {
     "Step-by-step solution", "Show all steps", 
      "DifferentialEquationSolution__Solve with Laplace transform"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Differential equation solutions", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"DSolve[{4 y[x] + 4 y'[x] + y''[x] == 0}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  SubscriptBox["c", "1"], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "x"}]]}], "+", 
                RowBox[{
                  SubscriptBox["c", "2"], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "x"}]], " ", "x"}]}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 StyleBox[
                  TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{"\"Solve \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    RowBox[{"4", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    "\[LongEqual]", "0"}], TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 4 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], 
                    4 $CellContext`y[$CellContext`x]] == 0]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"]}, "RowDefault"], "\":\""}, 
                   "RowWithSeparators"], 
                  GrayLevel[0.5], StripOnInput -> False], {
                 LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Assume \"", "\"a \"", "\"solution \"", "\"will \"", 
                    "\"be \"", "\"proportional \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"for \"", "\"some \"", "\"constant \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\".\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"y", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`y[$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    "\" \""}, "RowDefault"], "\"into \"", "\"the \"", 
                    "\"differential \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], "+", 
                    RowBox[{"4", " ", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm]}], 
                    "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}]}], HoldForm], "\" \""},
                     "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", {$CellContext`x, 2}][
                    E^($CellContext`\[Lambda] $CellContext`x)]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) $CellContext`\
\[Lambda]^2]], FontColor -> GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x][
                    E^($CellContext`\[Lambda] $CellContext`x)]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Lambda]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) $CellContext`\
\[Lambda]]], FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "+", 
                    RowBox[{"4", " ", "\[Lambda]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}]}], HoldForm], "\" \""},
                     "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Factor \"", "\"out \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], "+", 
                    RowBox[{"4", " ", "\[Lambda]"}], "+", "4"}], HoldForm], 
                    ")"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{"\"Since \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], "\[NotEqual]", "0"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) != 0]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\" \""}, "RowDefault"], "\"for \"", "\"any \"", 
                    "\"finite \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "\",\"", "\" \""}, "RowDefault"], 
                    "\"the \"", "\"zeros \"", "\"must \"", "\"come \"", 
                    "\"from \"", "\"the \"", "\"polynomial:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], "+", 
                    RowBox[{"4", " ", "\[Lambda]"}], "+", "4"}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", "0"}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Factor:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"\[Lambda]", "+", "2"}], HoldForm], ")"}], "2"], 
                    "\[LongEqual]", "0"}]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Solve \"", "\"for \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"\[Lambda]", "\[LongEqual]", 
                    RowBox[{"-", "2"}]}], 
                    StyleBox[
                    "\" or \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    RowBox[{"\[Lambda]", "\[LongEqual]", 
                    RowBox[{"-", "2"}]}]}, "RowDefault"]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"multiplicity \"", "\"of \"", "\"the \"", 
                    "\"root \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm]]], 
                    ExpressionCell[-2]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], 
                    ExpressionCell[2]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"which \"", "\"gives \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "x", ")"}], "\[LongEqual]", 
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "x"}]]}]}], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 1][$CellContext`x] == 
                    E^((-2) $CellContext`x) Subscript[$CellContext`c, 1]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\", \"", TraditionalForm]]], 
                    ExpressionCell[", "]], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "x", ")"}], "\[LongEqual]", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "x"}]], " ", "x"}]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 2][$CellContext`x] == (
                    E^((-2) $CellContext`x) $CellContext`x) 
                    Subscript[$CellContext`c, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"as \"", "\"solutions, \"", "\"where \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"are \"", "\"arbitrary \"", 
                    "\"constants.\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"is \"", 
                    "\"the \"", "\"sum \"", "\"of \"", "\"the \"", 
                    "\"above \"", "\"solutions:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "x", ")"}], "+", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "2", " ", "x"}]]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "2", " ", "x"}]], " ", "x"}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "DifferentialEquationSolution__Approximate form"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Solve as a homogeneous linear equation", 
         "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Solve as a homogeneous linear equation", "input" -> 
           "DifferentialEquationSolution__Solve as a homogeneous linear \
equation"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Solve with Laplace transform", "input" -> 
           "DifferentialEquationSolution__Solve with Laplace transform"}, \
{}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "DifferentialEquationSolution__Hide steps"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "y''[x]+4y'[x]+4y[x]", "score" -> "0.35212765957446807", "level" -> 
        "medium"}, {}]}]}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> "12.467", 
    "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSPa3233181g960eb26547ee000015760f6h90ahga02", "host" -> 
    "http://www5a.wolframalpha.com", "server" -> "10", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2018, 10, 17, 22, 35, 34.7394857`9.293398281078911}, "Line" -> 
    4, "SessionID" -> 20141252593234844199}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = 
   "y''[x]+4y'[x]+4y[x]-((16\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)+16x-14)\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(2  \
x\)]\))\[Equal]0"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1383., {969., 979.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7487973348754177`*^9},ExpressionUUID->"c81bfbb9-0c61-48b2-982f-\
f2630ed1386b"],

Cell[BoxData[
 TemplateBox[{
  "WolframAlpha","nopst",
   "\"The \\!\\(\\*RowBox[{\\\"\\\\\\\"DifferentialEquationSolution\\\\\\\"\\\
\"}]\\) pod is not reporting any additional information for the \
\\!\\(\\*RowBox[{\\\"\\\\\\\"DifferentialEquationSolution__Solve as a \
homogeneous linear equation\\\\\\\"\\\"}]\\) pod state.\"",2,5,1,
   20141252593234844199,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7487973577359*^9},ExpressionUUID->"756aa87b-199c-4875-af50-3adfca75ada2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"4", "x"}], "-", 
    FractionBox["3", "2"]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.748797451124486*^9, 3.748797478347783*^9}, 
   3.748797523473778*^9, {3.7487976682793202`*^9, 
   3.7487976689019613`*^9}},ExpressionUUID->"88305f8f-a033-478e-b538-\
1d512d395b8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "''"}], "[", "x", "]"}], "+", 
   RowBox[{"4", 
    RowBox[{
     RowBox[{"f", "'"}], "[", "x", "]"}]}], "+", 
   RowBox[{"4", 
    RowBox[{"f", "[", "x", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7487974841744385`*^9, 3.7487975000732737`*^9}, {
  3.748797614425358*^9, 
  3.748797636140842*^9}},ExpressionUUID->"34f1c8f6-3f4b-41b9-9866-\
daefc179e5e2"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "7"}], "+", 
    RowBox[{"8", " ", "x"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["x", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.748797492426669*^9, 3.748797525376692*^9}, {
   3.7487976165251646`*^9, 3.7487976367375*^9}, 
   3.748797670752925*^9},ExpressionUUID->"b0a2b7b9-29d5-4d2c-ba58-\
e93e3eedb9c9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", "x"}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "-", "1"}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], "x"}]], 
    RowBox[{"(", 
     RowBox[{"\[Lambda]", "+", "\[Mu]x"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7487984134525585`*^9, 3.7487984260422893`*^9}, {
  3.7487987684299564`*^9, 
  3.748798782516852*^9}},ExpressionUUID->"ee7b603b-b630-402e-a41a-\
2b53ee051a23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "''"}], "[", "x", "]"}], "+", 
    RowBox[{"4", 
     RowBox[{
      RowBox[{"g", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"4", 
     RowBox[{"g", "[", "x", "]"}]}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.7487978221183567`*^9, {3.748798430073962*^9, 
   3.748798439634451*^9}},ExpressionUUID->"97efaffe-7b17-4430-be3a-\
2df495004888"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", "x"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "7"}], "+", 
    RowBox[{"8", " ", "x"}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["x", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7487984402331076`*^9, {3.74879878579595*^9, 
   3.748798789498814*^9}},ExpressionUUID->"23843ca4-c8f6-4de8-aceb-\
2597c9df4aa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}], "-", 
     RowBox[{"2", 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
    RowBox[{"8", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "x"}], "]"}]}]}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.748799955485831*^9, 3.748799958922842*^9}, {
   3.7488000789672413`*^9, 3.748800083047887*^9}, 
   3.748800883402762*^9},ExpressionUUID->"fd776c03-b3c1-4ed8-9557-\
fb7173759171"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "2", "]"}]}], "-", 
     RowBox[{
      FractionBox["2", "5"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "x"}], "]"}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.748800083791459*^9, 
  3.748800884072361*^9},ExpressionUUID->"11a534b6-bc90-4d63-8d5c-\
18462c8df376"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Q", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "2"}], 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "x"}], "]"}]}], "3"], "-", 
   RowBox[{"2", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", "x"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.748800099696311*^9, 
  3.748800125085348*^9}},ExpressionUUID->"7a628ff6-52b0-48ce-9aa8-\
0a1dda99b2fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Q", "''"}], "[", "x", "]"}], "+", 
   RowBox[{
    RowBox[{"Q", "'"}], "[", "x", "]"}], "-", 
   RowBox[{"2", 
    RowBox[{"Q", "[", "x", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748800126793364*^9, 
  3.7488001450128956`*^9}},ExpressionUUID->"7b4c004e-2fae-4f35-9f09-\
34bdff29e70a"],

Cell[BoxData[
 RowBox[{
  FractionBox["80", "3"], " ", 
  RowBox[{"Cos", "[", "x", "]"}], " ", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.748800133405571*^9, 
  3.7488001454096546`*^9}},ExpressionUUID->"c0fb7d79-82e9-4be3-bbff-\
205522739d7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<y''[x]+y'[x]-2y[x]\[Equal]8Sin[2x]\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Differential equation solution\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.748800203141367*^9, 
  3.7488008708879805`*^9},ExpressionUUID->"ee0cf7a0-bb81-46f6-8852-\
f6ffac497830"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "y''[x]+y'[x]-2y[x]\[Equal]8Sin[2x]", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Differential equation solution"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Differential equation solutions", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "DSolve[{-2 y[x] + y'[x] + y''[x] == 8 Sin[2 x]}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  SubscriptBox["c", "1"], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "x"}]]}], "+", 
                RowBox[{
                  SubscriptBox["c", "2"], " ", 
                  SuperscriptBox["\[ExponentialE]", "x"]}], "-", 
                RowBox[{
                  FractionBox["6", "5"], " ", 
                  RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "-", 
                RowBox[{
                  RowBox[{
                    FractionBox["2", "5"]}], " ", 
                  RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 StyleBox[
                  TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{"\"Solve \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    "\[LongEqual]", 
                    RowBox[{"8", " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], (-2) \
$CellContext`y[$CellContext`x]] == 8 Sin[2 $CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"]}, "RowDefault"], "\":\""}, 
                   "RowWithSeparators"], 
                  GrayLevel[0.5], StripOnInput -> False], {
                 LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"will \"", 
                    "\"be \"", "\"the \"", "\"sum \"", "\"of \"", "\"the \"", 
                    "\"complementary \"", "\"solution \"", "\"and \"", 
                    "\"particular \"", "\"solution.\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    "\"Find the complementary solution by solving \"", 
                    FontColor -> GrayLevel[0.5], StripOnInput -> False], 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], (-2) \
$CellContext`y[$CellContext`x]]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["0", TraditionalForm]]], 
                    ExpressionCell[0]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], 
                    StyleBox[
                    "\":\"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False]}, "RowDefault"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Assume \"", "\"a \"", "\"solution \"", "\"will \"", 
                    "\"be \"", "\"proportional \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"for \"", "\"some \"", "\"constant \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\".\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"y", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`y[$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    "\" \""}, "RowDefault"], "\"into \"", "\"the \"", 
                    "\"differential \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], "+", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}]}], HoldForm], "\" \""},
                     "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", {$CellContext`x, 2}][
                    E^($CellContext`\[Lambda] $CellContext`x)]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) $CellContext`\
\[Lambda]^2]], FontColor -> GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x][
                    E^($CellContext`\[Lambda] $CellContext`x)]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Lambda]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) $CellContext`\
\[Lambda]]], FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "+", 
                    RowBox[{"\[Lambda]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}]}], HoldForm], "\" \""},
                     "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Factor \"", "\"out \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], "+", "\[Lambda]", "-", 
                    "2"}], HoldForm], ")"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{"\"Since \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], "\[NotEqual]", "0"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) != 0]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\" \""}, "RowDefault"], "\"for \"", "\"any \"", 
                    "\"finite \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "\",\"", "\" \""}, "RowDefault"], 
                    "\"the \"", "\"zeros \"", "\"must \"", "\"come \"", 
                    "\"from \"", "\"the \"", "\"polynomial:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], "+", "\[Lambda]", "-", 
                    "2"}], HoldForm], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", "0"}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Factor:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"\[Lambda]", "-", "1"}], HoldForm], ")"}], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"\[Lambda]", "+", "2"}], HoldForm], ")"}]}], 
                    "\[LongEqual]", "0"}]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Solve \"", "\"for \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"\[Lambda]", "\[LongEqual]", 
                    RowBox[{"-", "2"}]}], 
                    StyleBox[
                    "\" or \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    RowBox[{"\[Lambda]", "\[LongEqual]", "1"}]}, 
                    "RowDefault"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"root \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm]]], 
                    ExpressionCell[-2]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"gives \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 1][$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^((-2) $CellContext`x) Subscript[$CellContext`c, 1]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\" \""}, "RowDefault"], "\"as \"", 
                    "\"a \"", "\"solution, \"", "\"where \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"is \"", "\"an \"", "\"arbitrary \"", "\"constant.\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"root \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["1", TraditionalForm]]], 
                    ExpressionCell[1]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"gives \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 2][$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    E^$CellContext`x Subscript[$CellContext`c, 2]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\" \""}, "RowDefault"], "\"as \"", 
                    "\"a \"", "\"solution, \"", "\"where \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"is \"", "\"an \"", "\"arbitrary \"", "\"constant.\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"is \"", 
                    "\"the \"", "\"sum \"", "\"of \"", "\"the \"", 
                    "\"above \"", "\"solutions:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "x", ")"}], "+", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "2", " ", "x"}]]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"]}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Determine \"", "\"the \"", "\"particular \"", 
                    "\"solution \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    "\[LongEqual]", 
                    RowBox[{"8", " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], (-2) \
$CellContext`y[$CellContext`x]] == 8 Sin[2 $CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"by \"", "\"the \"", "\"method \"", 
                    "\"of \"", "\"undetermined \"", "\"coefficients:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"particular \"", "\"solution \"", "\"to \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 2}]], 
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], (-2) \
$CellContext`y[$CellContext`x]]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"8", " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], TraditionalForm]]], 
                    ExpressionCell[8 Sin[2 $CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    "\" \""}, "RowDefault"], "\"is \"", "\"of \"", "\"the \"",
                     "\"form:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm]}]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Solve \"", "\"for \"", "\"the \"", "\"unknown \"", 
                    "\"constants \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Compute \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x], $CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm], ")"}]}], 
                    HoldForm]}, "RowDefault"]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "2", " ", 
                    SubscriptBox["a", "1"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{" \[LongEqual] "}}, 
                    "Rows" -> {{" \[LongEqual] "}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Compute \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x], {$CellContext`x, 2}]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm], ")"}]}], 
                    HoldForm]}, "RowDefault"]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "4", " ", 
                    SubscriptBox["a", "1"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "-", 
                    RowBox[{"4", " ", 
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{" \[LongEqual] "}}, 
                    "Rows" -> {{" \[LongEqual] "}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Substitute \"", "\"the \"", "\"particular \"", 
                    "\"solution \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False], "\" \""}, "RowDefault"], "\"into \"", "\"the \"", 
                    "\"differential \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "+", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{"8", " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "4", " ", 
                    SubscriptBox["a", "1"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "-", 
                    RowBox[{"4", " ", 
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "1"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm], ")"}]}]}], 
                    HoldForm], "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{"8", " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Simplify:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "6", " ", 
                    SubscriptBox["a", "1"]}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "2"]}]}], HoldForm], ")"}], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "2", " ", 
                    SubscriptBox["a", "1"]}], "-", 
                    RowBox[{"6", " ", 
                    SubscriptBox["a", "2"]}]}], HoldForm], ")"}], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    RowBox[{"8", " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Equate \"", "\"the \"", "\"coefficients \"", "\"of \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    Cos[2 $CellContext`x]]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"on \"", "\"both \"", "\"sides \"", "\"of \"", 
                    "\"the \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "6", " ", 
                    SubscriptBox["a", "1"]}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "2"]}]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Equate \"", "\"the \"", "\"coefficients \"", "\"of \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    Sin[2 $CellContext`x]]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"on \"", "\"both \"", "\"sides \"", "\"of \"", 
                    "\"the \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "2", " ", 
                    SubscriptBox["a", "1"]}], "-", 
                    RowBox[{"6", " ", 
                    SubscriptBox["a", "2"]}]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "8"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Solve \"", "\"the \"", "\"system:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    SubscriptBox["a", "1"], "\[LongEqual]", 
                    RowBox[{"-", 
                    FractionBox["2", "5"]}]}]}, {
                    RowBox[{
                    SubscriptBox["a", "2"], "\[LongEqual]", 
                    RowBox[{"-", 
                    FractionBox["6", "5"]}]}]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 3, RowAlignments -> Baseline, 
                    ColumnAlignments -> Left], 
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$, TableSpacing == {1, 3}]]]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"into \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}], " ", 
                    SubscriptBox["a", "1"]}], "+", 
                    RowBox[{
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}], " ", 
                    SubscriptBox["a", "2"]}]}], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[Cos[2 $CellContext`x] Subscript[$CellContext`a, 1], 
                    Sin[2 $CellContext`x] Subscript[$CellContext`a, 2]]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["2", "5"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "-", 
                    RowBox[{
                    FractionBox["6", "5"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"is:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "\"c\""], "(", "x", ")"}], "+", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["2", "5"], " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "-", 
                    RowBox[{
                    FractionBox["6", "5"], " ", 
                    RowBox[{"sin", "(", 
                    RowBox[{"2", " ", "x"}], ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "2", " ", "x"}]]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", "x"]}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "DifferentialEquationSolution__Approximate form"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "Solve with undetermined coefficients", 
         "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Solve with undetermined coefficients", "input" -> 
           "DifferentialEquationSolution__Solve with undetermined \
coefficients"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Solve with variation of parameters", "input" -> 
           "DifferentialEquationSolution__Solve with variation of \
parameters"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Solve with Laplace transform", "input" -> 
           "DifferentialEquationSolution__Solve with Laplace transform"}, \
{}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "DifferentialEquationSolution__Hide steps"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "3.5220000000000002", "parsetiming" -> "0.8130000000000001", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSPa757014eca9fbg6ggadff00005d06474eid9i4hb3", "host" -> 
    "http://www3.wolframalpha.com", "server" -> "49", "related" -> 
    "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa757114eca9fbg6ggadff000048hfg94g0a902c3d1127199754393067178", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2018, 10, 17, 23, 34, 39.4340518`9.348446285372495}, "Line" -> 
    28, "SessionID" -> 20141252593234844199}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "y''[x]+y'[x]-2y[x]\[Equal]8Sin[2x]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1383., {2033., 2043.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7488002083803425`*^9, 
  3.7488008794810205`*^9},ExpressionUUID->"d7b26b00-95da-4d88-916f-\
bcf325cedbbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{
  "\"\<x*y'[x]+(x-1)y[x]-\!\(\*SuperscriptBox[\(x\), \(2\)]\)==0\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Differential equation solution\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7488022999711084`*^9, 3.748802334316368*^9}, {
  3.748802405428464*^9, 3.7488024290258636`*^9}, {3.7488024603228264`*^9, 
  3.748802462789406*^9}, {3.74880249589464*^9, 3.748802513458517*^9}, {
  3.748802596236497*^9, 3.7488025970200453`*^9}, {3.7488027047860575`*^9, 
  3.748802714662365*^9}, {3.748803066865345*^9, 
  3.7488030989230385`*^9}},ExpressionUUID->"0bcbd7ff-184e-43e3-a54c-\
2ba9cec6b19e"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "x*y'[x]+(x-1)y[x]-\!\(\*SuperscriptBox[\(x\), \(2\)]\)==0", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Differential equation solution"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Differential equation solutions", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"DSolve[{(-1 + x) y[x] + x y'[x] == 0}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                SubscriptBox["c", "1"], " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "x"}]], " ", "x"}]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 StyleBox[
                  TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{"\"Solve the separable equation \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"x", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "-", "1"}], HoldForm], ")"}], " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    "\[LongEqual]", "0"}], TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`x 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], 
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`x, -1] $CellContext`y[$CellContext`x]] == 0]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"]}, "RowDefault"], "\":\""}, 
                   "RowWithSeparators"], 
                  GrayLevel[0.5], StripOnInput -> False], {
                 LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Solve \"", "\"for \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "\[LongEqual]", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"x", "-", "1"}], HoldForm], ")"}], " ", 
                    RowBox[{"y", "(", "x", ")"}]}], "x"]}]}]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Simplify:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    FractionBox["1", "x"], "-", "1"}], HoldForm], ")"}], " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Divide \"", "\"both \"", "\"sides \"", "\"by \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"y", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`y[$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    FractionBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], 
                    RowBox[{"y", "(", "x", ")"}]], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    FractionBox["1", "x"], "-", "1"}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Integrate \"", "\"both \"", "\"sides \"", "\"with \"", 
                    "\"respect \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["x", TraditionalForm]]], 
                    ExpressionCell[$CellContext`x]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], 
                    RowBox[{"y", "(", "x", ")"}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    FractionBox["1", "x"], "-", "1"}], HoldForm], ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Evaluate \"", "\"the \"", "\"integrals:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"y", "(", "x", ")"}], ")"}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "x"}], "+", 
                    RowBox[{"log", "(", "x", ")"}], "+", 
                    SubscriptBox["c", "1"]}], HoldForm], 
                    StyleBox[
                    "\", where \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    SubscriptBox["c", "1"], 
                    StyleBox[
                    "\" is an arbitrary constant.\"", FontColor -> 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Solve \"", "\"for \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"y", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`y[$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "x"}], "+", 
                    SubscriptBox["c", "1"]}], HoldForm]], " ", "x"}]}]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Simplify \"", "\"the \"", "\"arbitrary \"", 
                    "\"constants:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x"}]], " ", "x"}]}]}, "RowDefault"], 
                    HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                TemplateBox[{
                  RowBox[{"log", "(", "x", ")"}], "\" \"", 
                  "\"is the natural logarithm\""}, "RowDefault"], 
                TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "Solve as a separable equation", 
         "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Solve as a separable equation", "input" -> 
           "DifferentialEquationSolution__Solve as a separable equation"}, \
{}], 
         XMLElement[
         "state", {
          "name" -> "Solve as a linear equation", "input" -> 
           "DifferentialEquationSolution__Solve as a linear equation"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Transform into an exact equation", "input" -> 
           "DifferentialEquationSolution__Transform into an exact equation"}, \
{}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "DifferentialEquationSolution__Hide steps"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "x*y'[x]+(x-1)y[x]", "score" -> "0.49693877551020404", "level" -> 
        "medium"}, {}]}]}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> "5.264", 
    "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSPa9413hgd54i2g3h2c9d00003bii4eaa01hgb446", "host" -> 
    "http://www4d.wolframalpha.com", "server" -> "40", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2018, 10, 18, 0, 12, 31.6750594`9.25329234259194}, "Line" -> 
    42, "SessionID" -> 20141252593234844199}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = 
   "x*y'[x]+(x-1)y[x]-\!\(\*SuperscriptBox[\(x\), \(2\)]\)==0"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1383., {678., 688.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.748803151785999*^9},ExpressionUUID->"7bdf48b3-7dfb-4249-b221-\
df68abd9bb63"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.748802307477795*^9, 
  3.748802311688367*^9}},ExpressionUUID->"599a4659-8e10-4cab-8f6f-\
0b8422d6cff2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<(Log[x])*x*y'[x]-y[x]==-(Log[x]+1)/x\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Differential equation solution\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748803296529681*^9, 3.748803345965042*^9}, {
   3.748803405195403*^9, 3.7488034225075083`*^9}, 3.7488034875298166`*^9, {
   3.7488036430731792`*^9, 3.74880365178216*^9}, {3.748803687546548*^9, 
   3.7488037428366823`*^9}},ExpressionUUID->"736fdca6-7cda-4e7d-a3d3-\
32a8187e3885"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "(Log[x])*x*y'[x]-y[x]==-(Log[x]+1)/x", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Differential equation solution"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Differential equation solutions", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "DSolve[{-y[x] + x Log[x] y'[x] == (-1 - Log[x])/x}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  SubscriptBox["c", "1"], " ", 
                  RowBox[{"log", "(", "x", ")"}]}], "+", 
                FractionBox["1", "x"]}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 StyleBox[
                  TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{"\"Solve the linear equation \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"x", " ", 
                    RowBox[{"log", "(", "x", ")"}], " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "-", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], "\[LongEqual]", 
                    FractionBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"log", "(", "x", ")"}]}], "-", "1"}], HoldForm], 
                    "x"]}], TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[($CellContext`x Log[$CellContext`x]) 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], \
-$CellContext`y[$CellContext`x]] == $CellContext`x^(-1) 
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[-Log[$CellContext`x], -1]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False]}, "RowDefault"]}, "RowDefault"]}, "RowDefault"], 
                    "\":\""}, "RowWithSeparators"], 
                  GrayLevel[0.5], StripOnInput -> False], {
                 LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Rewrite \"", "\"the \"", "\"equation:\""},
                     "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "-", 
                    FractionBox[
                    RowBox[{"y", "(", "x", ")"}], 
                    RowBox[{"x", " ", 
                    RowBox[{"log", "(", "x", ")"}]}]]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    RowBox[{"-", 
                    FractionBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"log", "(", "x", ")"}], "+", "1"}], HoldForm], 
                    RowBox[{
                    SuperscriptBox["x", "2"], " ", 
                    RowBox[{"log", "(", "x", ")"}]}]]}]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Let \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{"\[Mu]", "(", "x", ")"}], "\[LongEqual]", 
                    TagBox[
                    SuperscriptBox["\[ExponentialE]", 
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"x", " ", 
                    RowBox[{"log", "(", "x", ")"}]}], ")"}]}]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm]], 
                    HoldForm], "\[LongEqual]", 
                    FractionBox["1", 
                    RowBox[{"log", "(", "x", ")"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`showDetailsWrapper[$CellContext`\[Mu][$\
CellContext`x] == CalculateScan`StepByStepMath`StepByStepDSolve`Private`MyExp[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    
                    Integrate[((-1)/$CellContext`x)/
                    Log[$CellContext`x], $CellContext`x]]] == 
                    Log[$CellContext`x]^(-1), 
                    CalculateScan`StepByStepMath`StepByStepIntegrate, \
((-1)/$CellContext`x)/Log[$CellContext`x], $CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\".\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Multiply \"", "\"both \"", "\"sides \"", "\"by \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Mu]", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`\[Mu][$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], 
                    RowBox[{"log", "(", "x", ")"}]], "-", 
                    FractionBox[
                    RowBox[{"y", "(", "x", ")"}], 
                    RowBox[{"x", " ", 
                    RowBox[{
                    SuperscriptBox["log", "2"], "(", "x", ")"}]}]]}], 
                    HoldForm], "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    RowBox[{"-", 
                    FractionBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"log", "(", "x", ")"}], "+", "1"}], HoldForm], 
                    RowBox[{
                    SuperscriptBox["x", "2"], " ", 
                    RowBox[{
                    SuperscriptBox["log", "2"], "(", "x", ")"}]}]]}]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"x", " ", 
                    RowBox[{
                    SuperscriptBox["log", "2"], "(", "x", ")"}]}]]}], 
                    "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    FractionBox["1", 
                    RowBox[{"log", "(", "x", ")"}]], ")"}]}], HoldForm]}], 
                    TraditionalForm]]], 
                    
                    ExpressionCell[((-1)/$CellContext`x) 
                    Log[$CellContext`x]^(-2) == 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x][Log[$CellContext`x]^(-1)]]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], 
                    RowBox[{"log", "(", "x", ")"}]], "+", 
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    FractionBox["1", 
                    RowBox[{"log", "(", "x", ")"}]], ")"}]}], HoldForm], " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    "\[LongEqual]", 
                    RowBox[{"-", 
                    FractionBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"log", "(", "x", ")"}], "+", "1"}], HoldForm], 
                    RowBox[{
                    SuperscriptBox["x", "2"], " ", 
                    RowBox[{
                    SuperscriptBox["log", "2"], "(", "x", ")"}]}]]}]}]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Apply \"", "\"the \"", "\"reverse \"", "\"product \"", 
                    "\"rule \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"f", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "g"}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"g", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "f"}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}]}], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`f 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[$CellContext`g, $CellContext`x]], $CellContext`g 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[$CellContext`f, $CellContext`x]]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{"f", " ", "g"}], ")"}]}], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x]][$CellContext`f $CellContext`g]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\" \""}, "RowDefault"], "\"to \"", 
                    "\"the \"", "\"left\[Hyphen]hand \"", "\"side:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"y", "(", "x", ")"}], 
                    RowBox[{"log", "(", "x", ")"}]], ")"}]}], HoldForm], 
                    "\[LongEqual]", 
                    RowBox[{"-", 
                    FractionBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"log", "(", "x", ")"}], "+", "1"}], HoldForm], 
                    RowBox[{
                    SuperscriptBox["x", "2"], " ", 
                    RowBox[{
                    SuperscriptBox["log", "2"], "(", "x", ")"}]}]]}]}]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Integrate \"", "\"both \"", "\"sides \"", "\"with \"", 
                    "\"respect \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["x", TraditionalForm]]], 
                    ExpressionCell[$CellContext`x]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"y", "(", "x", ")"}], 
                    RowBox[{"log", "(", "x", ")"}]], ")"}]}], HoldForm], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"log", "(", "x", ")"}], "+", "1"}], HoldForm], 
                    RowBox[{
                    SuperscriptBox["x", "2"], " ", 
                    RowBox[{
                    SuperscriptBox["log", "2"], "(", "x", ")"}]}]]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Evaluate \"", "\"the \"", "\"integrals:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    FractionBox[
                    RowBox[{"y", "(", "x", ")"}], 
                    RowBox[{"log", "(", "x", ")"}]], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"x", " ", 
                    RowBox[{"log", "(", "x", ")"}]}]], "+", 
                    SubscriptBox["c", "1"]}], HoldForm], 
                    StyleBox[
                    "\", where \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    SubscriptBox["c", "1"], 
                    StyleBox[
                    "\" is an arbitrary constant.\"", FontColor -> 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Divide \"", "\"both \"", "\"sides \"", "\"by \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Mu]", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`\[Mu][$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox["1", 
                    RowBox[{"log", "(", "x", ")"}]], TraditionalForm]]], 
                    ExpressionCell[Log[$CellContext`x]^(-1)]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"]}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    FractionBox["1", "x"], "+", 
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    RowBox[{"log", "(", "x", ")"}]}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                TemplateBox[{
                  RowBox[{"log", "(", "x", ")"}], "\" \"", 
                  "\"is the natural logarithm\""}, "RowDefault"], 
                TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Solve as a linear equation", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Solve as a linear equation", "input" -> 
           "DifferentialEquationSolution__Solve as a linear equation"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Transform into an exact equation", "input" -> 
           "DifferentialEquationSolution__Transform into an exact equation"}, \
{}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "DifferentialEquationSolution__Hide steps"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Function", "word" -> "Log", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "Log", "desc" -> "the natural logarithm", "input" -> 
          "*FunClash.Log-_*Log.Log10-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Log10", "desc" -> "the base 10 logarithm", "input" -> 
          "*FunClash.Log-_*Log10.Log-"}, {}]}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.556", 
    "parsetiming" -> "0.67", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSPa13571064fc96d2628e4e00006856cdae4d2ei9af", "host" -> 
    "http://www4d.wolframalpha.com", "server" -> "41", "related" -> 
    "http://www4d.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa13581064fc96d2628e4e00001ib2bghi9gcc51342988411736343457746", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2018, 10, 18, 0, 22, 28.6683343`9.209977372902195}, "Line" -> 
    52, "SessionID" -> 20141252593234844199}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "(Log[x])*x*y'[x]-y[x]==-(Log[x]+1)/x"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1383., {858., 868.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.748803440895653*^9, 3.748803478758864*^9, 3.7488035186548934`*^9, 
   3.7488036358763447`*^9, {3.748803670689262*^9, 3.7488036904528723`*^9}, {
   3.7488037298721666`*^9, 
   3.7488037486963186`*^9}},ExpressionUUID->"e5bd4b7b-44b3-44dd-a070-\
25f536e83cf1"]
}, Open  ]],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "(Log[x]+1)", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Differential equation solution"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Function", "word" -> "Log", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use ${desc2} instead", "count" -> 
        "2"}, {
        XMLElement[
        "value", {
         "name" -> "Log", "desc" -> "the natural logarithm", "input" -> 
          "*FunClash.Log-_*Log.Log10-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Log10", "desc" -> "the base 10 logarithm", "input" -> 
          "*FunClash.Log-_*Log10.Log-"}, {}]}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "0", "datatypes" -> 
    "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.486", 
    "parsetiming" -> "0.20400000000000001", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSPa49121f0h964ef8g20hac000013912i9hc26hde23", "host" -> 
    "http://www4d.wolframalpha.com", "server" -> "37", "related" -> 
    "http://www4d.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa49131f0h964ef8g20hac000034i6e59di20016a73116895797273570603", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2018, 10, 18, 0, 16, 29.9841689`9.229466925645056}, "Line" -> 
    45, "SessionID" -> 20141252593234844199}, Typeset`showpods$$ = {}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "(Log[x]+1)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {}, {}, Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, 
        Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1390., {122., 132.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Input",
 CellChangeTimes->{
  3.74880338998718*^9},ExpressionUUID->"df29deab-6b85-41cc-aa06-16ebf86cf42f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<x*y'[x]+y[x]==x\.b2\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Differential equation solution\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7488703098870106`*^9, 
  3.74887038064624*^9}},ExpressionUUID->"41e748d5-55a2-430a-8dc7-\
d47f04864f8d"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "x*y'[x]+y[x]==x\.b2", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Differential equation solution"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Differential equation solutions", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"DSolve[{y[x] + x y'[x] == x^2}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                FractionBox[
                 SubscriptBox["c", "1"], "x"], "+", 
                FractionBox[
                 SuperscriptBox["x", "2"], "3"]}]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 StyleBox[
                  TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{"\"Solve the linear equation \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"x", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], "\[LongEqual]", 
                    SuperscriptBox["x", "2"]}], TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`x 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], 
                    $CellContext`y[$CellContext`x]] == $CellContext`x^2]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"]}, "RowDefault"]}, "RowDefault"], "\":\""}, 
                   "RowWithSeparators"], 
                  GrayLevel[0.5], StripOnInput -> False], {
                 LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"1", "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", "x", ")"}]}], HoldForm]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    1 == CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x][$CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"x", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", "x", ")"}]}], HoldForm], " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    "\[LongEqual]", 
                    SuperscriptBox["x", "2"]}]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Apply \"", "\"the \"", "\"reverse \"", "\"product \"", 
                    "\"rule \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"f", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "g"}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"g", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "f"}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}]}], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`f 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[$CellContext`g, $CellContext`x]], $CellContext`g 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[$CellContext`f, $CellContext`x]]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{"f", " ", "g"}], ")"}]}], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x]][$CellContext`f $CellContext`g]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\" \""}, "RowDefault"], "\"to \"", 
                    "\"the \"", "\"left\[Hyphen]hand \"", "\"side:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{"x", " ", 
                    RowBox[{"y", "(", "x", ")"}]}], ")"}]}], HoldForm], 
                    "\[LongEqual]", 
                    SuperscriptBox["x", "2"]}]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Integrate \"", "\"both \"", "\"sides \"", "\"with \"", 
                    "\"respect \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["x", TraditionalForm]]], 
                    ExpressionCell[$CellContext`x]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{"x", " ", 
                    RowBox[{"y", "(", "x", ")"}]}], ")"}]}], HoldForm], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox["x", "2"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Evaluate \"", "\"the \"", "\"integrals:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"x", " ", 
                    RowBox[{"y", "(", "x", ")"}]}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["x", "3"], "3"], "+", 
                    SubscriptBox["c", "1"]}], HoldForm], 
                    StyleBox[
                    "\", where \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    SubscriptBox["c", "1"], 
                    StyleBox[
                    "\" is an arbitrary constant.\"", FontColor -> 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Divide \"", "\"both \"", "\"sides \"", "\"by \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["x", TraditionalForm]]], 
                    ExpressionCell[$CellContext`x]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    FractionBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["x", "3"], "3"], "+", 
                    SubscriptBox["c", "1"]}], HoldForm], "x"]}, "RowDefault"],
                     HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Solve as a linear equation", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Solve as a linear equation", "input" -> 
           "DifferentialEquationSolution__Solve as a linear equation"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Solve as an exact equation", "input" -> 
           "DifferentialEquationSolution__Solve as an exact equation"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "DifferentialEquationSolution__Hide steps"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.637", 
    "parsetiming" -> "0.506", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa15601d53h392db82a125000027ae3425c5i06494", "host" -> 
    "http://www3.wolframalpha.com", "server" -> "52", "related" -> 
    "http://www3.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa15611d53h392db82a12500002c54fai0acfh0cid2495249338164811682", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2018, 10, 18, 18, 53, 3.5245835`8.29968278476186}, "Line" -> 5,
     "SessionID" -> 20141679095590806270}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "x*y'[x]+y[x]==x\.b2"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1383., {586., 596.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.748870327517849*^9, 
  3.748870383542573*^9}},ExpressionUUID->"cf3c2f99-7796-4557-87aa-\
3378c88f70c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<y'[x]-y[x]=e^(2x)\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Differential equation solution\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74887232720837*^9, 3.7488723632336073`*^9}, {
  3.748872479160795*^9, 
  3.7488724802201977`*^9}},ExpressionUUID->"e9fdcec7-7771-4c7e-a816-\
b624c7af14bd"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "y'[x]-y[x]=e^(2x)", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Differential equation solution"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Differential equation solutions", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"DSolve[{-y[x] + y'[x] == E^(2 x)}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  SubscriptBox["c", "1"], " ", 
                  SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"2", " ", "x"}]]}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 StyleBox[
                  TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{"\"Solve the linear equation \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "-", 
                    RowBox[{"y", "(", "x", ")"}]}], HoldForm], "\[LongEqual]", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], \
-$CellContext`y[$CellContext`x]] == E^(2 $CellContext`x)]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"]}, "RowDefault"], "\":\""}, 
                   "RowWithSeparators"], 
                  GrayLevel[0.5], StripOnInput -> False], {
                 LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Let \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{"\[Mu]", "(", "x", ")"}], "\[LongEqual]", 
                    TagBox[
                    SuperscriptBox["\[ExponentialE]", 
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"-", "1"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm]], 
                    HoldForm], "\[LongEqual]", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`showDetailsWrapper[$CellContext`\[Mu][$\
CellContext`x] == CalculateScan`StepByStepMath`StepByStepDSolve`Private`MyExp[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Integrate[-1, $CellContext`x]]] == E^(-$CellContext`x), 
                    CalculateScan`StepByStepMath`StepByStepIntegrate, -1, \
$CellContext`x]]], FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\".\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Multiply \"", "\"both \"", "\"sides \"", "\"by \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Mu]", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`\[Mu][$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x"}]], " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "-", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x"}]], " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    SuperscriptBox["\[ExponentialE]", "x"]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x"}]]}], "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x"}]], ")"}]}], HoldForm]}], 
                    TraditionalForm]]], 
                    
                    ExpressionCell[-E^(-$CellContext`x) == 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x][E^(-$CellContext`x)]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x"}]], " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x"}]], ")"}]}], HoldForm], " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    "\[LongEqual]", 
                    SuperscriptBox["\[ExponentialE]", "x"]}]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Apply \"", "\"the \"", "\"reverse \"", "\"product \"", 
                    "\"rule \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"f", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "g"}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"g", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "f"}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}]}], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[$CellContext`f 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[$CellContext`g, $CellContext`x]], $CellContext`g 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[$CellContext`f, $CellContext`x]]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{"f", " ", "g"}], ")"}]}], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x]][$CellContext`f $CellContext`g]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\" \""}, "RowDefault"], "\"to \"", 
                    "\"the \"", "\"left\[Hyphen]hand \"", "\"side:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x"}]], " ", 
                    RowBox[{"y", "(", "x", ")"}]}], ")"}]}], HoldForm], 
                    "\[LongEqual]", 
                    SuperscriptBox["\[ExponentialE]", "x"]}]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Integrate \"", "\"both \"", "\"sides \"", "\"with \"", 
                    "\"respect \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["x", TraditionalForm]]], 
                    ExpressionCell[$CellContext`x]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x"}]], " ", 
                    RowBox[{"y", "(", "x", ")"}]}], ")"}]}], HoldForm], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Evaluate \"", "\"the \"", "\"integrals:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x"}]], " ", 
                    RowBox[{"y", "(", "x", ")"}]}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], "+", 
                    SubscriptBox["c", "1"]}], HoldForm], 
                    StyleBox[
                    "\", where \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    SubscriptBox["c", "1"], 
                    StyleBox[
                    "\" is an arbitrary constant.\"", FontColor -> 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Divide \"", "\"both \"", "\"sides \"", "\"by \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Mu]", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`\[Mu][$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", "x"}]], TraditionalForm]]], 
                    ExpressionCell[E^(-$CellContext`x)]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"]}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", "x"], "+", 
                    SubscriptBox["c", "1"]}], HoldForm], ")"}]}]}, 
                    "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "DifferentialEquationSolution__Approximate form"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "Solve as a linear equation", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Solve as a linear equation", "input" -> 
           "DifferentialEquationSolution__Solve as a linear equation"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Solve with Laplace transform", "input" -> 
           "DifferentialEquationSolution__Solve with Laplace transform"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Transform into an exact equation", "input" -> 
           "DifferentialEquationSolution__Transform into an exact equation"}, \
{}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "DifferentialEquationSolution__Hide steps"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.586", 
    "parsetiming" -> "0.435", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa5613e0156b4cichh8800006483898a6f58b43c", "host" -> 
    "http://www4d.wolframalpha.com", "server" -> "38", "related" -> 
    "http://www4d.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa5713e0156b4cichh8800001gcb602fh038ce5a2206861520850736438", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2018, 10, 18, 19, 28, 3.2304631`8.261839765648427}, "Line" -> 
    10, "SessionID" -> 20141679095590806270}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "y'[x]-y[x]=e^(2x)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1383., {650., 660.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.7488723552002373`*^9, 3.7488723708092546`*^9}, 
   3.7488724832504563`*^9},ExpressionUUID->"b67fbdef-88e1-47b8-a772-\
8826bfaafe6c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", "2"]}], 
    RowBox[{"(", 
     RowBox[{"x", "+", "1"}], ")"}]}], "+", 
   RowBox[{
    SubscriptBox["c", "1"], 
    SuperscriptBox["\[ExponentialE]", "x"]}]}]}]], "Input",
 CellChangeTimes->{{3.748872422079707*^9, 
  3.7488724528229756`*^9}},ExpressionUUID->"36e7be33-901f-40a0-b8de-\
eff2014e7787"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"P", "'"}], "[", "x", "]"}], "-", 
  RowBox[{"P", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.748872454994723*^9, 
  3.7488724603726234`*^9}},ExpressionUUID->"8ca39b08-e6f1-4709-985d-\
85cf2bf4dbde"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.7488724616109095`*^9},ExpressionUUID->"6643bf32-080c-4ffe-b300-\
660ccd4a3f32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<y''[x]-4y'[x]+4y[x]=e^(2x)x\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Differential equation solution\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748876246453238*^9, 
  3.748876261603507*^9}},ExpressionUUID->"d321bf68-4f9b-4f9d-979b-\
ba56805f0b24"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "y''[x]-4y'[x]+4y[x]=e^(2x)x", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Differential equation solution"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Differential equation solutions", "scanner" -> "ODE", 
     "id" -> "DifferentialEquationSolution", "position" -> "100", "error" -> 
     "false", "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "DSolve[{4 y[x] - 4 y'[x] + y''[x] == E^(2 x) x}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  SubscriptBox["c", "2"], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"2", " ", "x"}]], " ", "x"}], "+", 
                RowBox[{
                  SubscriptBox["c", "1"], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"2", " ", "x"}]]}], "+", 
                RowBox[{
                  FractionBox["1", "6"], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"2", " ", "x"}]], " ", 
                  SuperscriptBox["x", "3"]}]}]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 StyleBox[
                  TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    TemplateBox[{
                    TemplateBox[{"\"Solve \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "-", 
                    RowBox[{"4", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    "\[LongEqual]", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 
                    2}]], (-4) 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], 
                    4 $CellContext`y[$CellContext`x]] == 
                    E^(2 $CellContext`x) $CellContext`x]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"]}, "RowDefault"], "\":\""}, 
                   "RowWithSeparators"], 
                  GrayLevel[0.5], StripOnInput -> False], {
                 LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}, StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"will \"", 
                    "\"be \"", "\"the \"", "\"sum \"", "\"of \"", "\"the \"", 
                    "\"complementary \"", "\"solution \"", "\"and \"", 
                    "\"particular \"", "\"solution.\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    "\"Find the complementary solution by solving \"", 
                    FontColor -> GrayLevel[0.5], StripOnInput -> False], 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "-", 
                    RowBox[{"4", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 
                    2}]], (-4) 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], 
                    4 $CellContext`y[$CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["0", TraditionalForm]]], 
                    ExpressionCell[0]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], 
                    StyleBox[
                    "\":\"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False]}, "RowDefault"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Assume \"", "\"a \"", "\"solution \"", "\"will \"", 
                    "\"be \"", "\"proportional \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"for \"", "\"some \"", "\"constant \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\".\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"y", "(", "x", ")"}], TraditionalForm]]], 
                    ExpressionCell[
                    $CellContext`y[$CellContext`x]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    "\" \""}, "RowDefault"], "\"into \"", "\"the \"", 
                    "\"differential \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], "-", 
                    RowBox[{"4", " ", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm]}], 
                    "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}]}], HoldForm], "\" \""},
                     "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", {$CellContext`x, 2}][
                    E^($CellContext`\[Lambda] $CellContext`x)]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) $CellContext`\
\[Lambda]^2]], FontColor -> GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], ")"}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt["", $CellContext`x][
                    E^($CellContext`\[Lambda] $CellContext`x)]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Lambda]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) $CellContext`\
\[Lambda]]], FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "-", 
                    RowBox[{"4", " ", "\[Lambda]", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}]}], HoldForm], "\" \""},
                     "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Factor \"", "\"out \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda])]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], "-", 
                    RowBox[{"4", " ", "\[Lambda]"}], "+", "4"}], HoldForm], 
                    ")"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]]}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{"\"Since \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[Lambda]", " ", "x"}]], "\[NotEqual]", "0"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    E^($CellContext`x $CellContext`\[Lambda]) != 0]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\" \""}, "RowDefault"], "\"for \"", "\"any \"", 
                    "\"finite \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], "\",\"", "\" \""}, "RowDefault"], 
                    "\"the \"", "\"zeros \"", "\"must \"", "\"come \"", 
                    "\"from \"", "\"the \"", "\"polynomial:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[Lambda]", "2"], "-", 
                    RowBox[{"4", " ", "\[Lambda]"}], "+", "4"}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", "0"}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Factor:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{"\[Lambda]", "-", "2"}], HoldForm], ")"}], "2"], 
                    "\[LongEqual]", "0"}]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Solve \"", "\"for \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"\[Lambda]", "\[LongEqual]", "2"}], 
                    StyleBox[
                    "\" or \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    RowBox[{"\[Lambda]", "\[LongEqual]", "2"}]}, 
                    "RowDefault"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"multiplicity \"", "\"of \"", "\"the \"", 
                    "\"root \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\[Lambda]", TraditionalForm]]], 
                    ExpressionCell[$CellContext`\[Lambda]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], 
                    ExpressionCell[2]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["2", TraditionalForm]]], 
                    ExpressionCell[2]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], "\" \""}, "RowDefault"], 
                    "\"which \"", "\"gives \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "x", ")"}], "\[LongEqual]", 
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}]}], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 1][$CellContext`x] == 
                    E^(2 $CellContext`x) Subscript[$CellContext`c, 1]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\", \"", TraditionalForm]]], 
                    ExpressionCell[", "]], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "x", ")"}], "\[LongEqual]", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`y, 2][$CellContext`x] == 
                    E^(2 $CellContext`x) $CellContext`x 
                    Subscript[$CellContext`c, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"as \"", "\"solutions, \"", "\"where \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`c, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"are \"", "\"arbitrary \"", 
                    "\"constants.\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"is \"", 
                    "\"the \"", "\"sum \"", "\"of \"", "\"the \"", 
                    "\"above \"", "\"solutions:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "1"], "(", "x", ")"}], "+", 
                    RowBox[{
                    SubscriptBox["y", "2"], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Determine \"", "\"the \"", "\"particular \"", 
                    "\"solution \"", "\"to \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "-", 
                    RowBox[{"4", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    "\[LongEqual]", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 
                    2}]], (-4) 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], 
                    4 $CellContext`y[$CellContext`x]] == 
                    E^(2 $CellContext`x) $CellContext`x]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"by \"", "\"the \"", "\"method \"", 
                    "\"of \"", "\"undetermined \"", "\"coefficients:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"particular \"", "\"solution \"", "\"to \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "-", 
                    RowBox[{"4", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"y", "(", "x", ")"}]}]}], HoldForm], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], {$CellContext`x, 
                    2}]], (-4) 
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    $CellContext`y[$CellContext`x], $CellContext`x]], 
                    4 $CellContext`y[$CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}], TraditionalForm]]], 
                    ExpressionCell[E^(2 $CellContext`x) $CellContext`x]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False]}, 
                    "RowDefault"], "\" \""}, "RowDefault"], "\"is \"", 
                    "\"of \"", "\"the \"", "\"form:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], "\[LongEqual]", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox[
                    StyleBox["a", Italic, StripOnInput -> False], "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}], "+", 
                    RowBox[{
                    SubscriptBox[
                    StyleBox["a", Italic, StripOnInput -> False], "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}], HoldForm], 
                    ")"}]}], HoldForm]}], 
                    StyleBox[
                    "\", where \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}], HoldForm], 
                    StyleBox[
                    "\" was multiplied by \"", FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    SuperscriptBox["x", "2"], 
                    StyleBox[
                    "\" to account for \"", FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}], 
                    StyleBox[
                    "\" in the complementary solution.\"", FontColor -> 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Solve \"", "\"for \"", "\"the \"", "\"unknown \"", 
                    "\"constants \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Compute \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x], $CellContext`x]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[DifferentialD]", "\"\""}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "3"]}]}], HoldForm], ")"}]}], 
                    HoldForm]}, "RowDefault"]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"3", " ", 
                    SubscriptBox["a", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "2"]}]}], HoldForm]}, "RowDefault"]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{" \[LongEqual] "}}, 
                    "Rows" -> {{" \[LongEqual] "}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Compute \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`\
StepByStepMathCommonFunctions`mathWrapper[
                    Dt[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x], {$CellContext`x, 2}]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], "\"\""}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "3"]}]}], HoldForm], ")"}]}], 
                    HoldForm]}, "RowDefault"]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}], HoldForm], 
                    ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"12", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{"6", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}], HoldForm], 
                    ")"}]}]}], HoldForm]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{" \[LongEqual] "}}, 
                    "Rows" -> {{" \[LongEqual] "}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Substitute \"", "\"the \"", "\"particular \"", 
                    "\"solution \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False], "\" \""}, "RowDefault"], "\"into \"", "\"the \"", 
                    "\"differential \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[DifferentialD]", "2"], 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", 
                    SuperscriptBox["x", "2"]}], MultilineFunction -> None], 
                    HoldForm], "-", 
                    RowBox[{"4", " ", 
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm]}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}], HoldForm]}, 
                    "RowDefault"], HoldForm]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}], HoldForm], 
                    ")"}]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"12", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{"6", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}], HoldForm], 
                    ")"}]}], "-", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}], "+", 
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"3", " ", 
                    SubscriptBox["a", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "2"]}]}], HoldForm], ")"}]}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "2"]}], "+", 
                    RowBox[{
                    SubscriptBox["a", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "3"]}]}], HoldForm], ")"}]}]}], 
                    HoldForm], "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Simplify:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}], "+", 
                    RowBox[{"6", " ", 
                    SubscriptBox["a", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Equate \"", "\"the \"", "\"coefficients \"", "\"of \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], TraditionalForm]]], 
                    ExpressionCell[E^(2 $CellContext`x)]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], "\" \""}, 
                    "RowDefault"], "\"on \"", "\"both \"", "\"sides \"", 
                    "\"of \"", "\"the \"", "\"equation:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"2", " ", 
                    SubscriptBox["a", "1"]}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", "0"}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Equate \"", "\"the \"", "\"coefficients \"", "\"of \"", 
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}], TraditionalForm]]], 
                    ExpressionCell[E^(2 $CellContext`x) $CellContext`x]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    "\" \""}, "RowDefault"], "\"on \"", "\"both \"", 
                    "\"sides \"", "\"of \"", "\"the \"", "\"equation:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"6", " ", 
                    SubscriptBox["a", "2"]}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", "1"}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{"\"Solve \"", "\"the \"", "\"system:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    SubscriptBox["a", "1"], "\[LongEqual]", "0"}]}, {
                    RowBox[{
                    SubscriptBox["a", "2"], "\[LongEqual]", 
                    FractionBox["1", "6"]}]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 3, RowAlignments -> Baseline, 
                    ColumnAlignments -> Left], 
                    Function[BoxForm`e$, 
                    TableForm[BoxForm`e$, TableSpacing == {1, 3}]]]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "1"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 1]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\" and \"", FontColor -> GrayLevel[0.5], StripOnInput -> 
                    False], TraditionalForm]]], 
                    ExpressionCell[
                    Style[" and ", FontColor -> GrayLevel[0.5]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["a", "2"], TraditionalForm]]], 
                    ExpressionCell[
                    Subscript[$CellContext`a, 2]]], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"], "\" \""}, 
                    "RowDefault"], "\"into \"", 
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], 
                    TraditionalForm]]], 
                    ExpressionCell[
                    
                    Subscript[$CellContext`y, \
$CellContext`p][$CellContext`x]]], FontColor -> GrayLevel[0], StripOnInput -> 
                    False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox["\" \[LongEqual] \"", TraditionalForm]]], 
                    ExpressionCell[" \[LongEqual] "]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    InterpretationBox[
                    Cell[
                    BoxData[
                    FormBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "2"], " ", 
                    SubscriptBox["a", "1"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "3"], " ", 
                    SubscriptBox["a", "2"]}]}], HoldForm], TraditionalForm]]], 
                    ExpressionCell[
                    
                    CalculateScan`StepByStepMath`StepByStepDSolve`Private`\
MyPlus[E^(2 $CellContext`x) $CellContext`x^2 Subscript[$CellContext`a, 1], 
                    E^(2 $CellContext`x) $CellContext`x^3 
                    Subscript[$CellContext`a, 2]]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    "\":\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    RowBox[{
                    FractionBox["1", "6"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "3"]}]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"The \"", "\"general \"", "\"solution \"", "\"is:\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"y", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"\[LongEqual] \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    RowBox[{
                    SubscriptBox["y", "\"c\""], "(", "x", ")"}], "+", 
                    RowBox[{
                    SubscriptBox["y", "p"], "(", "x", ")"}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "6"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "1"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]]}], "+", 
                    RowBox[{
                    SubscriptBox["c", "2"], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", "x"}]], " ", "x"}]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "DifferentialEquationSolution__Approximate form"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "Solve with undetermined coefficients", 
         "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Solve with undetermined coefficients", "input" -> 
           "DifferentialEquationSolution__Solve with undetermined \
coefficients"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Solve with variation of parameters", "input" -> 
           "DifferentialEquationSolution__Solve with variation of \
parameters"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Solve with Laplace transform", "input" -> 
           "DifferentialEquationSolution__Solve with Laplace transform"}, \
{}]}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "DifferentialEquationSolution__Hide steps"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "3.311", 
    "parsetiming" -> "0.9520000000000001", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSPa1757112bf7b4b24e959g3000044337c11bg4e0gfi", "host" -> 
    "http://www4f.wolframalpha.com", "server" -> "27", "related" -> 
    "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa1757212bf7b4b24e959g3000042f74ae813h91cib809292914472481620", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2018, 10, 18, 20, 36, 56.0492491`9.50114463508148}, "Line" -> 
    13, "SessionID" -> 20141679095590806270}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "y''[x]-4y'[x]+4y[x]=e^(2x)x"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1383., {1991., 2001.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.748876292210867*^9, 3.7488763330403185`*^9, 
  3.7488766160962267`*^9},ExpressionUUID->"3abd7d69-8b20-4dbe-9d3a-\
6eaa365de608"]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 722, 23, 51, "Input", "ExpressionUUID" -> \
"60348c5e-2907-4b18-b0d8-691ea266086d"],
Cell[1305, 47, 812, 25, 51, "Output", "ExpressionUUID" -> \
"b5106ad4-e1fe-4207-bde4-d15eb25ed23c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2154, 77, 745, 15, 85, "Input", "ExpressionUUID" -> \
"acc9ffb7-05fd-4b34-bd11-0067c303206b"],
Cell[2902, 94, 37818, 800, 1973, "Output", "ExpressionUUID" -> \
"c8def604-28ec-442f-82f3-fa4cb569c7b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40757, 899, 544, 11, 85, "Input", "ExpressionUUID" -> \
"e866c7cc-4819-4b9a-8896-7c5b792c0f44"],
Cell[41304, 912, 37874, 802, 1973, "Output", "ExpressionUUID" -> \
"c81bfbb9-0c61-48b2-982f-f2630ed1386b"],
Cell[79181, 1716, 510, 10, 65, "Message", "ExpressionUUID" -> \
"756aa87b-199c-4875-af50-3adfca75ada2"]
}, Open  ]],
Cell[79706, 1729, 429, 12, 83, "Input", "ExpressionUUID" -> \
"88305f8f-a033-478e-b538-1d512d395b8d"],
Cell[CellGroupData[{
Cell[80160, 1745, 442, 13, 46, "Input", "ExpressionUUID" -> \
"34f1c8f6-3f4b-41b9-9866-daefc179e5e2"],
Cell[80605, 1760, 403, 11, 51, "Output", "ExpressionUUID" -> \
"b0a2b7b9-29d5-4d2c-ba58-e93e3eedb9c9"]
}, Open  ]],
Cell[81023, 1774, 608, 19, 51, "Input", "ExpressionUUID" -> \
"ee7b603b-b630-402e-a41a-2b53ee051a23"],
Cell[CellGroupData[{
Cell[81656, 1797, 464, 15, 76, "Input", "ExpressionUUID" -> \
"97efaffe-7b17-4430-be3a-2df495004888"],
Cell[82123, 1814, 429, 13, 51, "Output", "ExpressionUUID" -> \
"23843ca4-c8f6-4de8-aceb-2597c9df4aa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82589, 1832, 623, 18, 46, "Input", "ExpressionUUID" -> \
"fd776c03-b3c1-4ed8-9557-fb7173759171"],
Cell[83215, 1852, 816, 26, 66, "Output", "ExpressionUUID" -> \
"11a534b6-bc90-4d63-8d5c-18462c8df376"]
}, Open  ]],
Cell[84046, 1881, 418, 14, 80, "Input", "ExpressionUUID" -> \
"7a628ff6-52b0-48ce-9aa8-0a1dda99b2fc"],
Cell[CellGroupData[{
Cell[84489, 1899, 370, 11, 46, "Input", "ExpressionUUID" -> \
"7b4c004e-2fae-4f35-9f09-34bdff29e70a"],
Cell[84862, 1912, 270, 7, 66, "Output", "ExpressionUUID" -> \
"c0fb7d79-82e9-4be3-bbff-205522739d7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85169, 1924, 511, 11, 76, "Input", "ExpressionUUID" -> \
"ee0cf7a0-bb81-46f6-8852-f6ffac497830"],
Cell[85683, 1937, 80536, 1743, 4101, "Output", "ExpressionUUID" -> \
"d7b26b00-95da-4d88-916f-bcf325cedbbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166256, 3685, 836, 16, 85, "Input", "ExpressionUUID" -> \
"0bcbd7ff-184e-43e3-a54c-2ba9cec6b19e"],
Cell[167095, 3703, 25614, 538, 1391, "Output", "ExpressionUUID" -> \
"7bdf48b3-7dfb-4249-b221-df68abd9bb63"]
}, Open  ]],
Cell[192724, 4244, 152, 3, 46, "Input", "ExpressionUUID" -> \
"599a4659-8e10-4cab-8f6f-0b8422d6cff2"],
Cell[CellGroupData[{
Cell[192901, 4251, 689, 13, 76, "Input", "ExpressionUUID" -> \
"736fdca6-7cda-4e7d-a3d3-32a8187e3885"],
Cell[193593, 4266, 35781, 762, 1751, "Output", "ExpressionUUID" -> \
"e5bd4b7b-44b3-44dd-a070-25f536e83cf1"]
}, Open  ]],
Cell[229389, 5031, 2992, 60, 279, "Input", "ExpressionUUID" -> \
"df29deab-6b85-41cc-aa06-16ebf86cf42f"],
Cell[CellGroupData[{
Cell[232406, 5095, 497, 11, 76, "Input", "ExpressionUUID" -> \
"41e748d5-55a2-430a-8dc7-d47f04864f8d"],
Cell[232906, 5108, 22703, 476, 1207, "Output", "ExpressionUUID" -> \
"cf3c2f99-7796-4557-87aa-3378c88f70c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255646, 5589, 546, 12, 76, "Input", "ExpressionUUID" -> \
"e9fdcec7-7771-4c7e-a816-b624c7af14bd"],
Cell[256195, 5603, 29397, 618, 1335, "Output", "ExpressionUUID" -> \
"b67fbdef-88e1-47b8-a772-8826bfaafe6c"]
}, Open  ]],
Cell[285607, 6224, 444, 14, 46, "Input", "ExpressionUUID" -> \
"36e7be33-901f-40a0-b8de-eff2014e7787"],
Cell[CellGroupData[{
Cell[286076, 6242, 252, 7, 46, "Input", "ExpressionUUID" -> \
"8ca39b08-e6f1-4709-985d-85cf2bf4dbde"],
Cell[286331, 6251, 322, 10, 46, "Output", "ExpressionUUID" -> \
"6643bf32-080c-4ffe-b300-660ccd4a3f32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286690, 6266, 504, 11, 76, "Input", "ExpressionUUID" -> \
"d321bf68-4f9b-4f9d-979b-ba56805f0b24"],
Cell[287197, 6279, 83613, 1797, 4017, "Output", "ExpressionUUID" -> \
"3abd7d69-8b20-4dbe-9d3a-6eaa365de608"]
}, Open  ]]
}
]
*)

