(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    401642,       8046]
NotebookOptionsPosition[    386602,       7776]
NotebookOutlinePosition[    386975,       7792]
CellTagsIndexPosition[    386932,       7789]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.7624231142166452`*^9, 3.7624231430933013`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"110cf883-e1e7-4b8c-a898-e1529b883a71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], "+", 
  FractionBox["\[Pi]", "2"], "+", 
  RowBox[{"Log", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{{3.762423127799425*^9, 3.762423145387834*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"8598a4ed-e4c9-45db-aa80-00dce29ae078"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "9"], 
  RowBox[{
   RowBox[{"ArcTan", "[", "u", "]"}], 
   RowBox[{"\[DifferentialD]", "u"}]}]}]], "Input",
 CellChangeTimes->{{3.7624231688188877`*^9, 3.7624232054929485`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"68623e80-0ba6-41ad-9078-6499cd302cff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"9", " ", 
   RowBox[{"ArcTan", "[", "9", "]"}]}], "-", 
  FractionBox[
   RowBox[{"Log", "[", "82", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.762423183363539*^9, 3.762423207595936*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"691c1d45-e650-4b2b-82e6-61b1ce59a204"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"5", "x"}], "-", "12"}], ")"}], 
    RowBox[{"Cos", "[", 
     RowBox[{"3", "x"}], "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.762423232259738*^9, 3.7624232692159004`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"49d2759b-7d4a-460b-8136-e89a9926eedb"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "9"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"5", "+", 
       RowBox[{"6", " ", "x"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"3", " ", "x"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "38"}], "+", 
       RowBox[{"15", " ", "x"}], "+", 
       RowBox[{"9", " ", 
        SuperscriptBox["x", "2"]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", " ", "x"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.762423253888419*^9, 3.762423273847912*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"b9640fb3-41ad-46de-aa40-f0575971b265"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "2"], 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"]}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7624233150650687`*^9, 3.762423330802356*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"094d7602-82c5-4f42-a062-250e6d606223"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"Cot", "[", 
   RowBox[{"2", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7624233329994545`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"b13ae403-9492-44a1-86bb-332a9806c51a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "1", "2"], 
  RowBox[{
   FractionBox["1", 
    RowBox[{"x", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "5"]}], ")"}]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.762423443512396*^9, 3.7624234568553057`*^9}, {
  3.762423498176791*^9, 3.762423499153547*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"3784142c-4a9b-459a-a5e1-af977083db1c"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "5"], " ", 
  RowBox[{"Log", "[", 
   FractionBox["64", "33"], "]"}]}]], "Output",
 CellChangeTimes->{{3.7624234799648924`*^9, 3.762423499865526*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"9b490d10-d725-4080-a22c-963b58b7bfe0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "3"], 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["a", "2"], "+", 
     SuperscriptBox["u", "2"]}]], 
   RowBox[{"\[DifferentialD]", "u"}]}]}]], "Input",
 CellChangeTimes->{{3.762423622480521*^9, 3.762423706746239*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"59a8dea4-25c2-4a74-80af-44c13493ed8f"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"ArcTan", "[", 
     FractionBox["3", "a"], "]"}], "a"], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "a", "]"}], "\[NotEqual]", "0"}], "||", 
    RowBox[{
     RowBox[{"Im", "[", "a", "]"}], ">", "3"}], "||", 
    RowBox[{
     RowBox[{"Im", "[", "a", "]"}], "<", 
     RowBox[{"-", "3"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.7624236401288877`*^9, 3.762423707903055*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"ac28281f-52b0-47df-ad4c-8321f206d3db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "a", "b"], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"t", "-", "a"}], ")"}], "3"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"b", "-", "t"}], ")"}], "2"], 
   RowBox[{"\[DifferentialD]", "t"}]}]}]], "Input",
 CellChangeTimes->{{3.762423716406137*^9, 3.762423736611393*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"978a0483-b1d7-4aba-9365-2bca0477dfa9"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "60"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"a", "-", "b"}], ")"}], "6"]}]], "Output",
 CellChangeTimes->{3.762423737159281*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"32c4f00e-bf2e-4cd2-bc41-4a568d72cc8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "60"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "-", "b"}], ")"}], "6"]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[22]:=",ExpressionUUID->"41e5a45d-a697-428e-b5a8-a42e60b2d7ec"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJzVnXuYnVWR7uPu0MhNQ4NBIYQA4aIgRMGIQ47fpy0YRG5eABEyQCcEMIkY
LsNwMTFBZwbiERMucnEehkZEQUDhxBlt2JsExpYQZRAEiY7aaAYlaNiJgUOj
GU/v91ef9e7eZx6eZ/6Z/NNPv1lda1WttWrVqlVV3+6nf/JDs2pjxow5c6sx
Y7r+/HP3nx11z+bNuzX4OUb/zjjv7uuWz90l8FlX37nkiq7+4uvb7LBw7prx
gc8fwbvK3918/hmTj+gJfPWyH7xtSc+h5awROttY+z61r1X9Hrj8M9vtsUh4
s57p3FAyLvC5T/fvMm77b9K+yPRXQr8E//ax5x+98bAfMZ7A542b8vOzH3yS
8bfh4rcNl3zacP3eCW8gV+TJ7/yET+QMvkDtkXPGu0LO4E9I/sgZ/MIk/2Y9
+pX8ff6RP3IGPyfJv4Y8Qv7IGRz5I2dwl7PjyNlx5NwBbyA/1iftwBfYeuYn
/CNnb4+cwS9M678W+Ook/2Y9j6ev9Hm29V9kOjeEnMFZ/8g5018ZcgZH/sgZ
3OXsOHLugDeQE/wiZ3DWJ3+f8Wo98xO5IGfw+al9zfCukDP4Ko3H5zPrn2b0
n+VfKzOdG0LO4Gen9d9TZvorQ87gyB85g7ucO+AN5MH4Q48IZ78jZ/ALTT9n
OtV65meWV62tPXLOeFfp87Yqr//Cx4+co1/JHzlnOjeEnMGRP3LO9FeGnMGR
P3IGH30912I8eT3XQn/m9Vyz/d4T+HzTzxn39Vwz+bOeq/Y+P7b+g16WP+u5
FvLP67lm67+nzHRusPVcC/2T13Mt5J/Xc83l34A/9FuWc7POeLKcm/W8fnoC
X2X2Rm5f6eeMV+s5+rV/HdoXHeiXHcZTdhh/2YHfsoN8Auf8zXKGfsg/1pPN
V+Cr8/wGbushcFs/gdt6s/aVfs54tZ47yL3w9sjZ6SPn0cfTY+1j/wZu+z1w
5IOcXZ62ngvTP4Gfk/VV4Pl8j/VcmD40+n2+ngvTt/XcvtLPGW9bz65fSm9v
67nI8xvrOcZj67mw86t0fm09FyZ/9GRp52ngdv4Gnu8LoZ9LO98DN3vA6PeZ
nKHj9gbt2/Rz6evZ17XpZ2vfUzp908+l2WOBc36Zfi5N/pz7pdmHgZs9GbjZ
n4Gfne3VwPP5HvZG6ffBTL+vTU4d7I3S9XPGq/Xs+sPsjWhv9kaJfWX2Rok9
ZvZGjN/s5zY5O272c2n3qcDt/hV4tlfDfjb5h/1c+n0w02+zn8vR7Y2e0vVz
xn09V3ra7OeS+4LZzyX3C7OfY/3bfbBNzo7bfbA0/0Dg5k8I3PwPgZu/gvtg
6f6NOJdGvw+a/OM+WJq/JXCz/wO3+2/beWj3wWhv98GYX/NvtMnZcfNvtMnZ
cfNv2PoP/4bJP/wbJeev89fBv+H6P/Y3+tP8G+UTZm+A2/3X8Go9u91h/o1y
VpY/frM2OTtu/ro2OTtu/jprH/46k3/460L+zkcHf13p/o2ws+w+mOlX9nOm
U9kbuX2ln0Mf23p2++61jV9uu3TymxoP7rtg7zXLdw1/xQdPeN+G6Ut3NLyr
5Hf+zts7Pmmkv9cbXtHh78Bpl/GKjuMtOXQHPt/o8HfQp13GKzrgyK01L8N1
8PlGh78Dpx240wG/MJ0LQ/VOdPi7bP90B+50cvvAi050+Lt8fg3XM17RcVzt
i/+CjtnPQ4a30SmyHdJddqLD3xleZLyiA35hXldlJzr8nfEVuNOJfvK+KDvR
4e9sXsoYl9EBZ91qnRte0eHvbF0F7nQc1z41vKLD39n+Mryi4zjt+X/TA4YH
ndBLpn8DP2qkfS98xfvLihH9uSb0VX6X2SP6g477LTvgod+gD04/0IcOfDsO
39Axfkvv13Ho5vNlj6ALbvSDb+TJ77RHnoyH/g1vew+y9j7+6Bc6zUVr58xd
M7HBT8aj30tw6Fj70vD4aXZnrJM1th6wL9aY/Pk7cOwK5h086/+qPXTpB5y/
hx449gntVwvPersn1hv90b/zBb3Vafy1aL8i9Tscfu9Vxi/9rzB+obcitW/G
uZb7HQp/7yrjl/5XjcovfsI14b/x9vmcahpei/NulfELvdy+WXRoX3RoH+fa
qlH5bRpeK719Pu/wC7Xx6/SDnsmz9PbobdrbfEX/q43f7H+I9RDnjOnVsGdt
vcW5sWJUfnsMHx/tbb9Ee9svof9WG7/Qs/0Y7W2/t7WnP/q3/RV2t9PJ96De
4Iv/p/3F37z9XWuWvyH0ldvz+RzsLd658xEfnnzEztHe39mz3d5b/GTWRf+6
efNOoVdX5H4Dp1/+Pr+/V/pZ/Yd9C04/0AenH+gzbrWPeed3/t/PU+i1xvPM
u+mP/2/5f15APtF+VrZzAt90wP87H1cEff4OnHb8neEl8+Z8MT8mn1g/0IFf
zkPGTzv+jvZX/2CnX0xfOiFwzk3hwZedp23nMu06ncv8HXK29g3H6Z9+aQf+
tZF5vDjmhf83+bed77RjnpEP7ZGf4W32APPB3/k8Ilcbf+CM3+QZ8mF98NPv
176PODezHVK9q4JvI/tt1z/+9I7lc3cIeS7I+sHu19V6QG5+Tw+7VP/yfXZ8
I+ur7qDv8U7gYzXOFSPj3s76rfRJtk8ODRy+4Zdx5Pt+pceQh/sH+Alf2T7p
CTqc+9m+qt713G5v/T42+nU/Q7ZzDg0cOSEfxpH9D70FdJGf+yX4me3Y7qA/
S3SwN7JdV72Xgb98wF/KeVOdfueYfwM5wRc4ckI+2T/cHeOBLvJzf4jbX9lv
wDt78FW4nF0eY5KcH6vTr/tVkBPyyXizjnzyew3+k94CusjP/CThP2F8ZgcG
nWxfDddHf98Zrmc5P1fkftv8OUX2E1brJssn7NUYD3SRXwf/j72fDtn7da/7
beq2vwJnPC35by5yv5UfKduxh5p/iXfVPUofV14/j9WRn/ud3K7P/qhm0Mn2
81CxIuvDwPO9e6uYt/xOEX6/Mssn7kelzZf5tVg/zxXIz/1d/LR9EvOwIK3n
HeO+YHE+gTOe+vTXTVo6efsy91v5zbKdH3yFnZ75qsU48/m4uUB+pufjXmB6
voqryv6f0uWc34O6YzzYc/Tr/rp8v4h1GPcD04fmx+sNfpCf+/fCL5TPZXsH
rPwt+X5UvYODc55i/9Cv+wmRk+mN6r0sn1/mD+wtoIv83K/IT7OL7N2tsrug
03p/2SHsUdpj78Fnvk+FPg95mF1hfsjeuH8hJ38HBHe7EfrYh5zj4b8ye8bt
NO5F2MVuz2DfbZP3nbWPe0fYJ+b3a7Pr+Hv69zhVt7vo19tn+2S89btV270P
fuDP1meDfvy9xu036Ob2VZxnfseJfRft3Q6Bvp1Hddpb/EnD7Q3GQz+jv+NU
dhp0aT8ryb8W9E0f1mmf52so/HVmJ0T70eNjK7uC8dDP6HZFLcYDXdrn8TTr
bi8xnkzf7Yqa22+FjyfHe1T2Q8hR/VyY2g+32V3Qpf3ocaeVXcR4vL3ZCfW8
3zdZe4/PrOwExkM//s7l9hV0c3uPc6vsH8bj7d0+sPtOOfp4Yn4LX2/04/aA
21HQze2rODG3cxiPt8/2WLPAbte9I9pzr3E7yNcb/fi5z7hcnrl9FWeV3wHj
HhRy9XPf7T3p8dLHA5/wbfe46GdO3r9tdhF0aZ/1T4+9J8b9NNr7+Q597rnh
10vtq/g0f/9iPPTj75Vu/0CX9h7n4/YJ4/H22A3Q5zzC75PbV/49cLf3kIf5
Q0Ie/k7q9g90c/sqfsbtFsbp7eEH/syPFPwxHvB4L7N3Q/dj01+mU/mXsEfM
fgu7wu065AG+9ZSdr1w+d7dy0tw3TFmzvPKX0o6/oz3jwF7DHsMPhl8QHD9S
9qf1B57tq8o/4/408GwXVX4P6Ni6Mv9VV+Ccw9vk9dPm7wLP9k/ll2A8Y/J+
NP9SV+Ccn+7von3WV2Mb2Q6p/AaMB73EuN0PA865Z+em+W36g36c23av9/Ez
bv4OfRj86LzKfp7HOL/MPnnM7IS2e3fQYdzuxzDcz03ze/QXhpv/YXPh42fc
2b/RFTjng/tb3B8CHvaL3Vt9/Ix7dD9A+N9K94fQPp8jW8U54PdKxgO/jJu/
y/bec3E+0B464Y9Rv+D5nKrugz5+xs3f5XNqc+HnAnTyvbs/6OfzpXrXYzzb
mNz8vQkcfUy/0PH7OHg+Lyo55/tvV4wb/er3taw/q3tlfte4OO6z6OFWnOpx
ce/gfHC/JXRyPlp33Iuhw/6nf/PP1LkH57hW4vHGBx32M/rT/XI5zrAvcO5V
Z4sO+xP+VpkfLMcT9rl/LOiw3+DP/U45brDP7dWgw/6Bv1Xm58n3tZBz2Ptz
RSfsV/G3yvwt+d7U1+anYzysb/hbkd8XLN6vz/BmwXjYP/C3Kr+/WLxfX+DY
ocw7+wH+kHOOB+iOuGhw7L5zRYd9An/4ox6/e99pk+8d2/YOy99/bPgfLpva
PyHwDyzq++Typ7Zry/vGrvvy0nVnPz/ujYH/8s3HHHfLp3cI/4Tnm+v/A9ff
hz/A86PVf+AaX6d8Uvjz9m35NfCPPDyuG75tnB3zRODb5NAxrwG+Tc4d4/Dh
Gxw+O7ybt9WX6BTP1imOsVOdhE7vy5bHEXind17kEP6u7D9vez/NcVlVHmSn
d8ns36gZnfb3vvwO1ezwXjbUlq/q//7/71PteX+d3n3y+1StNH7b3lNynFWV
V9XpnYJ1HO8F+tfJ/98pb6WTX71TnkWnOM9OeQGd4if/p+ux/0JfdcyXd33V
Sb/9T9djl+7+q4HNmyv9M2/kvNsz7sVRd+WYX37numOWFe/4+rhHN2/eIfBf
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
t2ft3RY+n9M9yOfd76mM/99TnMmial5a8o/xMP7W/n1N1GVi/MRlML+Mv9Fa
DwXrgfGfnuJaF4V9Nba13tr4Wqd7je/r+9N4+uPe5Pdv+Dq8tf6jX/hqxTNs
HXWo4GvLlJ+yMvhivbDf4es2vVuhH+Drb1v6JOpQsR8+kOJOK35n6v7ievsd
Guf5kgPjcL8CfD3Z0qttdiDxJvALX19t6e3gF77Y9+h5+FrfOheCX/h6QO/y
bl8tbZ07bfw+r3uKn78/1vi/LznEedc6B9v4Ig7H7du+1jkb/MLXkaluz8rg
i33P/MLXBMVBwC98yd4o3Y76WsrrqeyopRq/n78XafyrjV/ZaW38Ekfk/O6m
eE6357fUOyZyiHls2WkhB/hFT8yz9x3ZmaXbybN0H3E7+WiN3+2oqRr/BXb+
Mv4fmhyIV3U5eB46cni6ZT+3yWGl1fNBDre37POQD3K4SvEmyAc5aFxWD3Bw
YJLuI3PtvrOVxu/2c44Hruwuxu/nvvDGR3Tft3Wid4rFha0Hvfs8E++G2OHY
ybZOZHd1+b5rnCM6tu9EZ1nQx+7lPmL7TvT7C+SPPYyet/3YOHLEv/pKYXpM
76QbCtNjese5Mehjl86yfqXHGtupvemxxr8Y/af0dzM0Hvi6I+VlV/zqXGgs
vLaFm/5vnCW5sa52kb16os3XWSl+rJqv04QPmtwelD12ifG7hey6y0Xfztl4
B2E802U3nqB1BR3sovOt34/LjnppxJ+5e+yjX8h+e1LyNPuk/gHJk31xmuyr
jYovhc4c2UtLRvx+b3V7b1rr55JpjF8/i5lG/yXZP/dpPOy781vjLw7T/jK7
uhijeQx9KDvk8yN+toMrvSd743LJzezq4njJn/O1L+XjdIW9PVv4vNHvNeUS
0bF7TblY6wo6X0v5Mv2F3WvK04Rz/l0ku4XxgGuey6NNnro/lj8yeer+KH/s
jUEf+2GB9at9Wk5Ve7s/lg8Z/Xdwn9Z44Mvr7Dm+8JoWbvfucp7kZvfu8lib
L6/L5/htJjfOWeeX/Iulom/+DdVLWRzt79A5tcDo/1TnxRx75yWuYKLem6C/
jfxd7mfQz7b7OOddh7iI8gCj7+9U6G38Xf7+Ttwd8QzotxxX3OV+6cajql/E
OInHI04GvQT+13rHNL994wL5yfO95vWNl/V+h/4B/3fDeac+w/gifm+e+s3j
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
3z/Y/Te+5yY6yDe+byb8PwENsuD/
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxFnAn4TsX7xt+zn7cdiVZEpVKRJC2iRZKIFoTIXkpKm1JRtGjRppIWKhLt
+6poTxFtlEqiPS1Kq/zvj3t+1/+6vnM9z5kzZ868c2ae9Z5vg36ndR0WVyqV
J7NKJRGdklYqfaNKZZLoPSqXib9L9L28Uqmp+xsVlcp5qqutsrnKtXp4Quxn
bi5VpzYfqa8aKj+Kb65nZ6rjncTXFh2mfrZR24Xq51u12Vr8RPFXqXwufnv1
0VDlUfW5h+hpev4rPbuz6N9q30L8Jqp/TG0fVemv6wNF14j2U7lf7a7R9SzR
s1RWqW4v0QPUf33xbUS7qZ+aajNI9e9rPG/pXTeofpjqBqpspfKP6quiu6u+
p8oM8d+Kfq3639TPveI7qTyiPlpW9ZtVv4f4JuI3Uv/fqs1uum6rNk3Ftxdd
pOuH1c9boj+o/Rmqr6f678W/rzE8Jr5t5vf2UJurVTYQf7zoh/Sv9jXUppF+
/+Nq31R0qa5/D3N4v0pN1f8s+oTmuqXaNxD9Ss+uFr+l6n9T/7uLP0T8v3ru
e/GtVVqI/4G5VHlcz+wtWl/0SZV9xG8v+rjGMVHtHhJtpH5+p734N1TuVf1L
oqNSz88BolvpvceKr6NxztT9+1SO1vW5uvezaEvRLdXPL+L3EV9oTLXU5mPR
DfTsoaqvqWff0ru70V70TZXjxO8tOk+lO8+K7sV30rP7i+6p0l38PqxV9fur
2rQS3SL2OE/UdW/1v4+u/1WbI1TeEX8k86f6jrp/qN57Yuz5OVPPXsd30rOZ
6m8R7at7jXQvL7yWmosepnJd5Ln9O7T5Tm1m6/k7dP20aBfRkjlUfar7P4l2
gtczm6q+mehFaven6g4S3Unz84f4tuJ31NhOEH+RxvChfvNg8QeLfqQyhG8q
ukClt/j9RT9QGUQ/orVyv6cH+yDzethPfUa63ljvbSr6vK6niH9OtJbW8Rai
A/SuDVnT4nuLn62+2unZXUVfVDlMfBPROPc66qp+1onfSP28I/4l3WvPXhCd
r9KL94q+onKk+Kaimdptpvbvi05gj4lP9K61qWXCv6Kf5pYnW+h+qetnmAc9
20f1y9RmneovU30svrPoL6qfoDY7qP5n8Ueo7mj9jqG6vlb1p4terLY7qXyh
7/Cr2iwWfbHwN31Xba7IvSYXih8v/nv18Y7afye6Wtd3qH6O7hfiSz27Qvx3
GtMVqu/F/Ofem+zR5bo+T/VdRL9XGc8aFD1CY9pb/Y3Q7/1d17eq/iTRP/SN
KupzuZ5Nc6+VL9m/ujdJt4aI1lObu9X/C+xBPf+F6p7Kvd+PQt6KnqTnNlNZ
qDJG7f5izaRuy5o5VHTr0uukqdoPU5911baJ6He598ouudcYe62VaGeNeQfd
n6nxLNZ1D9XvK/qt2vVFViPPkNesSdGx6n+g+N1Vv0LtTkEeil5cWj4gJ97W
9eHi9xD9hrWk5/bQe74Q35Z9JnpO6v3SQvRLXR8svhSdVFombC1+eGbd8I7a
DM0sd15OLbe7sH5EG6vf7owv95gY263q4xKVC9g7qsv17Fd6NhI9Bn0mfoCe
GajfPEJtBonur3naUPWzdX1U5v17otpcgk5R3Snqr56ul4ifqN/VUPxS8ZPE
by/+E/G3iN9Y/Avix4pfpzJT/FlhPtn7W+tde+ldhfp/UNdr0Fvifxatqjyr
utGJ5wRZWlfth+RueynrXOVXtTtMv/s/tbsPmcZ3C2t4ZOF5RiZPRb+w35gT
tflN9XfyTdkXej7Rve76Xefm/t1Xq76/ymjWregq1X+osT4n/kyVKaq/gLnS
/GTIfz2/m/h/WHvil6m8ovrP+LZ69mLVN1T7H8Ufprpmeudtet9YdAr7CZ2i
+j1V3wf9q2dXFV6ryMxHxB+eWaadoHYn6PoBdBv7PrVc6i26jt8o/m/Ruuxr
PTtBv/d68Zuovo9oHZW3VX+N6jdP/U2vRJaKfxOZIP7G1LKrv2iN3DKtXdAd
6NKd1OZovftWtTlG9FXRkbp3JntD9CCVx7FdVH8Ue1z8d6XlY1vRY9Rvrnvj
RV8N6+B4vaeDfuOjjE31Hfguur5C7TupbYvY3+zb0jK6jeifqquhuh3Vvo/a
j0KvqL9Y966KLW9P5/uIH45tpNIltn12BLpR5TM9v1bvvjy2vL0CmSv+P9Hj
M8tM9stFrLmgW0/I/OygMH7GtkZ9zNH1u7H1/uka41Q92w17s7R8/Uj0U91v
w3tVumocB8TWm3vknr/HRHuFb8q3nVC6/SnIk7A/Two8z/4n/s3Ceh/9f6Dm
4VO9+xHWmsb5cMV7arT6OZVvp/oD1ObV1Dp3d2zS2PpjgJ67Dnmue0dGrk+R
Ner/Y/Gvq7+uqdc8a78Z9prK9Xrmk9hjWKryhtq3FP1T79o7Ns+euUR0T5Ub
kdfI+Yr38KrwjbaNLO+Qe4eho1UmqX6j0vtpuvizdO+Yqufo/NK66z7Vj1P9
XaJ3qwyoeI6Yq7XYAGpzD/sXO7g0v2VpGf4eMrP0/LYJ3727+j9W4/uo8D6d
wjrg24V9zf7+prAewn6+M/O4Omn+Pkf2qn6l6o9VGRB06LZ6fob4OehcXZ8S
e/9ib9+sPu8INlufoB+TwnvpU9HTdL9rbB/je71rR+SG+puscpuuXy3dnj2+
AD2vcrDax6JHojvUvqNo39TyHLn+nu61U5tFopdrTAvUZon4keJfrLg+Vb/X
xLYPB6a2CfEz8tL+USHaVdcvVSxzvgv7ij3VL8gQZMlGuW2qg5GxmWXF4cxh
sL0OxPbT+9qr/oPCY2XM2Eh8h7nibxDfX9/lMbXfX+0/pw+VZcyLrqchc3LP
6+Yq97NGq9aX3xXe3/uq3KO+ntW9EbxLZURm/gzkN3OaWW/+yzv0ro7IGZVP
sGtE16gsQa+L/lbaHmWtDs6sx9Hnf+j6Y9V3wP4Jdm170dWF1+ZuGud/pe2n
TqK/qJyk57/W/bXil2FHiq4rbXsdJfpzaTsYOfxTabsTe35VaZ/hENEfSvsS
B4k+qd94un7XE6I/Bn+D+a9ftc4eJn5b8fVT63TWLX7lneg+jeV4PXuf7jVU
mz3R8brfEp0Q22a9CV3EfkbnBR8BX2F7tb9R/OHiG1Std09T/3eGZw9CBqn+
R9VfXnqPLFD9caL1qrYhTkXXaAwr1XaYrluovpvaXKUxPJLYZ9xGdIDa9FL9
59jY6r9nbF99kOp7ix8o+mfk37K96r8oPOZlopeqvrv4N2P3vVz3T8XGDvXE
BVaHPvHVj9IYdlF/V2ts28Se29NUv3nVOnVgaX96CHJd9V/pHZ25rzHvF+qx
Y1bm9t3uLixDaFtHdT+xz9V/a/XXVeWzxLqgrZ4dHttm6q36M9XmBr3rANUP
je3zIAfODDpk49y+CeuhN/o59r7tq2fH6NmbVH9IkL3I4D4qy8Tfnlou9RHf
OLd9Qf9c/6j6U9Wui/pYmDgm0Vq0b7benK/cqWd76V6/YM/XrNqe6K939az6
e1wvvpHun61ykZ7ZqGob8QTVV6r2H7qIj6v2B44WH4lfLb6r+Bria6p9P/Fb
i99O/Ml8i6rt0aHia1dt9wwSv4X4y/TeiP1VeA4fwudQ/Vr8bdVnwXbsJr6H
+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
DawnuGj+twRnUVm/o9TH/wHdfqeG
           "]], Polygon3DBox[CompressedData["
1:eJw1nAf8j9X7xp/n83nWtzSM0LZaKju0yCoSZSShfhKlknY0lRGpaNGgpWWU
9i5pWyEtLRUtooUSxf96d53/69Xpe67nnGd8nuec+9z3dV9H7QHndR9aiqKo
axJF+i/6MouidfpbOY2iuhVRdFMRRf2FDxA+Qbih/u6pE7bo2MGqf6Giw9ED
5Sh6WH0n51H0ZxxFtXTsSNV3Vvs/wq2EX1GfHYT/Fq4jfL5uuIfOeUTXu0fH
31G9m8rlauuuvlx4bx2vpPZTBZfq2CRdc6PObyC8Wm1n6tidqv+mPh8IN9Pz
Dxb+Vsfn6Vovq/9eamuktreF99XfysIb1aee6s1V6gmPED4k4H2Etwk3U32O
zt9X+Brh01WvrmOJcFfhd3SP7rrmONX7qR7reW8T3k3tRwmfItxE/fcW/kd9
Rur39ir8vIPVnqh9hZ73F+FL1FZPuIZwd+F9dN7xwnvpnm31e69R+1s69zDh
04V3Vp9DVU/Ub43wCuEpuuZJ6nOX6mepnur8HsLXC58iXBI+VP0P1POM0rGW
qj+qa+wo3E34R917Ox3boOtV5fWr/oDaM7W34Z1m/v57CJ8n3ED1W9X+q/ov
Ez5c9VT3+1l4iXCi+qs6Vkf9LxIepHpNnZPzfoRrqL5S1/xd9V1573q+N9Tn
XuG/9bzthXfS8S26Xl0d21H1u9W+VbiRcBvurWP1VX9R/Z/T/fbS9U4WXi78
mvBOwscKvy/8qvAqnTNA92/N86ntO+GBwm2Fc+EdVTqpvkj9X1H/I/mOwg/G
Hn8r1f9/6t9Ex/7SvVcLT4/9zX5S/Ql9p0mx3xm/73sdG6R6M36T8L66xpGq
3xJ7PmzVsUOF31D9Rd3vFuE71f8OtT+ta83Q8/RR+2Hh+efq2KNqq17ynLxR
7VW4tvAhel8X6NiFqv+tY9eq7z+6/0jhaYwB9b1O7dcLvy58na7ZMvH75ze8
ofqhKn8IHyF8hepP6ZwLhTurb2td/yqdf6XOv5XvqWOHq8961R9X//dUP1Jl
g3Ar4atU/1v3L6t+ver76vzBOv8MnX+8+jTR+QOETy7ZHlQRbprY/tync15S
/RWV+1XfTn32UN+Hw/dpEN7XNh07TPhN4ZeE71b7/sLVhR8XvlV4V+Es2Kdb
hGvy7YUfEm6sv12E7449n29We3XhrbwztX/GeBW+V20PCk/LfL96YbyNYw6U
bDu36G9Zx27U369VJurEFmr4je+n61+m+hSdfwBjX+fPVt9vU99vuvBjwt8I
7yJ8k/4OwJ6o/26MTbU/ovZmie1FS13vUtVvVL9Julc1HbtB9elh/B8axu8j
Yfw3DO/nidT4RZ2zVPVYx8arvlXXqq77zVL/c9R+tPrPUdtjwkOEjxF+vfD8
nlCyzblFv2+m2s9Se4cw317Ude6NbVPq6PqPq/1ctXdU+1y15yoT1baSMaLz
t6mME35I+H/qO0dlpOq91b+tnmer2seq/WkdG6K2r4S7C++oe5RVb53Ylj8l
vFD1L3XP7YSnhff1pfp0U/8fdexjnX+n8ObYtmSW2j8X7srawTtWvdCx20t+
lw8Uvg7Xe0rHXtSxndWnUey1a6baHy/7+zyj9pfUfrva18e2nferfbn+6rbR
PWWPJ+wU9uo59X9ZbZ/ltpWTdL1m+r3H61gHtS3GJupYDZ1zourNdd56xrfK
IOG2wltUPyn3/HhVfQ/T+dN0/kydP5o1WfV7sfHCF0deY79P/bw89xM6/02d
30DtN+vYOar3YnwIV9Y1e6r+Xer581gYr1fqx7wpfKKO99b9PtA57dX/WR0b
qraPhI8RfkM4VX1V6vk2K8zHBzLbu7rCzzIfVZYK98EO6Hr9WPd0flXd/w79
prW6xhDhx4RPVf1UtfcUriV8Mr4Fa5bqN6nvATp/iI6dG9b3q5krOgcH50OV
/6n+o8qZqr+G3dO9/xUeI/wEa6auNUrnjw74Cj3j0cJHCM9h/WEuq/95wn/y
TlRfo3K28Nn0q/B6cBbjSaWv6sepTNbzPalzn9H9NuseFcJt1H9/9W+L/Q/2
+Qb1eVf9mwvfL3yx6p+rXadF9wd7VYc5rPaHdexGDJPKDrpeJ9ZBXe8ofCC1
z8bGsVYwB4U/UZ/12GfhxsF+jxPuKNxa+EnmuOo36Hpfq++/auuE/6G/y9X2
tvq8gC0UflF4vfBzwlWE5wlvFH5e+H2d30r1p3Rsm37rgTpWQ3iT8Aj1bS3c
VPg25r/qs4P9fl7HlqjeT79vBv4Q8073P5U5Jny5cCXhvsLTeTfCFcIXlY3/
0PnLdP7kwr+f99Bf7a/qGa5mvKrf+4XXw5Zq/wKfT/W39UyzYq95b/E+WCO5
nvovV/+zC/++8cK7V9hefRN7zP2b2T4dpWt9pXK96ueo/3y+pfrvof4HCP9S
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
S3yJNpN/02BVsA/s3SOGvVH3+j9iVZK2
           "]], Polygon3DBox[CompressedData["
1:eJwt13ucz1Uex/EfY+Y3uWTXpW0p41at25LbrkvKjCG0rokN23bBxrjf0k0a
GSomLCFSwkNM20NbZrX7SKstbays1l1bCbUJrQrZZJ+fx3f+eD++5/067885
5/ed8z3f79S7a2y/MeVTqdRayqTSrFTqk4xUKp/u5dvyX6RTqVE636qQSp3B
jmG7sS3a87G++j7gt+Kfq+tNU/XdyG+hQu1fY0dkx8i9hf2H70P36buJ75Nt
Hn4IzcZysf7YN/zvaAnWA0tTrnYtc9amJ2QW0iTtLsa/oG+TOaph+dpN1C7V
V50/hW8sl0p1wkZjJ/kdxjvH/5bmyvfmX6OP+O/VtNRuRbVlz8VazfEztU/q
+zN+TK47jdHXkX+djvI3xxxYB34zfcp3owKsPZ+jvsSNX2Os1VSHH4kPsL5i
cwym+7H12H517el2tTl8X/wEP5TmYJ2x6tbXUu3VWAu1B7B92ABjL+QH6dvP
/0jtCvM2ltuKD8Vqyd5jnA+wHdijMuPwd9Uc43vSVzKb6GOZi/pba7ehKXI7
5U7IfEFF+tbhO+SaUw/jVuU/k7vXWlrG/sCO8y/hh/jzaq7Vvi4ruYdxL983
1i4q1Fc3nfxd9/B76THsPbkzagdTkb7u/GFqqb+aeVpb0xXqGtFK/RfkpuOL
1BbIvRL7ie9JxVj7WLdMOSpPR/k5lKG/An0oX6TuH3Re/500D+sTXn8r7Rqu
NelxdbPppLWcol7W0tg6fiP7glwXmXyaJ7MR+9BY4/k8uRy5uXhjvgl1xhrJ
3EGr1W7ASmiFzDvYKbUD6GF9XfkC9Re1J8tMod/LvY2flLmVHtKXz6+hv/IN
Y29hl+J5woZp/wtbxi9VewM2GVvJP0fLsQvYIL8rl+9jfT8351psq7o/YKX2
VxO5dvQsdikOGNdP+VbxbKoZFntS9insn2rL8QUyK0QH8XfKlcrtxt+jGXJ/
w7+U6U8Pxn3kt9NZ/g56EusVe0j2j3xO/A5zV+a/iz2hf7Hr07QE2yWbMvYo
ueWaA/n5+GD9Q0Lmn4NVyU7GifFej3Vb277M5LycE3/vGFOmHBVpz8pIzsYU
/1X8XrWtsbH6TvPrqI/u+nwDepHfRm3lxssNNMd35l0YfwNsQZxfeA1qkk72
0zjt2+TOye3B3jReP7n+tJffgB+QORvPj3Y9+ha/JPeYumlyZ/l++r+WG0Gn
zdWI70rv8x3jPJb/sdp8bCffIZ45rBo2FKtkrPuwaVTpMvvemAetb6bxv4nz
gO8it13/L+O3qa2ithu2h8/NSPZc7L3dVFHNVKwEG87nxbPO/yJ+L1YZuxnb
y+fRcOwqbCLWNtZC7cy/Kp080y+W3be4fyX85dRGTd14p1hjVf4eqhnnHlYY
Wb+jIO4btpg/IF9ojgZUn7pnJ/f2Ddc88xSbr0R2Az1ctu9Xlp0jcZ68wGdm
JeuaKtOGJmAvq63hnl8Xzzk2CatIT2PFcT7QZfxoubfVfizzb5qFvRrPsFxt
7Rba19M11JB6Zifn6puuN9IbGcl7MN6H/zPmDVGfkdyDuBcnsPXmuMb1AeN3
NNeGeE9TC3N0jH0Ve0bdZuwqrFmcYfG3wm6iLcZqSl2N972+q9PJ2TU9zgma
LLOYZuh7JDM5k2+31mfkfpCro/Z6uUNYJ7nX+HrUVu7LzOQZjmdwUZxpVInv
EO9HmZp0rdyRzGSfx37voe9gPIeuvel47J9Yn7lGxrucHoxnNd5v2Hk+V+7v
MWecqcarFO+kdNJfJNc79lfslXTyfpnIN6d9cp3jfIp3L90Sxx32rFx5a65u
no3xHkgnz0zlCsk+i/32CT+IymOj4zuCsuy/u7Bq2KZ4jowxwXgT1KfMexz/
jCby8/Hn1GSQstShOFOxFfGeVhclB7CxxmuoZhl+GJsV71msAbYUOxTnQuzv
dHKPCvFudBIbJZejvUhuv9yj2AJ6ns+kitjhOMfi/ci/rL3Z3E3VNc1K3msz
1OfRlNiT5piNreZX0UPYmnTyXTCNr6d+LV+SlfwNz2Un+zr29wLt4fqHUXP5
r11HY/XVLZE9iM0s+2aLb7dfZSffLNtce9ER7b5xXsm1K3tu4vm5JTv55nsn
nj9zn7e+ysZuZtzx2NGs5Nv3fr5OfLPF+xyvws9U9xd9I2RGYnWw0jhf3YMZ
WK108ky1kuuk73OsWTp5dz7BD6BvsapYc2ws34jGGatenBPGWR/3l+rG967s
KmP9iX9FX4M4I+O8087DzsRZlk72VUaF5GyOM/ojfhj9BJvHb7fmKca6G6uO
PY69i03EhmDZ2PSYB7sbG4j9wE+iddit2G3YRX4i/Te+K8vO0yvUzo13Mh3h
H6Ah2FMVkm/cnfFs0OXaC+LZsO5d/PPGLFVzJTU2x2l8W1byrRXfXPtlR8gt
x17iN+t/1bwNY1/QlfqL4ztWfqrMMtoQzxT9FDsq/wxWwqepVvw/g/0f+j2X
Dw==
           "]], 
          Polygon3DBox[{{1575, 1574, 2175, 1221, 1222, 2176}, {1715, 990, 
           1235, 2180, 1582, 1583}, {1583, 1582, 2202, 1435, 1436, 2203}, {
           2132, 1017, 878, 877, 1252, 1903}}]},
         Annotation[#, "Charting`Private`Tag$40908#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlL9zTFEUx8963tv3bLIblexufoxiMxOh8LPhP0jHmCENSWOjEBTRyI8O
JUIqFAmhwCYzkpFhGD8bNEmo0JiI0YRGo8jnzPcWd8/nnXvuued+77m7fWDo
8JlNZnaMETHu8tOMbcJ+jM1Wmczgts1mn/Ffh4dzZt2MGmMmNZvCN5GYzcKP
4dvwHNyA78CL8Gt4Bl6AF+FpeB5+Ck/BFfJ3kO809hP7rrFvmbmRsFeJvcex
OxhLcFdgX/OB+B/EP8QuMV7CDWyaN2tlfpL8Gdxh4jp7FOEi+Qv438Bb8qph
Gb6Kvx3+Ak9EOqfX4LmWyfuK/LPYmJh5YkYi1XIh1Pbfz4o9jy1m1E7cCc7a
ClfhU3CUKe4onM+U6zicwgncB19Mpce2TGcZhHvgXs7wjBr2MV/iuwX/yVTr
Fth3lLwt+Lfy3Z9q/h3+y/i7+H7B2gOpzuT6lsP5hoPOfhbXujOn2t/iu8Ta
SiZdBkNt7h9NtM97+ErQoTPcS42Y5+y1H7uCXv/guVg6eZzf4Vii2urEfGOu
Db6BbxXugW8l6qN2uIQ9y/cTk56l4HddBvDfM2nYn0j/vtCbBTjFfiVn1dSr
32OtvQn/hQ+ZerI76OF37X26E38V+zMWe2+fS6SzazuUqAdc/yPwpOlO/xB/
0NTbxvjN2fek0st18x54FKmeAjaHv9f0RsqZ3ls9vCfXpBm7Ts5f5Nntd+rv
Ct4LTzPX5D2MbYS8rpv32gr+a5HemetZwY4nui+/xzVy7jK9U3+jXnMN+yDV
f4Hrcz/s4feyARMPdLI=
          "]], Polygon3DBox[CompressedData["
1:eJwtkztwjGEUhj//bb+1skknuxuMYsNMROFSUejT6VQujUQhQ+3WidIMUqEJ
oTA2i2Qk7nFp6IQKlY3LmKFXeF7vX5zZ8/znfN93znvObj4yuf94EkLYh2VY
PQ2hvSaEQWycDxfhYfyNWBM+XIQwT16OX6mGMJeH8AZ+ziXv8dsxhFn4L+dS
4tfI3wY34Tlin8npg2/At+GD2AP4NFwn/1D0/Wfgfvgo/Aqeggfhcfg1fAFu
wF+4rx5c6wh8onB8IPP5iej6VGcTXo8dy9zP2gr9EF8g3iE+QOwAfBM+mbq/
4TJecCbCn8hbB88Qv0XsEu+14Co8C1+BN8B9ZX+X4SG4VuZPFu6nP3O/V+ER
uEG8E92TelPN5wqf0Vm9obfn4Xv8fkfv3/z2ct9/t9S3C3+El4mv5NZE2mie
seKeXxI/n1qL1dz1duBudFzabMJq+H9yz2+R+EL0m6r3Yepapgvf3cCqFc98
iZzHiXdBM9AspaFmo541a81YWkhjaa2d0W5J40ecf5pYe81Es3kGj0bXrNql
4anondBuaOZnC89As+iRvwX/DmdrxL7Cb/F38+1J4vdUn2akWUlD7aY01K6q
x165M9qdF5zZHq1RK7Um0m4Rvs/vT/2JCmvUJr4nWDt9k7+cOvf/jPG/kb8V
fxe2hD9NzljhHlbwW5l7uw6PBr/ZLXvTLqxy5h337+TbL/wx7Ty5M9je4BpU
yw7sR+IaVIt26gPuUOZd035MZN4B/Zf+AZNuc9Y=
          "]], Polygon3DBox[CompressedData["
1:eJwl0blPlFEYxeELw3x8iLKUzIAJBWLCktjQyH9gB7GAhqVRKECpFe2AlkUq
sJiB6WQSFcISEoNLZ+NCBVYyxsRErCl8Jrc4mXt+7znvdzO3c3J2aKY2hHCT
stSfhnACnDp31IWQawhhPYnz5kwIU1haH8J9uSt+jrbNhpPI1p0P9Q8ty+hu
4K9kGqnd7AJ/gW3x16kJ+4E91G23ewX7hj2TWaMif41uYOdyD+TycsvYV2xe
ZiqNd13FvmPPsdtYxT3yIX6/zA/QFzvKtIff4rvpp1wjX5ArpXFndXfOzml6
gq0mcZ5W7212ZkcBu+v8W/81vys3Qa06S3IfzR7LjGIJNo/tYhNYH/ZO71OI
+Rb/VQm/x//B39h3kMZuCTvGjrC0IX53364c9Zpd4iNyWXueYm+xySTuO+G7
aBCr4V9SORPfsvqmv3THdJt1F7D32COZcawFW8Q+YLPYJu1U34I6sIpuETvg
89SH/cPu6H7224b1YH+d/wN55Emz
          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0TsvQ2EcgPG36v4BWIhIJAYSJlar1WAwiUUYWEmIwWAwWawmHwBFK3Gt
Ute632+NxSC+AMLvMDx9nv97zun7nra2Z7BjIBZCGMKwyBSEsINdrBaFkOU9
rOl9PsC6PuQNPuJjbOocn2BLn/IZ0vqct/mCL5HRV3wd7aVv+DbaU99xlu/5
IdpbP/IT9vUzv0Tn0Hl+RT46v7PXYxyTxfa29qGrMYZRa2lrb7oKA+aEuZtn
uYOnuZ0nuK34/zdp5Rb06Rru4nd7NpaGkIre1zmS3GBe5px5iWfMK3pRN+sE
p8wL3GSe56R5jst9Z1E8hDKOs8sihB/XSuQ32zp8sUfCFH+iUPf6qIz93R76
uQIjKIjezc2doi72/9/+AlF6STs=
       "]], Line3DBox[CompressedData["
1:eJwl0T0oRlEAxvHDi4yIhQGvxUcpEwYDs4UyGcTmOwYlpRRlsBh86y2TTShk
EllkIsk3Gcjim5LF72Z47v//nHvOuffcW9jW29iTFEIYkNPUEDKw20CuDEu+
nodP7pXzT6zBWFoI9ZiFzRjHIung1TiIdTiOz8khlKSH8IJH1r9iqf6Gx/o7
JvQN/sEr+Sdu6l9YpX/jlr6PZ/acioVwjtM4Ixd8Fi9xDq9wHq9xAW+wMyWE
Ame55Yu8nxfKiNwZa7F/k/2L9FG552UYly7zj8x5iD6WebtwzX+Mr/ET/sKX
+K/nHeqT/I3vRc/gj3yb9/ErvsoPrGnVl/kOb+AJvsVro3PyFV7B162ZiN45
ms/HeGZ0Fp7NiyV6vXaXHBlK+v+nf0IWRL4=
       "]], 
      Line3DBox[{776, 11, 1453, 740, 1484, 741, 2087, 742, 1485, 743, 2088, 
       744, 1486, 2097, 745, 1459, 746, 2098, 747, 1460, 749, 2099, 698, 1552,
        75, 1537, 60, 1522, 45, 1512, 30, 1801, 281, 381, 15, 374, 293, 782, 
       14, 780, 13, 778, 12, 776}], 
      Line3DBox[{1611, 151, 1619, 166, 1634, 181, 1648, 196, 1803, 287, 384, 
       211, 375, 294, 913, 212, 914, 213, 915, 214, 916, 215, 1458, 759, 1493,
        707, 2094, 706, 1492, 705, 2093, 704, 1491, 2102, 703, 1468, 702, 
       2101, 701, 1467, 699, 2100, 700, 1611}]}, 
     {GrayLevel[0.2], Line3DBox[{1494, 1849, 1850, 1846, 924}], 
      Line3DBox[{382, 357, 1806, 395, 2358, 1856, 1853, 1942, 935}], 
      Line3DBox[{1513, 1941, 2012, 1749, 1862, 2015, 1380, 1809, 1750, 1810, 
       1865, 2338, 1866, 1864, 1857, 1946, 946}], 
      Line3DBox[{1524, 1860, 1863, 1861, 2395, 2194, 1523, 1945, 1752, 1811, 
       1753, 2349, 1525, 1948, 1754, 1947, 1755, 2360, 1526, 1198}], 
      Line3DBox[{1539, 2113, 2282, 1538, 1874, 1876, 1875, 2396, 2019, 1540, 
       1952, 1760, 1815, 2283, 2162, 1541, 1954, 2163, 2379, 1953, 1761, 1542,
        1207}], 
      Line3DBox[{1554, 2117, 2287, 1553, 2118, 2288, 1555, 1881, 1882, 2289, 
       2023, 2022, 1556, 1957, 1958, 2381, 1817, 1766, 1557, 1960, 1961, 2382,
        1959, 1767, 1558, 1215}], 
      Line3DBox[{1567, 1706, 2237, 1566, 983, 1565, 2293, 2120, 1564, 2292, 
       2119, 1563, 2201, 2291, 2071, 1562, 2178, 2290, 2068, 2070, 2069, 1561,
        2366, 2031, 2032, 1964, 1966, 1965, 1560, 2351, 1768, 1818, 1963, 
       1962, 2383, 1559, 2024, 2025, 1883, 1474}], 
      Line3DBox[{1571, 2238, 1707, 1569, 2239, 1708, 1573, 2240, 1709, 1575, 
       2176, 2241, 1710, 1967, 2164, 2242, 1888, 2033, 1711, 1821, 2165, 2243,
        1822, 1890, 1712, 1889, 2177, 2244, 1978, 988}], 
      Line3DBox[{1590, 1719, 2248, 1588, 2301, 2125, 1586, 2300, 2124, 1584, 
       2075, 2299, 2202, 1582, 2180, 2298, 2072, 2074, 2073, 1581, 2035, 2397,
        2195, 1974, 1976, 1975, 1580, 2166, 2297, 1820, 1973, 1972, 1579, 
       2385, 2029, 2030, 1887, 1475}], 
      Line3DBox[{1593, 2126, 2302, 1592, 2250, 1721, 1594, 2251, 1722, 1595, 
       2252, 1723, 1596, 2179, 2253, 1724, 1977, 2167, 2254, 1896, 2036, 1725,
        1825, 2353, 1773, 1826, 1898, 2127, 2369, 1897, 1891, 1982, 999}], 
      Line3DBox[{1600, 1731, 2258, 1599, 1730, 2257, 1598, 1729, 2077, 2256, 
       2204, 1597, 1728, 1984, 2255, 2182, 1901, 1727, 1902, 2371, 1828, 1775,
        1827, 1726, 2370, 2196, 1900, 1774, 1979, 1477}], 
      Line3DBox[{1602, 2128, 2303, 1601, 2129, 2304, 1603, 2259, 1732, 1604, 
       2260, 1733, 1605, 2261, 1734, 1606, 2368, 1895, 1735, 1981, 2387, 1776,
        1904, 2037, 2038, 2398, 1829, 1777, 1830, 1906, 1907, 2374, 1905, 
       1899, 1986, 1009}], 
      Line3DBox[{1609, 1738, 2264, 1608, 1737, 2079, 2078, 2407, 1607, 1736, 
       1988, 2263, 2183, 1910, 1912, 1911, 1832, 2262, 2168, 1831, 2040, 2039,
        2399, 1909, 1778, 1983, 1478}], 
      Line3DBox[{1618, 1743, 2081, 2080, 2408, 1617, 1742, 1994, 1922, 2375, 
       1923, 1925, 1924, 1837, 1781, 2354, 1836, 2043, 2042, 1920, 2268, 2169,
        1987, 1479}], 
      Line3DBox[{1632, 1932, 2082, 1931, 2377, 2205, 1631, 2047, 1789, 1995, 
       1788, 2345, 2190, 1630, 1787, 1838, 1786, 2344, 1993, 1629, 2044, 1919,
        1921, 1480}], 
      Line3DBox[{1646, 2001, 2013, 1795, 1999, 1794, 2000, 2389, 1645, 1793, 
       1840, 1792, 2346, 2191, 1644, 2046, 1929, 1930, 1481}], 
      Line3DBox[{1661, 1847, 1936, 1848, 1842, 2008, 2007, 2392, 1660, 2050, 
       2051, 1935, 1482}], Line3DBox[{1675, 1851, 1938, 1852, 1844, 1483}], 
      Line3DBox[{1019, 1990, 1908, 1917, 1918, 2343, 2184, 1834, 1780, 1833, 
       2197, 2342, 2041, 1915, 1779, 1985, 2372, 2132, 1903, 2373, 1616, 1741,
        2267, 1615, 1740, 2266, 1614, 1739, 2265, 1613, 1013, 1612, 2306, 
       2131, 1610, 2305, 2130, 2089}], 
      Line3DBox[{1132, 1674, 1799, 2010, 2011, 2393, 2193, 1673, 1798, 1843, 
       2192, 2356, 2009, 1672, 2052, 2053, 1937, 2378, 2185, 1671, 2337, 2159,
        1670, 2336, 2158, 1669, 2335, 2157, 1668, 2334, 2333, 2156, 1667, 
       2332, 2155, 1666, 2331, 2154, 1665, 2104}], 
      Line3DBox[{1225, 1578, 1770, 1969, 1970, 2384, 2189, 1577, 1769, 1819, 
       2188, 2350, 1968, 1576, 2027, 2028, 1886, 2365, 2175, 1574, 2296, 2123,
        1572, 2295, 2122, 1568, 2294, 2121, 1570}], 
      Line3DBox[{1263, 1628, 2376, 1785, 1991, 1784, 1992, 1627, 2355, 1783, 
       1835, 1782, 1989, 1626, 2198, 2400, 1914, 1916, 1913, 1625, 2310, 2136,
        2271, 1624, 1745, 2270, 1623, 1744, 2269, 1622, 1023, 1621, 2309, 
       2135, 1620, 2308, 2134, 2090}], 
      Line3DBox[{1273, 1643, 1791, 1997, 2388, 2171, 1998, 1642, 2170, 2317, 
       1839, 1790, 1996, 1641, 2045, 2401, 1927, 1928, 1926, 1640, 2316, 2142,
        1639, 2315, 2141, 2273, 1638, 1746, 2272, 1637, 1033, 1636, 2314, 
       2140, 1635, 2313, 2139, 2206}], 
      Line3DBox[{1280, 1659, 1797, 2004, 2391, 2006, 2005, 1658, 1796, 1841, 
       2390, 2003, 2002, 1657, 2048, 2049, 2326, 1934, 1933, 1656, 2325, 2150,
        1655, 2324, 2149, 1654, 2323, 2148, 2274, 1653, 1044, 1652, 2322, 
       2147, 1651, 2321, 2146, 1650, 2103}], 
      Line3DBox[{2091, 1702, 2233, 1535, 1701, 2232, 1534, 960, 1533, 2281, 
       2112, 1532, 2280, 2111, 1531, 2405, 2063, 2062, 1530, 2361, 1880, 2061,
        1879, 2362, 2200, 1529, 2021, 1759, 1951, 1758, 2340, 2186, 1528, 
       1757, 1814, 1756, 2339, 1949, 1527, 2018, 1867, 1869, 1472}], 
      Line3DBox[{2092, 1705, 2236, 1551, 1704, 2235, 1550, 2286, 2116, 1549, 
       2285, 2115, 1548, 2284, 2114, 1547, 2406, 2067, 2066, 1546, 2363, 1885,
        2064, 1884, 2065, 1545, 2364, 2026, 1765, 1955, 1764, 1956, 2380, 
       1544, 1763, 1816, 1762, 2341, 2187, 1543, 2020, 1877, 1878, 1473}], 
      Line3DBox[{1469, 1845, 2054, 2055, 1854, 2014, 2357, 1676, 1804, 1747, 
       1805, 1190, 1677, 1855, 2173, 2208, 1940, 1678, 1495, 2199, 2209, 2056,
        1679, 1496, 2210, 1680, 1497, 2211, 2105, 2275, 1498, 2212, 1681, 
       1499, 2213, 1682, 1500, 2214, 1683, 2083, 2095}], 
      Line3DBox[{1470, 1939, 1748, 1858, 2394, 601, 1807, 2160, 2218, 1808, 
       400, 1859, 2174, 2219, 1944, 1688, 1504, 2402, 2057, 2058, 1689, 1505, 
       2220, 2106, 2276, 1506, 2107, 2277, 1507, 2221, 1690, 1508, 2222, 1691,
        1509, 2223, 1692, 2084, 2096}], 
      Line3DBox[{1471, 1943, 2161, 2227, 1868, 2016, 2017, 1812, 2348, 1751, 
       1813, 1872, 1873, 1871, 2359, 1870, 1950, 1696, 1514, 2404, 2059, 2060,
        2108, 2403, 1515, 2109, 2278, 1516, 2110, 2279, 1517, 950, 1518, 2228,
        1697, 1519, 2229, 1698, 2207}], 
      Line3DBox[{1476, 1971, 1771, 1892, 2034, 2367, 1713, 1823, 1772, 1824, 
       2181, 2352, 1714, 1894, 1893, 1980, 2386, 1715, 1583, 2203, 2245, 2076,
        1716, 1585, 2246, 1717, 1587, 2247, 1718, 1589, 2249, 1720, 1591}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{763, 1416, 1185, 1188, 1186, 2208, 1289, 1290, 1064, 1135, 
       1065, 2218, 1136, 1293, 1068, 1292, 1069, 2227, 1200, 1472}], 
      Line3DBox[{764, 1417, 1418, 2209, 1419, 1420, 1194, 1196, 1195, 2219, 
       1294, 1295, 1070, 1138, 2348, 1071, 1139, 1298, 1074, 2339, 1297, 1075,
        1209, 1473}], 
      Line3DBox[{765, 925, 2210, 766, 1421, 2402, 1422, 1423, 1424, 1425, 
       1202, 2359, 1201, 1299, 1300, 1301, 2340, 1141, 1076, 1142, 1306, 1307,
        2341, 1305, 1080, 1217, 1474}], 
      Line3DBox[{767, 926, 2211, 769, 936, 2220, 787, 1426, 2404, 1428, 1429, 
       1430, 1431, 2362, 1212, 1211, 1308, 1309, 2380, 1310, 1146, 1081, 1147,
        1317, 2383, 1318, 1316, 1087, 1227, 1475}], 
      Line3DBox[{771, 928, 2212, 772, 2277, 938, 789, 2278, 948, 800, 1432, 
       2405, 957, 810, 1218, 2363, 967, 820, 1391, 2366, 1392, 1229, 1230, 
       978, 831, 2297, 1091, 1153, 1393, 989, 2367, 843, 1394, 1395, 1331, 
       1477}], Line3DBox[{773, 929, 2213, 774, 939, 2221, 790, 2279, 949, 801,
        2280, 958, 811, 1433, 2406, 968, 821, 2290, 1228, 979, 832, 2397, 
       1396, 1092, 1236, 1237, 1238, 2352, 844, 1096, 1156, 1397, 1398, 2370, 
       856, 1399, 1244, 1335, 1478}], 
      Line3DBox[{917, 1055, 2332, 907, 1044, 897, 2272, 1034, 887, 2270, 1025,
        876, 2267, 1016, 865, 1240, 2368, 1239, 1241, 2254, 1093, 1325, 1327, 
       1326, 1152, 2243, 1090, 1151, 1323, 1322, 2384, 1321, 1216, 1224, 
       1215}], Line3DBox[{919, 1057, 2334, 909, 1046, 2323, 899, 1036, 2315, 
       889, 1027, 2310, 878, 1017, 2372, 1338, 1403, 1402, 866, 1007, 2398, 
       1401, 1157, 1098, 854, 998, 2369, 1243, 1242, 1094, 842, 988}], 
      Line3DBox[{920, 1058, 2335, 910, 1047, 2324, 900, 1037, 2316, 890, 1028,
        1344, 2400, 1409, 1408, 879, 1018, 1407, 2342, 1161, 1104, 867, 1008, 
       2374, 1255, 1254, 1100, 855, 999}], 
      Line3DBox[{921, 1059, 2336, 911, 1048, 2325, 901, 1038, 1350, 2401, 
       1268, 1412, 891, 1411, 1410, 1164, 2355, 1110, 880, 1262, 1261, 2343, 
       1260, 1105, 868, 1009}], 
      Line3DBox[{922, 1060, 2337, 912, 1049, 1359, 1278, 2326, 1415, 902, 
       1414, 1413, 1167, 1115, 2317, 892, 1272, 1271, 1269, 2376, 1111, 881, 
       1019}], Line3DBox[{923, 1284, 1283, 2378, 1285, 1121, 1360, 1120, 2390,
        1361, 1169, 1117, 1168, 1116, 2388, 1352, 1351, 1264, 1270, 1263}], 
      Line3DBox[{924, 760, 1062, 1191, 1192, 2358, 934, 784, 1066, 1137, 1380,
        945, 796, 1381, 1382, 2395, 1296, 955, 806, 2282, 964, 816, 2287, 974,
        827, 2294, 985, 2238, 838, 2302, 994, 849, 2303, 1002, 860, 2305, 
       1011, 871, 1489}], 
      Line3DBox[{935, 785, 1067, 1197, 2338, 404, 797, 1072, 2349, 1140, 609, 
       807, 610, 2396, 1302, 965, 817, 2288, 975, 828, 2295, 986, 2239, 839, 
       995, 2250, 850, 2304, 1003, 861, 2306, 1012, 872, 2308, 1021, 883, 
       1490}], Line3DBox[{946, 798, 1073, 2360, 1203, 1205, 1206, 808, 2283, 
       1077, 1143, 1383, 1384, 818, 1385, 2289, 1213, 1311, 976, 829, 2296, 
       987, 2240, 840, 996, 2251, 851, 1004, 2259, 862, 1013, 873, 2309, 1022,
        884, 2313, 1031, 1461}], 
      Line3DBox[{362, 353, 1133, 599, 2357, 761, 600, 1288, 1470}], 
      Line3DBox[{1127, 1287, 1373, 1061, 1187, 1189, 1190, 762, 1063, 1134, 
       1377, 2394, 1378, 786, 1379, 1193, 1291, 1471}], 
      Line3DBox[{1131, 1369, 1374, 1126, 1367, 1125, 1368, 2356, 1173, 1123, 
       1172, 1122, 2391, 1363, 1362, 1274, 1279, 1273}], 
      Line3DBox[{1132, 1176, 1182, 1181, 1375}], 
      Line3DBox[{1180, 1178, 1179, 1175, 1372, 1371, 2393, 1370, 1281, 1286, 
       1280}], Line3DBox[{1198, 1204, 1199, 1303, 1304, 2379, 1078, 1144, 
       1079, 1145, 1313, 2381, 1082, 1312, 1083, 1223, 2365, 1221, 1222, 2241,
        841, 997, 2252, 852, 1005, 2260, 863, 1014, 2265, 874, 1023, 885, 
       2314, 1032, 895, 2321, 1042, 1462}], 
      Line3DBox[{1207, 1214, 1208, 1314, 1315, 2382, 1084, 1148, 1085, 1149, 
       2350, 1320, 1088, 1319, 1089, 2242, 1233, 1231, 1232, 2253, 853, 1006, 
       2261, 864, 1015, 2266, 875, 1024, 2269, 886, 1033, 896, 2322, 1043, 
       906, 2331, 1054, 1463}], 
      Line3DBox[{1225, 1234, 1226, 2244, 1328, 1329, 1330, 1154, 2353, 1095, 
       1155, 1333, 1334, 1332, 2387, 1099, 1253, 1251, 2373, 1252, 877, 1026, 
       2271, 888, 1035, 2273, 898, 1045, 2274, 908, 2333, 1056, 918}], 
      Line3DBox[{1376, 1183, 1184, 1177, 1469}], 
      Line3DBox[{1464, 930, 2214, 775, 940, 2222, 791, 950, 802, 2281, 959, 
       812, 2284, 969, 822, 2291, 1434, 980, 833, 2298, 1235, 990, 2386, 845, 
       1400, 1097, 1247, 1249, 2371, 1250, 857, 1101, 1158, 1404, 2399, 1405, 
       869, 1406, 1256, 1339, 1479}], 
      Line3DBox[{1465, 941, 2223, 792, 951, 2228, 803, 960, 813, 2285, 970, 
       823, 2292, 981, 834, 2299, 1435, 1436, 2245, 1437, 1438, 1245, 1248, 
       1246, 2255, 1336, 1337, 1102, 1159, 1103, 2262, 1160, 1341, 1106, 1340,
        1107, 2268, 1265, 1480}], 
      Line3DBox[{1466, 952, 2229, 804, 961, 2232, 814, 2286, 971, 824, 2293, 
       982, 835, 2300, 991, 2246, 846, 1439, 1440, 2256, 1441, 1442, 1257, 
       1259, 1258, 2263, 1342, 1343, 1108, 1162, 2354, 1109, 1163, 1346, 1112,
        2344, 1345, 1113, 1275, 1481}], 
      Line3DBox[{1476, 1324, 1390, 2385, 1389, 830, 977, 1388, 1150, 2351, 
       1086, 819, 966, 1220, 1219, 1387, 2364, 1386, 809, 956, 2361, 1210, 
       799, 947, 2403, 1427, 788, 937, 2276, 770, 927, 2275, 768}], 
      Line3DBox[{1482, 1282, 1118, 1353, 2346, 1355, 1354, 1166, 1114, 1165, 
       2345, 1349, 1348, 1347, 1266, 2375, 1267, 1447, 1446, 1445, 1444, 2407,
        1443, 858, 2257, 1000, 847, 2247, 992, 2301, 836, 983, 825, 2235, 972,
        815, 2233, 962, 1454, 1487}], 
      Line3DBox[{1483, 1174, 1124, 1364, 1366, 2392, 1365, 1171, 1119, 1170, 
       1358, 2389, 1357, 1356, 1276, 1277, 2377, 1452, 1451, 1450, 1449, 2408,
        1448, 870, 2264, 1010, 859, 2258, 1001, 848, 2249, 2248, 993, 837, 
       2237, 984, 826, 2236, 973, 1455, 1488}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzUvXlYjl/3Np4k85A5yhQps5BKuSJlTJkajClCyFApVMZEKSEyFKWMmaVB
uEkyS2QeQ5EMDWRKfq117/Pz+z7389zPc3iOz/c93rd/rqN1X9faa69r77X3
tfc6z93aec7IqaoqKirTq6uoVK64Hpp50aqexuRkXFX4r1AKa65z4G6dy7JB
046+za5zWRq54Ujs8Icfpbwzv36mL86T5dgO3Vdxld5oPyzxzj4t6X/Pn/B9
Z56sz8c97SuuUqcopzm9w0KluZ7jumyKzpOF+y5Rq7hKa/KXexysPFuK1Lvm
GVUhN13z1KHiKvmqpt6+U3mUlNXgbL8dFfLmleKNKq5Soc6pEY3X95Vujdkw
heROcWftSB6YOM7m0qBO0jbNvb4k73T76FCSj1fRGZhcWVuakmk7k+Qe1SQn
ktcuejXtsWY9SeVf/hX+r8vhR/gV/pzl4JMZu8kmGVfcb76odyTdZ9H84xd6
bkOtZL7/i71PKfn/m+GtQ+T/B3WK2f/WvT7bk/8bTo/sTP73unhjPvl/4qKh
+uT/+V7rqpP/9QoXeZL/a6qd9iL/Tzz83p78f2ej+i3yf+zCGYPJb67bf3cj
v235fGAo+b+R374JJG8ov0p3q6g4kP9LDaK9SP4wOWkkyZ2OBNmR/8teOcxl
eYnhOJK3bDN/8v8J/6Ndop2ifcKP8Cv8+ehlUdFzZ+NkXKFH/cWUdXRfoI2W
esVV2qEbyvdr13rxnvT+fj0picpZrBP9hfSv3WI+hvy/dahtN/J/1exAbv+X
vcI6kP/LVg6pRv7Pdvw0k/zfbfn9OeT/hV2zJpD/97Y9fof8P3dTb27/S5d0
Nya/vfZU4/bf+/Y7Z5JX0nN1IHmvrmZDyf8Lmxa5kdzljiu/l99fprH/O6Xm
zCZ5vNZhlrtGGjj/nf5HP0e/R39Hu0Q7RfuEH+FX+PPqlslDm8W2SsYV+gfV
yval+7rXrNmEngsO3MX3ezjvzSO9KwfuP0PlqAZOKCb9jv3Th5IdmxdeNya7
MjdPmUf2vDvr0pr8/6qntwb5f6H9lHnk/+w2V6eS/9VDn00j/w9z2Xqf/L/X
yZn9vzhBnf2v+aHXIPL/EZcpU0m+YfP7MSTPGpLan/xvm7GS/R/S7g77udkX
n5H/0/8Hhf8f7T3m9N/4H3ETcRTxE/0c/R79He0S7RTtE36EX+HP2Rx3fifh
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
oQ960m4Gcn1mVvXj31P2bpPLHxpx/aOWT79E+no9iOE4g/JQPsrF89AHPS2z
X3rR/6/9b/Sm36OcnViuHTv+BT3fZOKgdNJ361sB9yOUh/JRLp6HPuiZfGMk
t6eLc9d1oN8b/h7A8utvpxfQ8yfum3J7cdqfwfpRHspHuXge+qAnPNU7nP5f
NWC+Fv1eqGPE8h7qhwvp+Qm3ik+Qvsw3qWwnykP5KBfPQx/05HdV3UX/X3c6
XZt+NzltxfIuZmrf6Xn1+7HxpK/cdyTrQXkoH+XieeiDnlNZbU7Q/5XyDpZR
/+6SZ8ly6EU50I/78BzuH1LSItA7zD4ZV8Sx0DKPuzM++0irPPsvnvnZR7b0
05f2x39/km5s+RlRe+Zr2ZOkW10qrtKMwyY+DTc9lr6av8iPjqyYx3RYta/i
Kplo5ekuUon94/ECelEO9EMvyoH+dS328P8NE6/y79fClzcjuf7Vfdvp+Y2z
c7uSvlYz2rqRnj+1B3pRDvRDL8qBfmX+nGxdnEv+nBRaN4j8mRMi9yf8C3/D
z39qJ/SiHOiPjq//c4jX+GRc/5MeZXJlenye5m2k+nscbN2D/OEybrU3+WHt
t5Iwkr/Oy+pFctM0a36PuA/P4f607jlr6f/PBxqb0O8NzqSw/O6ux4EkD1TR
kEg+5/sjlkMvyoF+PA990NO07sjl9P+OqwsH0O+xdU35/oy2Pf1Jvr748yCS
7/zWnu9HeSgf5eJ56IOen413Lab/Z7bfNZR+H7Th/gKS98/R8CL5m/UtRpBc
27DaIpKjPJSPcvE89EHP0NpjPOn/h/V/j6TfNwbvY7lF+rzZJPc9rDaW7XrX
n+UoD+WjXDwPfdDTJG7iLPr/+shN4+j3Pv0yPUludTl/BslXNtCfRHILmd88
kqM8lI9y8Tz0Qc/VhPX8/8PT78fT755dpLkkL/S15eeTU2awfFKP0DkkR3ko
H+XieeiDnvc3Js+n/+Puf3Sg381SH3F/DPa/4EHyfbl6LB8cVnsGyVEeyke5
eB76oCej0N2b/u/pWDaKfg+9H8xyz4gjviRfW2mODcmt83ymkxzloXyUi+eh
D3oOmsZwe7LPsBxMvz/x0+b7mxeWriL5BMMt3O5M9rbm+1Eeyke5eB76oGdV
cdAa+r/hnN796fcNn9ewvHN3tRCS78673Jfblakby1Eeyke5eB76oOfjw0nr
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
/iA90x1XdyQ9jbd25PX3nK5TeT3ePOQK6/EyCOZ8+nXHbTi/foflB1/S83Li
mUakR6O4sFLFVco3j+5CepaYHeM84w3Wzw1IT2v1vbw+HDAlnPPCR4ZY1SM9
Xj/fzSc9BpXaNiA9TWYEqZEe2Zl1+qRnUFryENJz6sF9zh/PPPiOcYv5RSUt
SM+bKm8YbzHDa4A76XGpZlaf9ARNm1eF9BxRn6NHeg4FRw0jPeOWlPC69ZqM
1Nmk51ekAddrwYR9XC+76z1nkR7XbhvZHvfFzdmeslseWqTnlpcX4zeeG2mZ
sz0b9V15vbHVI8737XJXhfN/depWmkt6ztbqVI/06Ectr0p6Cm7cYz0F3q4D
2T/rOzIuJ6Ne6WReJww8yriRAO8OXK9Ma0/Gjzxr8Znt2b3pVGXS83B4UjPS
s7uwPdfrxUw3Xrfu4NGC150uXHXTIT07TOZyPv6tkwc5D/yaoTe/ry7hvVVJ
j4uqcWPS4xtozHri3juwnqRb6rz+M2/wLdYzTFaD9XTXrcv5zB5tHjYlPXuj
75ZT+8n3utaE9LyevZPxjTHlxbwedtbZifUs867dkfT4ht6oSnq+x3dke0o8
NLg95w6N4vas+XROU9Jj9bAB50kv3e7PedOh88t5nVDl3RnG55zV7jKD8oKn
PXnRauKTmtLrcYddSf4s3ozwI9LFy8Oak3zaqES+3zGhF9///eGMFiSvues7
40xOTi3m+9s06qJJ8sePv9J9sjcdP1MevqRW+2cTkrd6t4/z+KO0LThPfPH6
l41IfiRgNutpsNyfypeaNgurQ3ItLTcuN7ZgGZfbqNq1uiTXyKrBdh4zzOFy
My4Nr0fyP91f/n9d/iNTj/2b0fsC41DmHDioQX5Qll+tLA9NWd6dsjx5Zeuo
ynANytaTleFQlK2rK8MNKdtfUIbzUrbPogyXp2y/6U/lyvT/e3v+2X5l9VXm
H2X+VOZ/Ze9L2ftV1h6UtR9l7e1P263Kv/z7f0eOfot+jP6r7H7Ea8RvxG3E
a8RvxG3Ea8RvxG3Ea8RvxG3Ea8RvxG3Ea8RvxG3Ea8RvxG3Ea8RvxG3Ea8Tv
/xS3YzQ2DPT67CA1eJd0dcFnB5nn4qVtftJ+XPmldWm1UmQXpfNPztdKkQw7
V27R9ViFvOOp4T3b58oeWtl87dE+V/LMdPXtnXLvn+Z7NTLl873pG6pYbqX6
/3BuVXGVUoMi56mdmCrNNOySQniYtiZfYwgfM3bnDJvCjrbSirU91bcQTvV4
SV5Ehfx67137THWmSxrurgOpPisGpppR/S5YaJcvWWH6T/w5awUefHaywTbS
v0ujnh/pL3ToUO9lxIh/4oGJFjjx6sbPF5J87ABra5IHve65JsWklbTb3Z1x
Vk8MJjPubfzw1yo/uneTiv1OM14oZ3N3xgkVRGTsHDm6gbToozrjSF9teMA4
0ZbPL5RuLmktbR0wZz7Jk1+0YVzd9gJPs9Cihv/X9Zc/lcsCx0y7vz1bMlWt
/KziKhs1P+pbP7/3ktnXjt0Wfp4udW/g7LPo83RZ8Yava95XtCv3ufVf5YQd
kP1q9tK04iptsNjh/C7/k5T6qHDf5gr/1Hh6fHXFVfKs8Wm350Y3qbvA7S8S
OP4jAr//e0ut7uTP+Ysz2jN+q7nzOfdW/SUPq1P8vob3u8s40cYbLEeGSQaS
w/pZjBe1c1VjvNeP7Dh7z4M60uLXqxjfdbR4L+MgYw+6PbkS2vhv849l5zGu
jQIr2uvbifEVV1lNmV3PJNVk6eKoNSe/1n4qXbxrYfit9lPZLuPyR8dXv5Xa
XrVu65A0X5rd71NBxVVWfGSGYTatxwqegteCt2CF4Cv48f3z7cgK+UqrK3SV
Rp8Z8mXAa3spPG5Xc6qXafnLRlSvtvsv2o38NkDKLj1MuEJZ3cQcbuf3gufu
0rXuKcVcW8T+OdbQlXGHba8tShwxtZ3UyvIV49J7575g/9Q/W+BdpVNTpfW1
i3ip36TivoBfHUZXXGWJm5PPjt0TLK3ss/eaXVjFfFcl41fFVWbV/F7E884n
pNGTr/sfr/JSKts7MqniKtufoLZrtuOrf+JdiRQ8DOMSd3YKq9Br3uNA24qr
dLfR15OrS+ZJGSdCtMkPb05Woqu0a8rSponp46XL+zqqk/3OTcaUU/sZc3F+
fq9bA6V6YzpSf5alpO6luCIdrd3s++mxhpLppTiur5pnEPff2g8+t+zaor3k
2yeF+7v9qy0cB1Q37tLqd0VTaprabQ2119KS+dx+l552PETt9kZ6W30Djs+X
h1VcZTfMltT0Ob1ampm1ISEgIk9S3xbyqOIqi+uirxN0+OA/8Z9YC36JB9EB
u6dV+GH812XbK65SrvEHm/Wl4VK9HX4GQVTe5+ltg2hc2vsq1mSqlzQm8YTV
dvLPwumWFVcp/OnuDRtvO0mBJ7+8pX7UIukmXaWX3R8u0Nw3RPrZZacNf6es
TBpE9QpoN9Jy1HQjqVrqXDkvkHUB17dx4BnfWvf1pF+2MxiPesxlDrcT3dIW
x31dm0t2/lX8Se/RoWZbqZzpt8dyvDX79TuX4rjbIL2qFNcbrDLeRfH8h2xx
hyEV8qRPYf0rrrKSpODAsNsBko/g0fgRKufV2CP4NJ6uGXh0pEGebEKHSnEV
VylT5/DO8seXpdcNp4/atyNPpn3YnK7S0EcZK0ritkkbtt/SXUHf+7NztFaQ
f+IzIwvu+UiXnXfZbiPehC5pgyuu0rjilBrX+7tIGWGDb5LdT5pUvUb1sJ74
+EfZEmvJf0DoEKpvuW3IAB4X9tQIz/cykXyGvKDxWnb31yoetzsFdnqQv66D
tHx4ld70v940reH0+4gfmd9onJqtfSGWcaCjnJOonGrqaTze3evo2IHGxUeT
6/ahcTLwovdcGh9l+xd0mFQhP+T4xGgSfd+vb+yw++1y0e+cTcX1NPqdV1Ru
u3tj02R+GlvrVlwl2z5OzS+P+SRFbK6bMuhcruxNped7Kq7SjO+TLs+JzZLe
aRpMS42qiLeT29pVXCXnuqu/r9OPlm5dOmpKdlhnJumRXXf0Yl3JnrmNTiaT
3UPHz91F9XDo92gQ2e9o0oPr6b34I/MfBGQNKqL67pTieFwMrXaBceI/2yQV
kX9slwezH9Prh7FfPUKcDpA/fcNusN9TGq24QeVcGBbb9FeF/991aD2M3pPN
eIvh9N527+7emN5X3yVX9OZRvLZ91XUexafizYPn/FoinRN8IG0FH8gswQcy
KNWwlOY5M83uGdA8R81bPs+59a6+E81znF5P6lpxla5eC9emec6M0l4GNM95
M3BEk4qr9CvBdQ7Nc8bJLqhSOw4JmfKO2nW/HR7bqT3PHF9nC9k9wL3nEvbP
sF+1qP17r/YaTfXt2snFk+p73OtiMvWX7r0mMY548p2yaSRvcerQCupfGtmb
OB4tf37OluRnLpkPp/64tmrbN6Q3fEr0OyrnzZtXftR/U082H0D9/I2PyiDq
93Obv99I/b2KZfXWS6nf5qt1qrjKPvhl6q/XX/RPPB6LBI9H91p+22gc37ho
6ykax01j07/QOG6cXfMgjeMHj4do0Tj+ZaF8HB+WtfwKjeOrF8d40jie1iaA
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
fUyn9XP20j7m7i0aCbQ+HjPdczmtl0dfj4uhdXLZzDtrad9uok5mFu3jnb52
8Sbt36V59DtP/z+LmRVFv0cVr2X5kYykBlSv9gs87lG9Rn5ZyPXyzLoQRuXF
dVe7QOW77Xmyh8otEeNCE4VxYZbgeSsTPG/mgudNw+Ut74ttPLG0Ae2LOR9T
XUz16lYn/hj5rf75mE3kt5Dv/dlvPUeph9D/2oZDk+j3zao3WK7eK7E+PT/t
zMEepG/nOk3W00jwsl0VPG1DBD/br9N5eVSf0t391al+5a0iOF+ij9Uk3tcM
d0tNJn/U7ON1nfzwu1JhLPlz2vkdm8ifZ22zdpA/H20ZG0H/m4w7E0O/V/8h
7ST58I/TY8k/sbEFvM/su0ON95ebqU6qQ+XdUK2ZT+V7a4Ty/k6K4GcrEvxs
DoKfTVcjXEb1zN++ayPVO8WteSnVVzGu5oi46iH40YIFX5o9+NkMgnjfsUuH
b93JP8tzfHj/cdi1WG4/7h9b8fvUt0/bQnZOu+p5muqTn/9gCdUvYVP/SKqX
Rfur3D5e/viaRv4ZFzgsnfyjdvEKt6f0S3dD6fdx2l9ZXnalpwnVt9KzYzKq
7+/wrHtUX/8D30KpvLkT0y5S+Q0vD9tK5YaLOLZLIY4p8rCFCh62bC1v7g9a
P29+p/7xeYjjXKrXTlfNXPKbfpAP9zun/Brst1HjpnrT/xe35z3h9mWZz/uS
F+o0/UnPL9XqwPloqm+nsZ7ike2f0v5uzZyI0bTfO9JLvs+7NtntENUnIqLF
MKpfZO8PXK+a+fN+2yfNl3z8n7ZzTJov2+Mv36fb/al6U/rfJuTQF/r9wUm5
vFKOnK/sieAra/4feMwaCb6q3oK/aozgrcq8MvQx5dX9uutwhPafu/yK5X3n
mrM9PxG+Ivmljj/hLaZtkuMsAn5s3kH39fc/dpOei7qlwvl4ubFes+m+U/bP
X9BzHwRv20DBu3RZ8DBJgn9JUb5VyJ882HOQ9jXPa9ebSvucut/296D9TcX7
R4n7u5e1Zjyhi6sur3MPSPjB864eC3Y+oHY17PGXAGpXrZpXzaR2tbv5nLa0
T7yyTux32jducXcn7xfXWafyiOqTqmm8iep35OAP9kOQw9dJtN98KmyyFe0/
x4fL9509X/Vg3EefN+P5+6yq8Um2Z3Tv5xqtiPdh/KVcmgcFnOjbguY/J5KP
nKT8mS037IIpf2amXfBoyp9x0TyaS+V2WdBlNZXbpLScy00Q+bsJCnm88mui
mNcl/jWvixe8Tq0U+KYe1ZuVR/PCkbYqGTRP1Hgyz5Hmh9fLlzpTvsrMGW0H
UL5K5fIO6yhfxWntvby7Y9Okbt/D+lMeR0xwFudvyMtxFeW6/lXu1YDDjBtN
slqxkvrdmiU7OG77N35wgdr5A0vr9tTOb77pyvHfQKzLGCisz5zPP72MxvVr
QbOzaH6YfHkjj+9h+q6XaN86at08S9rHfp30r/PQtop9ihldLPbQPPunRbcg
mncvfvX+Ns23g94lzaTx2Kb51hE0Pk9S78jj/vV8XUuqvyzLbzL5o8lYr/Xk
h2jZ+2PUb41eGkyifnxY5KO+FOtoLxXW02yq9LlJ86SSSf4/6Dsm7vAcni/N
co6vTu0n9XrjaGo/qiL/cE5Wt46UD9Gr7VPOjzAbUsWQ8iIUeaXCBW+SonyH
kCvjlVKUWwv5IcE35SD4pvYKvqkcYd8GYS/sXCjWSRcqrJd+X11nEc1HGxa3
CKX56d3h+3leajjZsBP5q90Vq8/kvyM+cr/9zu7M+UM9Z7frSPuTbVdOGUX7
klqazldofzr7UtpF2q/u22xPS9qnftH+6xv67piSEJRD8zhvg4vraf4WojWK
cU3n35vxOlhDk1uMS3K8NaIH7YM7GmzvT/vg9xetr055bo3dp42h9x2fms95
RrHXv6nwfK9JL29qT3Wu6MVQ+/oYKW9Xsv4vBtDz/gNqdyd9PTf8qkR6tJ/q
vSd76g10eUr2fNSUhZI9yvijFOV+Qm5TbSyvZzYf1pvXM8cfsuNzhXoJv8BP
jYR/PNpsGkHt0z5UYwy1zwmOmUHUPs81kOMzncL+kZ8hpqFc3m/9P8onC3xl
awV8ZR3Bl+Qq+JNU9OS8SYpyfSGfMm/zRorPHdXG+lN8XrK2sy7FZ8X7a4r7
dw8x4fXZI6WT+bt808FoXqc91vP5GYrPVwrO76L4/MruE4/7jcY+Yf88yj7J
+zCpa014vXejLLYF9ZOhk926UL8ZN/1gJ+ov+5/qRlI8nTr9ZRzFV8PkQ4Mo
rtrWuLSK4rzmKfWjFOeX9w3mOD/QVr8b5Vf5/75oR/F2S+IRjrcma8d0p3a/
0m11BPUDmcgvWqsWxjx0F+arcr1m1szhdUhXw9s1Kc43H55TQHFeCjldl+J8
YQ2nw2SHpsaBDWSXwRsNS7IncpCvDpWrv2aeK5XbQdrD5Srjm2okyeUaBnL5
LSGPF+NB/L8cF+JEfI77Kz4/FzxQ7xX4qTJy1n6kcSH04rczNC7c106ypXGh
ilnuNGpnKbHpfand6VmWLaH2pogzXS5wpva/OpTReDHGejCPF5JFrf8xXowW
9oz+y55b97rrUb2udv65iuo1Kdua6/XpbXwmjRfrPj/Tp/FCJ+09z4ueiv3p
pwr71B03zvWi8WJhvb4/abxwnOLH48WLX6ml1J9rrnjbjfp394Xyfh1vtT6J
xoX46ZoLaVxonKV7kcaFZrm/vSkuuM62t6Q40c927Df6Xnv37pwZ1f+cfv50
8kfJh6Hsh6WOwZsprg38ZbOD4lySpzy+zRL5BLMU8gpqpL6MonHBomFOf/qe
zqorX38oLG4YSO3t2YIgc2pvyYvk7c1S8Eo1EbxSswWvlKJ8upAPF3xTdwXf
VKbgm6rpLderXSIvB/pHfWjI/OxLW47YT8/lJ9gxDh358ciXR568Ih/UYcGb
pCg/J+SeB/PXkV+m1z4TQH66vkjun/dinXOKwjpnpvhuXSa+W8PFd6vPtp3P
aFxYMcWP85j6rnrcjsaFGz1/l1EcVh055zrF4devPTl/u5N0YQC9vzr71vrQ
+6z1I1WV4rzezqa9qV36WJwponYa9uIet89N0+a0onZmUdzyGre7VfV4frJK
90QJ6e9ucPYu6TfcHM3rycp4mUqF/IOQzxZyG+2u3H8aaC3g9uPx+grPr9r8
lPOKLJfJeVGmCF4m5zK5PO3cP8otptYaQ/HCrf6dxhQ/KllV4fm2Ml4mNyGv
LOQjhfxpWtUIituDqx1aRHH7lHUnzv+3TIzj78Gi17EXeJ3zxCeePxcMzzpL
8dm+WelOis/1q9Tj7/oep0w3UVw7MfJKPMW5k2ERdhTfFNddf4h1V3fx/V4u
vt97i+9387FPnSg+1z7y+QzFZ9de8nl4K3Wz+lTPlMmVxlG9vQrl3xfHoqbv
pfsuR6gtpufe94zk+yfk7+H9a3O76kZU37S8+VxfH5v8YfydMnuvLul7WvKe
4+2B9799qf677qdw/mS/Q5X4+2KsqOdHUe+favL61m/WpjU9/2PSFxvSp5rx
mfUo43GaIeTThLz8hVw+TvAqJCnwKlSaMuYJtbOwZnofqN29+VB7I7U3ZbxM
G4W8hpDPFnLjhxacb5149qwOtff7K725nfcLXM7rtIesMzkPIjLlh/xcjGO+
n6jdpwV4qVI/qLq000Nq/0WHWu2h+Glfa78Pxc+3IfL46Xiu3WXqh9ePqV+i
fllsdFST+mNEeEee37jvtuP5jt31E/LzULSNX1G9mj2zzaN6ndkzeR3Va53I
39US+bzI4/USvELqgmfooeAXUpQ/F3JFPqXzgk/p2VTb2RR/TlQfeIHiz1rx
3a1sXXeeWPdYI9Y9nMS6R9z8TYyLeLY2hnESfZycNKi+tgPefaP6pKw+covq
1y/iFK8rej7uwd8VqXN1ZlH8WWLhwuNIVOXH1vQ+ltu4cfxpH6nG76VkqW43
xttY1rhC78HYvSqv57QxC/lN+ntqV79K+psYnOX19leCxydH8PoECz6fHCF/
LuS3hbyfuqEFxR/bRZ4uFH9+xTz1o/hjvkceZ1rN+kdeoxdCfk5B/stnNn8P
30kPL6Xv1DvxO7n9K+M1ei3kTYV8rpCvS5X2U397vfvEdOp/TRv7c97y1ylH
v/A+1/1C5qfRKtzL67cz9/V5SP0wt+rwQOqXDsXOF6k/9tyRzt/Pg58P4O/p
yW3PDqT4o7jOfE2sMzcS6z+BYv0nSKz/uHtfHM754t6TCymuLBi6kuOJ7hTn
b1RPs5NfNnI+fuQOru/KazNrvqy4z8ylmgE9N/6kPM+8uO6YeKpv3Q81mJ9n
jMNQru/qjHm76HmLejHvSF+pdaQ8bjx+OoXqf+NE00Pkj5nmsrbkh3xRT3dR
716ivtteuPM4bWFeicftjSsdmAdj/bg370nvo/SGUVROgYZ8PqmMHylOyK2E
fKKQD9HcI3PZWvG9fNfPt+IqfVhom7Nsw37JfbmDH/0/YtLTs/S7aWfPLJJ3
r9/YeEfLs1KvxCX9drY8K5tUa9aSjJAKP4Qs7Uz/b3q6Sp9+d79TwvLUyQkb
qLyNMTkqVP6UJnI+/Nk545eT3WUzywuoHgkzf7H9kZ829+ZzXmr3b0ztce43
eTvEOg7WdbCek+JyKJ36SWbfC2q0zh/W+h6P1ycc3zJ/yOw6fjxP6ZXWjOcn
4wOm8v7Nae2XvJ9jV68Vr5/fWvg0k/TUtt/4nfpf8urLrOfc4tPMG+YRvP8R
6akWMoHnS4r5hAdEPqEyXuiGYj35slhPdhDryXNFflqxAs5IGQ/P3PLJjtSf
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
tYATBm4YeGHFfDzgrIGvBt4aOGtl6z/AVwNvDZw18MbAHyMfD/he4H2B81Vc
/wHOF3hs4LOBywbuGjhs4K+BuwYOG/hr4HKB0wU+F7hc4HS/CXwu8NjAZwOX
DTw28NnAZQNHDVw18NTAUQNXDTw1cNTAVQNPDdwvcMDA/wL3Cxww8L/A9wLv
C5wv8L3A+wLnC3wv8L7A+SruC+A8MuC3gecGjht4aeCngZsGLho4aeCj5fEJ
5zk5/xWvgB8Gnhg4YuCHgScGjhg4YeCGgRcGThi4YeCFgRMGbhh4YZw3hvPH
cO4YcNTAVWM+gHOVcM4SzlcCHgz4MOCFcV4Xzu/CuV3APwMPDRw0zh8yVsAv
A/cLHDDwvzjXCudc4Xwr4J/XKZxnhHN6cG4PzusBjhe4XuB5FfNAgI8G/hl4
aOCgla2nAf8MPDRw0MADv1DIDwH+Fnhc4HAV19OAwwVeGvhp4KaBiwZOGvho
4KKBkwY+GrhZ4GiBn50jcLPA0QI/C9wscLTAzwJHDVw18NTAUQNXDTw18M9/
4aEFDhr4Z+ChgYMG/jlXyOcJOXC5wOkCnwtcLnC6wOcCFw2cNPDRwCEDlww8
MvDGwB8Ddwx8L/C+wPkC3wu8L3C+4EEDLxr40MCzBt418K2B/wt8YOABA/8X
+MDAA2Z0Vj7u3Pn+j+NOo99NEug9+adYP2M+k4apPJ76DvlSTP388UnVCXR/
VpH8fsX88IMiP1y6czaZ/zfb85B+L4xervev5DeF3PzHwHukf6lXm4WkP7hE
rv/UV7m8rodcvlbIywKO83dO9JqEs6RvXFEbXdLTWKct40D3d7IuonY+xCSW
vzenJ1ieofu63m51l/lzyi/y/W96L+D4m2dZyvN09eJb7Odzgr9Jt+HYjVRu
w0vycs8H6WTR86p7LM6TvjorfnJ9FeVNhVzxuwy8YeCHAl8U4qf/xlTGF5vW
/ziM4kyXvHSeH4KHC7xc4OMCvxX4rsB/pSgH/xV4jsB7BL4j8ByB9wh8R+CN
Ao8U+KPAHwQ+IfAIgT8IfELgEQqZKY9j+3f/YxyzuPSRcbXznixlXO25iA8c
HyZEW1nR/fe+JunS/VYiX04x/y1L5L/dLN9wjP63yX/ygn431Yls/q/kzYQ8
p4+NC+mvdK92bdKfvlauf4SxXL7ozj/Kz2WOyyD/e5mZVab9gbiyYo6fee+S
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
Sd3vdR2d+EwjVXXpUydu71g9Y26veVBeBLVXmcfRDPvEuqqGcXpKtjvjyRfP
lu+kduWuvc79P/wLPcaTw5eNX2u7xiFOY5EiTiP3PadXfAiBrdz/Wx94b6f6
dCYacX1ur7/A9dk5qPzA/1OfvzQFcHuNkku5veX/7M3tfVrWwDjaOOs9fm/4
gIb/2d7zrf/m+qTt9ef+XPkgfwfJWVK5jHE6aMZmxu32iMiDJKfTS5ffGzN8
MJfPybSJo+eFV0V4VuaDX0X4SoS/5G3wlgjfh/B/xIH3Q/gphK8iFDwVSl76
HPAqTEb+/27wAQwBD4AN8sm/RX55HfLKlX79Dfj1kt/4e74j8hxDkI83G/l5
C5CXp8zLWAr7RPLNJP8sGnlnWZ06dnR9/5w+5z1PX+74gsqPPxqUSXKjI/pm
03uWOh9xI/kZpjEWVI8z4S0TqV4Hy3otpPoUPf1uDMdjuO63ov65852q42h3
/yy5WDuQ5s9QC0/D7t/CX1VjYnZopv5+zhKGc5atOGcp2uUyktaZTs+IgbTO
6FYkBNI64/FmkR29Ly0yxYTev2D7+rX03rrdPzDvQ0LjTOaBGDUgyoXqmWk6
i9v19o6a6dSucb13PaV2/RA/7Dh/t7RZM4v+N7Uqi9cl84iKcSTX1/LgJHqP
sfe4OST/FuIJHRBP6I94wrV2Gc+pPSG6/6qj9rkOyfiM1gebe9u4nl0HbnA9
myZMDic5bq45U9keXhLC9qHhn6Z0Un02xU/g+rzR8oh+C52jbLj+zyamcH38
Ioq4PrEPxs8kORKf4KGIT7iXUcLyH77ly/Lrzzo9JPlJoTbUTlX2y/uZ/B3G
qpvTSH5hpu5Ykq/9m7s1yR9SafZnkm/dd4iK5JSmaXO/aW8JvsfzJX1EBslZ
V/aS9eFNi1AHkrPrbhPnya+qsmP9qQ+qv0vPK3mN3DHv9BR8QTLvRP9EH6dB
D2Ogf5nQR9FDGVcZZ0uMr4yrjLMNxncV+n0exkH6v+Kn0A9Jbx++POdEepun
NslI7dbbd2FXJ8KuHgq7WsZJxk3G6xH6vRXjIP2v9PePwd/fB7z0BH6OAW5W
rv7AiOozRtXfkepjmt0elNZdn3b72/NonmT6bv47zZthNR87x1EescL+HAz7
03bT6I9IbruurTm9pzUybznJFz0QvbgAfZDxtsL4a2HcBb8FzwXHzYB/14CH
84CDowxyRlA9Eu7E2FK9zCP3fk39uQl+hD78iBnwI8oSw0xovt8M/0if5vvB
2ojm9d3z/ddR161IbmDkTtZTi/5xrJ9roX9B0Edt6GEY9E/0sQ56qNx/6IC9
sQp2htgdJ2FvKPcZbgHHxf4Qe+QK7BDBdcF5wfeecG0Y8P4E8P9L4H4x8Fjw
eQtwWckbYADegD+Ky4LrgvOC74bAacFtwWvBm4vAnyrgTl59tSnVp6v5b1Oo
Pkl7YpNpfA3gxxXAj6uEH/dH69lTeQPshiewI9bAfjgG+6AC9oLYCcq8dQ/g
YzrwYz7wxBo4orI34/3xKTqaKmrXOzpdfjTvCu0OuNC88869sobmndU5Tdu4
15i/31P5Stg3Yu+InSP2zS+wd2bDzlHuS6wA7gveewL/NwH3BS9rgZ9mwM0n
wK2pwLE3Jr7Cr8jbFYbUPympy3ldSr4XdojG3UnlMCB+/veq5Fva0d2/hVv6
mLbYevysGo84oWjEDe1EvFAR8h9+RD7EXuRBdJo0fEL/f9fO25Lkva9lyXLO
wy87Cb/sMvyybxd6T6XnNq7IWUn/cyz0b6bnjyD+YIuCp10bcfMliKNfgPj5
vYdLttP/q0/ONSB5T97yYTk9jcvnwAPBh5HAhXz4Dz7wJ67Aj/CCv9wOf1kH
/vIe2IViJw6CfZiA/IdW5EP4IQ9iMNbNaKyjjlg/8zHfZP5VY96JvSL2yxLJ
g4B/HQj/2hn+9WGjmnjqB7deCb2pH75PHcH9f7V8H18betfxfSmPflE2iuyf
c4v9+pD9Y22YH0t2XU/fHVPyvIXAflZ+z8sb8ckmS9PYjrzS7yrble4Dt9kd
6X5eyWOWBntbGefsAzn1zvEBdL1Aq9GH7hd43XWi+bsBccBqxAW7Ih5YGVc8
BHi6Gc9txP/k+bu5BX7UL+l/VU+jfmp8P5D15wT0tQL6exV6q4wjWog4ol9+
ruV+8bp1lN+bPOcba2rvicFbWG5D52l+TwPkO5fEWVL/7/TJ0qL+j+ozcT31
vyfsQg/YifawD5Xfx7FD/GQArvVx3x7lMm8nYB7L/BU9Fr3Whj7/qMhvknnt
uXgBz+f0Xjd5fsu8/m18Hx+61nyebEv3J0focPnuY4l8HRLbl+9LeTb8JUv4
T+I3ST9Kv0p/Grb536V+CfbqekD9dDQteQfZ52qsC4ewTphgfViJ+SDzQ+aF
Mu9G1g3Tz115vbA/W8zrh6wbHauD9tP1itIdenR/aNOr8snXd/H1cL9Avm+E
8v/s1+R18/bWabyOxmL9VH4Hpz/2YaZ3PpxF5f84H76ayne/6M92oF5ULuu5
n0MB6/nsjjQ7Kpd1RNaVxVhPLk7K5XXTf48Xr6Oyfiq/fxENv0w3MtiVyg84
aoRSeZuXA+OgMq5gI+IKxH+uhT+9DX50qUvKVHp+wCK1CT2vHlgUTDh7rKSJ
/cm4ls3sXxp65rnR8+nBh9gO7LIqZzvwVNMaDypXnmv/hHPt8ac3MD5Vrz/O
eFV/3yuA5P8XEwZjOQ==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-8, 8}, {-8, 8}, {0., 24337.669872299237`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.762423762145551*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"d5486a38-cfc3-4e41-b264-732920988afc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Cosh", "[", "x", "]"}], 
    SuperscriptBox[
     RowBox[{"Sinh", "[", "x", "]"}], "4"]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7624237791896825`*^9, 3.762423803469284*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"236f81ef-c0a9-435e-bbe4-bfc064f0fa66"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "3"]}], " ", 
  SuperscriptBox[
   RowBox[{"Csch", "[", "x", "]"}], "3"]}]], "Output",
 CellChangeTimes->{3.7624238038073497`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"ed63a2bd-bbc9-4215-9fe3-a66cc164800e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Limit]", 
   RowBox[{"x", "\[Rule]", "0"}]], 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.7624240046147404`*^9, 3.7624240228523884`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"ce405448-861e-44ef-9c7b-4b79dab795d7"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7624240231546125`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"9acc071c-6360-4750-bf66-6e1bab155262"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   SqrtBox["2"], 
   SqrtBox["3"]], 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "+", 
     RowBox[{"Cos", "[", "x", "]"}]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.7624244467539454`*^9, 3.762424447574354*^9}, {
  3.762424481108601*^9, 3.7624244814111657`*^9}, {3.7624245191603875`*^9, 
  3.7624245365022273`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"261221b2-22b8-458f-8b0c-47e2d49fd66a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     SqrtBox["2"]}], "+", 
    SqrtBox["3"], "+", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"Cos", "[", 
       SqrtBox["2"], "]"}], "+", 
      RowBox[{"Sin", "[", 
       SqrtBox["2"], "]"}]}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"Cos", "[", 
       SqrtBox["3"], "]"}], "+", 
      RowBox[{"Sin", "[", 
       SqrtBox["3"], "]"}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7624244435732083`*^9, 3.7624244490922093`*^9}, 
   3.7624244824962935`*^9, {3.7624245323584313`*^9, 3.7624245378677883`*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"f117ba47-864a-4907-980c-16642fbc1e0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    SqrtBox["2"], 
    SqrtBox["3"]], 
   RowBox[{
    FractionBox[
     RowBox[{"Sin", "[", "x", 
      StyleBox["]",
       FontSize->14]}], 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "+", 
      RowBox[{"Cos", "[", "x", "]"}]}]], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762424036742378*^9, 3.76242403922812*^9}, {
  3.7624240761165686`*^9, 3.7624241016469197`*^9}, {3.7624243503088446`*^9, 
  3.762424429838782*^9}, {3.7624246165806975`*^9, 3.762424620642531*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"3bcc7e01-59aa-4856-8f07-0b96a3a8e4ba"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     SqrtBox["2"]}], "+", 
    SqrtBox["3"], "+", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"Cos", "[", 
       SqrtBox["2"], "]"}], "+", 
      RowBox[{"Sin", "[", 
       SqrtBox["2"], "]"}]}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"Cos", "[", 
       SqrtBox["3"], "]"}], "+", 
      RowBox[{"Sin", "[", 
       SqrtBox["3"], "]"}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7624241937522726`*^9, {3.762424356529002*^9, 3.762424377399802*^9}, {
   3.7624244165277004`*^9, 3.762424430953992*^9}, 3.7624246215849705`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"b104f0f9-b821-4452-b077-12d0c8b5a7ac"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7624239301364527`*^9, 
  3.7624239379704647`*^9}},ExpressionUUID->"53e9471f-256f-4b2e-9e25-\
05d1893ded03"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{"N", "[", 
   FractionBox[
    RowBox[{"-", "\[Pi]"}], "4"], "]"}],
  FontSize->14], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["N",
   FontSize->14], 
  StyleBox["[",
   FontSize->14], 
  RowBox[{
   FractionBox[
    RowBox[{"-", "\[Pi]"}], "4"], "+", "\[Pi]"}], 
  StyleBox["]",
   FontSize->14]}]}], "Input",
 CellChangeTimes->{{3.762424147904996*^9, 3.7624241510237203`*^9}, {
  3.7624242001477256`*^9, 3.762424202891143*^9}, {3.7624242801006575`*^9, 
  3.7624242916441298`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"03172399-9fd0-4c0f-b90d-b6c3e1c98623"],

Cell[BoxData[
 RowBox[{"-", "0.7853981633974483`"}]], "Output",
 CellChangeTimes->{{3.762424196397266*^9, 3.762424203534416*^9}, 
   3.762424292212578*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"c86ac452-0fe8-4d41-a91b-1ca474cccc8d"],

Cell[BoxData["2.356194490192345`"], "Output",
 CellChangeTimes->{{3.762424196397266*^9, 3.762424203534416*^9}, 
   3.762424292215596*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"fe6b420e-d8ba-4f69-bbb5-1e61fe2fa11e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  SqrtBox["3"], "]"}]], "Input",
 CellChangeTimes->{{3.762424247304387*^9, 3.7624242548899*^9}, {
  3.762424409367628*^9, 3.762424409641452*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"cf1148b1-6ec4-4852-b2cd-4462aec4bb87"],

Cell[BoxData["1.7320508075688772`"], "Output",
 CellChangeTimes->{{3.762424249863757*^9, 3.7624242552379227`*^9}, 
   3.762424409829584*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"3a2c3bf0-0f0e-4f21-bd05-6e2b29ac0b25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Log", "[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7624242570082893`*^9, 3.7624243380790358`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"f370752d-8b51-48aa-8c64-584829641487"],

Cell[BoxData["0.6931471805599453`"], "Output",
 CellChangeTimes->{{3.7624242585625534`*^9, 3.7624242750653887`*^9}, 
   3.762424338290908*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"5d9feb93-b7d8-42a4-b2dc-427204dcb02e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Log", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.762424463687771*^9, 3.762424463912359*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"c984c327-2193-4572-b306-718e0ac40299"],

Cell[BoxData["1.0986122886681098`"], "Output",
 CellChangeTimes->{3.7624244647254095`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"c8aaf70e-5ddc-4c34-adea-2982e96ee6fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   SqrtBox["2"], 
   SqrtBox["3"]], 
  RowBox[{
   FractionBox[
    RowBox[{"Cos", "[", "x", "]"}], 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "+", 
     RowBox[{"Cos", "[", "x", "]"}]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.7624246310740385`*^9, 3.762424631968915*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"0904310d-504b-44ac-af11-7cde9820541f"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     SqrtBox["2"]}], "+", 
    SqrtBox["3"], "-", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"Cos", "[", 
       SqrtBox["2"], "]"}], "+", 
      RowBox[{"Sin", "[", 
       SqrtBox["2"], "]"}]}], "]"}], "+", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"Cos", "[", 
       SqrtBox["3"], "]"}], "+", 
      RowBox[{"Sin", "[", 
       SqrtBox["3"], "]"}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.76242463328862*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"4ae35920-909a-4839-ae91-c8a8b643ca16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "5"], 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.762426023251854*^9, 3.76242604913124*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"b51165da-6f8b-4ce0-94c6-f7336a322856"],

Cell[BoxData[
 RowBox[{"ArcTan", "[", "5", "]"}]], "Output",
 CellChangeTimes->{{3.7624260389391184`*^9, 3.762426049548492*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"7a77fcb3-851d-48eb-91df-a24faa21b6c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<1/(1+(u^2/a^2))\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Indefinite Integral\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7624261509102592`*^9, 3.7624261723655877`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"06e3f053-0b5e-485c-9349-a2ef6f1ed8a1"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "1/(1+(u^2/a^2))", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Indefinite Integral"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Indefinite integrals", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[1/(1 + u^2/a^2), u]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   FractionBox["1", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    SuperscriptBox["u", "2"], 
                    SuperscriptBox["a", "2"]]}]], 
                   RowBox[{"\[DifferentialD]", "u"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{"a", " ", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    FractionBox["u", "a"], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Take the integral:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["u", "2"], 
                    SuperscriptBox["a", "2"]], "+", "1"}]], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    FractionBox["1", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["u", "2"], 
                    SuperscriptBox["a", "2"]], "+", "1"}]], "\",\"", "\" \""},
                     "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"s", "\[LongEqual]", 
                    FractionBox["u", "a"]}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "s"}], "\[LongEqual]", 
                    FractionBox["1", "a"]}], "\"\[ThinSpace]\""}, 
                    "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"a", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    SuperscriptBox["s", "2"], "+", "1"}]], 
                    RowBox[{"\[DifferentialD]", "s"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    FractionBox["1", 
                    RowBox[{
                    SuperscriptBox["s", "2"], "+", "1"}]], "\" \""}, 
                    "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "s", ")"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{"a", " ", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "s", ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"s", "\[LongEqual]", 
                    FractionBox["u", "a"]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{"a", " ", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    FractionBox["u", "a"], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement[
         "info", {"text" -> "tan^(-1)(x) is the inverse tangent function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/ArcTan.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> 
             "http://functions.wolfram.com/ElementaryFunctions/ArcTan", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/InverseTangent.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                TemplateBox[{
                  RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}], "\" \"", 
                  "\"is the inverse tangent function\""}, "RowDefault"], 
                TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "IndefiniteIntegral__Hide steps"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "MultiClash", "word" -> "", "template" -> 
        "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2"}, {
        XMLElement[
        "value", {
         "name" -> "Variable", "word" -> "u", "desc" -> "a variable", "input" -> 
          "*MC.u%5E2%2Fa%5E2-_*Variable-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Unit", "word" -> "u^2/a^2", "desc" -> "a unit", "input" -> 
          "*MC.u%5E2%2Fa%5E2-_*Unit-"}, {}]}]}]}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.015", 
    "parsetiming" -> "0.491", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa70123d9cc17d0i40c0900004hg3f2ge9fa75bdh", "host" -> 
    "http://www4b.wolframalpha.com", "server" -> "55", "related" -> 
    "http://www4b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa70223d9cc17d0i40c0900001a0f3c219f71a2315965109366486662577", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2019, 3, 24, 15, 22, 57.7888702`9.514419037575706}, "Line" -> 
    57, "SessionID" -> 33681050585085282212}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "1/(1+(u^2/a^2))"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1175., {659., 671.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7624261779868593`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"3d2d674e-e54a-4195-b1f9-c59fc8bd2f35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"t", "-", "a"}], ")"}], "3"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"b", "-", "t"}], ")"}], "2"]}]], "Input",
 CellChangeTimes->{{3.7624286528062077`*^9, 3.762428660783518*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"0a41d124-b1be-4885-bcd9-8a2d3b27b53b"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"b", "-", "t"}], ")"}], "2"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "a"}], "+", "t"}], ")"}], "3"]}]], "Output",
 CellChangeTimes->{3.762428663517066*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"a5ee1ce5-b078-4c00-8441-4834eaee76fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"b", "-", "t"}], ")"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "+", "t"}], ")"}], "3"]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[59]:=",ExpressionUUID->"0ea200be-efde-4527-a5a0-138c7183a7e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["a", "3"]}], " ", 
   SuperscriptBox["b", "2"]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["a", "3"], " ", "b", " ", "t"}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["b", "2"], " ", "t"}], "-", 
  RowBox[{
   SuperscriptBox["a", "3"], " ", 
   SuperscriptBox["t", "2"]}], "-", 
  RowBox[{"6", " ", 
   SuperscriptBox["a", "2"], " ", "b", " ", 
   SuperscriptBox["t", "2"]}], "-", 
  RowBox[{"3", " ", "a", " ", 
   SuperscriptBox["b", "2"], " ", 
   SuperscriptBox["t", "2"]}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["t", "3"]}], "+", 
  RowBox[{"6", " ", "a", " ", "b", " ", 
   SuperscriptBox["t", "3"]}], "+", 
  RowBox[{
   SuperscriptBox["b", "2"], " ", 
   SuperscriptBox["t", "3"]}], "-", 
  RowBox[{"3", " ", "a", " ", 
   SuperscriptBox["t", "4"]}], "-", 
  RowBox[{"2", " ", "b", " ", 
   SuperscriptBox["t", "4"]}], "+", 
  SuperscriptBox["t", "5"]}]], "Output",
 CellChangeTimes->{3.762428666409565*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"efe88c24-eadd-4000-bcc1-5bebdd68a81a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"b", "-", "t"}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], "+", "t"}], ")"}], "3"]}], "]"}], ",", "t"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7624286893703184`*^9, 3.7624287293752785`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"80c6e77e-af2a-4f69-802b-4b7d14b3c7da"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["a", "3"]}], " ", 
   SuperscriptBox["b", "2"], " ", "t"}], "+", 
  RowBox[{
   SuperscriptBox["a", "3"], " ", "b", " ", 
   SuperscriptBox["t", "2"]}], "+", 
  RowBox[{
   FractionBox["3", "2"], " ", 
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["b", "2"], " ", 
   SuperscriptBox["t", "2"]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "3"], " ", 
    SuperscriptBox["t", "3"]}], "3"], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["a", "2"], " ", "b", " ", 
   SuperscriptBox["t", "3"]}], "-", 
  RowBox[{"a", " ", 
   SuperscriptBox["b", "2"], " ", 
   SuperscriptBox["t", "3"]}], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["t", "4"]}], "4"], "+", 
  RowBox[{
   FractionBox["3", "2"], " ", "a", " ", "b", " ", 
   SuperscriptBox["t", "4"]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["b", "2"], " ", 
    SuperscriptBox["t", "4"]}], "4"], "-", 
  FractionBox[
   RowBox[{"3", " ", "a", " ", 
    SuperscriptBox["t", "5"]}], "5"], "-", 
  FractionBox[
   RowBox[{"2", " ", "b", " ", 
    SuperscriptBox["t", "5"]}], "5"], "+", 
  FractionBox[
   SuperscriptBox["t", "6"], "6"]}]], "Output",
 CellChangeTimes->{{3.7624286961634693`*^9, 3.762428729764884*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"c80d7ffc-89ca-40f8-b6b3-3504a3963246"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["a", "3"]}], " ", 
    SuperscriptBox["b", "2"], " ", "t"}], "+", 
   RowBox[{
    SuperscriptBox["a", "3"], " ", "b", " ", 
    SuperscriptBox["t", "2"]}], "+", 
   RowBox[{
    FractionBox["3", "2"], " ", 
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["b", "2"], " ", 
    SuperscriptBox["t", "2"]}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "3"], " ", 
     SuperscriptBox["t", "3"]}], "3"], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["a", "2"], " ", "b", " ", 
    SuperscriptBox["t", "3"]}], "-", 
   RowBox[{"a", " ", 
    SuperscriptBox["b", "2"], " ", 
    SuperscriptBox["t", "3"]}], "+", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["t", "4"]}], "4"], "+", 
   RowBox[{
    FractionBox["3", "2"], " ", "a", " ", "b", " ", 
    SuperscriptBox["t", "4"]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["b", "2"], " ", 
     SuperscriptBox["t", "4"]}], "4"], "-", 
   FractionBox[
    RowBox[{"3", " ", "a", " ", 
     SuperscriptBox["t", "5"]}], "5"], "-", 
   FractionBox[
    RowBox[{"2", " ", "b", " ", 
     SuperscriptBox["t", "5"]}], "5"], "+", 
   FractionBox[
    SuperscriptBox["t", "6"], "6"]}]}]], "Input",
 CellChangeTimes->{{3.7624287529414406`*^9, 3.762428762266057*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"d8e05bea-1ad1-4af1-80f7-739743c27f90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "b", "]"}], "-", 
  RowBox[{"f", "[", "a", "]"}]}]], "Input",
 CellChangeTimes->{{3.7624287661611753`*^9, 3.7624287900344696`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"d9aa4bf5-9617-4732-af42-dadcca0df33e"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["a", "6"], "60"], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "5"], " ", "b"}], "10"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "4"], " ", 
    SuperscriptBox["b", "2"]}], "4"], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "3"], " ", 
    SuperscriptBox["b", "3"]}], "3"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["b", "4"]}], "4"], "-", 
  FractionBox[
   RowBox[{"a", " ", 
    SuperscriptBox["b", "5"]}], "10"], "+", 
  FractionBox[
   SuperscriptBox["b", "6"], "60"]}]], "Output",
 CellChangeTimes->{{3.762428770457775*^9, 3.7624287903276143`*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"0b2eada9-e7e0-4098-88af-5ea4669554d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7624288475050488`*^9, 3.762428852056864*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"5e897484-f976-41df-906c-3a07673cc4b7"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "60"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"a", "-", "b"}], ")"}], "6"]}]], "Output",
 CellChangeTimes->{3.762428852264457*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"d0697f20-f7fc-4e99-a3ab-45913815288c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sinh", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7624289117831345`*^9, 3.7624289209397464`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"68d7b2d6-42c2-4282-85ea-9b0aca9d739d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
wauSrA7NcGDFCNur4pAn/G8/gv/tR/B/wLSPLA==
       "]]},
     Annotation[#, "Charting`Private`Tag$122341#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-74.20319543290286, 74.20319543290286}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.762428921265682*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"e6c9e36d-12ff-4005-8b0f-615dc4dddc75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ArcSinh", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7624289923137445`*^9, 3.762429001843848*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"e89788bd-d4a0-4f31-8a0c-451485ad8827"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwBEQLu/SFib1JlAgAAACAAAAACAAAAfedN8v//E8BMD++m338CwOZ7FvXb
/BPAoSJkNaR+AsBOEN/3t/kTwL3CLZRofQLAIDlw/W/zE8AjIYbC8HoCwMKK
kgjg5hPAJkS+4P51AsAILtcewM0TwLsxzxYSbALAlHRgS4CbE8CvukEEFFgC
wKsBc6QANxPAjHCepYIvAsAFZUcyGV0SwEg/DHnA1AHAE9jFbKKREcA9afxe
TnwBwFLDmmMpyhDAidxmmdIhAcB77z1skOMPwIpcfjQQuwDAuHeaaq9PDsBF
lInZbVYAwE6SVSD+mQzADCZlFF/H/79Hnb1OSOwKwEPswP5X2f6/psd51nNb
CcAOD1+lr+79v16ElBXPqAfAk77Vcdvg/L9+YAOuCxMGwJNQpH/K1Pu/AC0f
v0OFBMD8mPol87z6v9qLmYer1QLA+lgP9bh3+b8cCmip9EIBwFeOzYQ0Mfi/
azUqBdsc/7+61V9MaLL2v2M33qjDw/u/OHZwoOUY9b8qeDr/bqT4v5AfReIf
ePO/od1TxHlB9b+hD1TJ/Ifxv+eBFTxHGPK/UeRvQV0S77+6lShF6Fbtv1zS
LYR2SOq/MOnZ9C+d5r+w4l4gdQ/lv0S62wn9VuC/yeid6XNn379wqa/4ERPT
vxri7i6GzdK/VmYjodJ8ub/3A0lWF3K5v4jG+tBYH2q/YgBB6lUfar/XZQ2M

        "]], LineBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAiMb60Fgfaj9iAEHqVR9qPzotwbJQ
l9M/thJZgR5M0z8CdhXcZBngP8W79Y6S+d4/BwxQgWLu5j/KHjj5nFHlP4Pg
1kNyo+0/U+QAXb+A6j+wm4ZQfvLxP1OYJfQw4O4/b6JkEORW9T8ycR+y2ZTx
P15qmh2Hgfg/c+rDLxRl8z+JUXY5M5z7P//3FOwZBfU/BBSV5n/6/j9BgXMo
q6L2P9fLhfCEDwFASJIXSL0F+D9Ve2I2msMCQGQAZ7eSafk/bAvrIs5aBEBs
yHgS/536Px+rxpYG6gVAHywjer+4+z97uENTD5sHQJjUb0YK2Pw/cKZstjYv
CUDDAP6W+9P9PwwCN2Iu5QpA7wsc40vV/j9FbVSVKpMMQPYSazaxw/8/GLkd
b0UkDkDI9HI7UksAQJJyiJEw1w9AlPa/0Qy4AEBShk8tnbYQQHD8UBe+GAFA
KluEVaR9EUAVm7UuaXMBQNbmCaKTVRJAp/4PNYzRAUDOYuVBEh8TQBIGcae7
JQJA4QSn+JUiE0D3iW35KycCQPSmaK8ZJhNAkcSeCpwoAkAZ6+scIS0TQAJ2
+Gp7KwJAZHPy9y87E0C3//UlNzECQPqD/61NVxNA8e9emKI8AkAmpRkaiY8T
QKSO1AZKUwJAOUfb0AyTE0A0j79pslQCQEzpnIeQlhNAKi6TjhpWAkBxLSD1
l50TQBD7Rx7qWAJAvLUm0KarE0AMeS9Yhl4CQFLGM4bExxNAs68RSLNpAkBl
aPU8SMsTQGJqQNMXawJAeAq388vOE0Ck8KEhfGwCQJ1OOmHT1RNAF4pOCERv
AkDo1kA84uMTQCntg//QdAJA+ngC82XnE0CzRn+mM3YCQA0bxKnp6hNANb9O
EZZ3AkAyX0cX8fETQDL8uTJaegJARQEJznT1E0Djn33pu3sCQFijyoT4+BNA
/yBlZB19AkBqRYw7fPwTQORWhKN+fgJAfedN8v//E0BMD++m338CQL48QrY=

        "]]},
      Annotation[#, 
       "Charting`Private`Tag$122676#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-2.312438301249051, 2.312438301249051}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7624290021449003`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"66d897b9-c9ae-4d02-8476-7190a776fc24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Derivative", "[", 
  RowBox[{
   RowBox[{"ArcSinh", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7624290169159255`*^9, 3.762429023391513*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"643caa10-d795-412f-9f65-04a10536d07e"],

Cell[BoxData[
 RowBox[{"Derivative", "[", 
  RowBox[{
   RowBox[{"ArcSinh", "[", "x", "]"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.7624290236878023`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"f564054e-939b-4bec-9011-6153a6bef065"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"Sinh", "[", "0", "]"}], 
   RowBox[{"Sinh", "[", "9", "]"}]], 
  RowBox[{
   FractionBox[
    RowBox[{"Cosh", "[", 
     RowBox[{"ArcSinh", "[", "u", "]"}], "]"}], 
    RowBox[{
     SuperscriptBox["u", "4"], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["u", "2"], "+", "1"}]]}]], 
   RowBox[{"\[DifferentialD]", "u"}]}]}]], "Input",
 CellChangeTimes->{{3.762429224805112*^9, 
  3.76242930299109*^9}},ExpressionUUID->"edc98d8a-bcf5-4546-970c-\
f85a5de35fa2"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", 
   RowBox[{"Sinh", "[", "789", "]"}]], 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["u", "4"]], 
   RowBox[{"\[DifferentialD]", "u"}]}]}]], "Output",
 CellChangeTimes->{{3.76242926393133*^9, 3.7624292942987013`*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"fed97bdd-b08b-4298-804c-2dcd1cbcf3a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<1/(x(1+x^n))\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Indefinite Integral\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7624297389793067`*^9, 3.762429760075672*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"1774bbb0-fa12-4569-9c36-9213eaf0cb43"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "1/(x(1+x^n))", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Indefinite Integral"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Indefinite integrals", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[1/(x (1 + x^n)), x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   FractionBox["1", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["x", "n"]}], ")"}]}]], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    RowBox[{"log", "(", "x", ")"}], "-", 
                    FractionBox[
                    RowBox[{"log", "(", 
                    RowBox[{
                    SuperscriptBox["x", "n"], "+", "1"}], ")"}], "n"]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Take the integral:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["x", "n"], "+", "1"}], ")"}]}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    FractionBox["1", 
                    RowBox[{"x", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["x", "n"], "+", "1"}], ")"}]}]], "\",\"", 
                    "\" \""}, "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    SuperscriptBox["x", "n"]}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\[LongEqual]", 
                    RowBox[{"n", " ", 
                    SuperscriptBox["x", 
                    RowBox[{"n", "-", "1"}]]}]}], "\"\[ThinSpace]\""}, 
                    "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "x"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    FractionBox["1", "n"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"u", " ", 
                    RowBox[{"(", 
                    RowBox[{"u", "+", "1"}], ")"}]}]], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    FractionBox["1", 
                    RowBox[{"u", " ", 
                    RowBox[{"(", 
                    RowBox[{"u", "+", "1"}], ")"}]}]], "\",\"", "\" \""}, 
                    "RowDefault"], "\"use \"", "\"partial \"", 
                    "\"fractions:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    FractionBox["1", "n"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["1", "u"], "-", 
                    FractionBox["1", 
                    RowBox[{"u", "+", "1"}]]}], ")"}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}, "RowDefault"]}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Integrate \"", "\"the \"", "\"sum \"", "\"term \"", 
                    "\"by \"", "\"term \"", "\"and \"", "\"factor \"", 
                    "\"out \"", "\"constants:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "n"]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"u", "+", "1"}]], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}], "+", 
                    RowBox[{
                    FractionBox["1", "n"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", "u"], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    FractionBox["1", 
                    RowBox[{"u", "+", "1"}]], "\",\"", "\" \""}, 
                    "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"s", "\[LongEqual]", 
                    RowBox[{"u", "+", "1"}]}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "s"}], "\[LongEqual]", 
                    "\"\""}], "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "n"]}], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", "s"], 
                    RowBox[{"\[DifferentialD]", "s"}]}]}]}], "+", 
                    RowBox[{
                    FractionBox["1", "n"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", "u"], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    FractionBox["1", "s"], "\" \""}, "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    RowBox[{"log", "(", "s", ")"}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"log", "(", "s", ")"}], "n"]}], "+", 
                    RowBox[{
                    FractionBox["1", "n"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", "u"], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    FractionBox["1", "u"], "\" \""}, "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    RowBox[{"log", "(", "u", ")"}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"log", "(", "u", ")"}], "n"], "-", 
                    FractionBox[
                    RowBox[{"log", "(", "s", ")"}], "n"]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"s", "\[LongEqual]", 
                    RowBox[{"u", "+", "1"}]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"log", "(", "u", ")"}], "-", 
                    RowBox[{"log", "(", 
                    RowBox[{"u", "+", "1"}], ")"}]}], "n"], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    SuperscriptBox["x", "n"]}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"log", "(", 
                    SuperscriptBox["x", "n"], ")"}], "-", 
                    RowBox[{"log", "(", 
                    RowBox[{
                    SuperscriptBox["x", "n"], "+", "1"}], ")"}]}], "n"], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"An \"", "\"alternative \"", "\"form \"", "\"of \"", 
                    "\"the \"", "\"integral \"", "\"is:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    FractionBox[
                    RowBox[{"log", "(", 
                    FractionBox[
                    SuperscriptBox["x", "n"], 
                    RowBox[{
                    SuperscriptBox["x", "n"], "+", "1"}]], ")"}], "n"], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Which \"", "\"is \"", "\"equivalent \"", "\"for \"", 
                    "\"restricted \"", 
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "x"}, "RowWithSeparators"], 
                    "\" \""}, "RowDefault"], "\"and \"", "n", "\" \""}, 
                    "RowDefault"], "\"values \"", "\"to:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{"log", "(", "x", ")"}], "-", 
                    FractionBox[
                    RowBox[{"log", "(", 
                    RowBox[{
                    SuperscriptBox["x", "n"], "+", "1"}], ")"}], "n"]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                TemplateBox[{
                  RowBox[{"log", "(", "x", ")"}], "\" \"", 
                  "\"is the natural logarithm\""}, "RowDefault"], 
                TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "IndefiniteIntegral__Hide steps"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "Math", "timedout" -> "Plot", "timedoutpods" -> "", "timing" -> 
    "2.8040000000000003", "parsetiming" -> "0.417", "parsetimedout" -> 
    "false", "recalculated" -> 
    "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa138818427ae6badg0h1400006272g69103bheb673229248315270249252", "id" -> 
    "MSPa138918427ae6badg0h14000016ag79ccbi0057ic", "host" -> 
    "http://www4c.wolframalpha.com", "server" -> "51", "related" -> 
    "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa139018427ae6badg0h14000034g06gb558d258fd3229248315270249252", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2019, 3, 24, 16, 22, 57.4179286`9.511622354595662}, "Line" -> 
    80, "SessionID" -> 33681050585085282212}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "1/(x(1+x^n))"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1175., {1271., 1283.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.762429777567365*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"bdce4bb8-b607-4d6a-b8e7-dee66f88b297"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"2", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762430512783877*^9, 3.762430521980542*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"db792ef2-29bc-4577-858a-afef48825e04"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$127803#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-0.99999994920722, 0.9999998271013036}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.76243052255865*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"0105dd09-0a1c-4a57-918e-1b5a59b97a7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "-", 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762430530043171*^9, 3.762430545382167*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"3ba5324a-df1e-4bd5-a303-271e16fa7648"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
hM9Sz29576bUwkP//38f7MKstF7Obx76P6C/AME=
       "]]},
     Annotation[#, "Charting`Private`Tag$128467#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-1.4142133254783267`, 1.414213554750177}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7624305419314766`*^9, 3.762430545744169*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"8c5a04bc-e3bb-4522-98d2-3ad347a94c9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"Sin", "[", "x", "]"}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.762430594541482*^9, 3.7624306004099627`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"808204a6-af5e-418a-82d3-601161e94510"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Log", "[", 
    RowBox[{"Cos", "[", 
     FractionBox["x", "2"], "]"}], "]"}]}], "+", 
  RowBox[{"Log", "[", 
   RowBox[{"Sin", "[", 
    FractionBox["x", "2"], "]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7624306006824512`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"0e618a6c-cdf6-4812-80d0-866bf42d30a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"Cos", "[", "x", "]"}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7624308741369133`*^9, 3.7624308751523447`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"682f6f8c-79ec-435f-af2f-618a45da8420"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Log", "[", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox["x", "2"], "]"}], "-", 
     RowBox[{"Sin", "[", 
      FractionBox["x", "2"], "]"}]}], "]"}]}], "+", 
  RowBox[{"Log", "[", 
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox["x", "2"], "]"}], "+", 
    RowBox[{"Sin", "[", 
     FractionBox["x", "2"], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.762430875492792*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"d6621378-652f-4adf-8aed-2d863d9e2752"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762431077442947*^9, 3.762431085722335*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"0d185925-ab8a-424f-a545-b3e466b49bb4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw1mnk0VV/Yx83uZKibMqSB0vCLlKFE7V2SlEpIaZRMRSShIg0USaMiNBgq
ogEhTZ4tU4ZEhkSmcA13OBEZEu9513rff+5dn7XvWXvv7/f7POfsu85cRy9r
ZwkxMbGV9Mf/fp/p3jIwOcklnuKbHoQs+Ip4AdOHmsa5RN1ON27bcDXaqtg6
/HqUS6bOqw1RKKlGc4yO/fP6zSVZP2zveLpUo4/htxhtPC45+zNb+OxRFWLo
fJtFPnPJuoujFpfXVKLbJxw2n4vjEqdiO0dntU8oTdznkdgKLqk7GnI8d9dr
JO1svlxl31TioZorZSoNwG0o8ki8OYUI3RO6/efVgnVB7KFFZYrky7Bl/fKL
rTCvtrOlpFiR7Oo//cM4qxX+dOrsdilQJEelzU10OlohRqbAKum9IrkdY7XW
dU4btFnwV6u/VCS1sx/lB55pg6NVxspTbiuSr0nLF3katENY84+KkX2KRGv6
MauRuJ8QQK32uNGhQEJjf08Y4C64d3BFD25WIEb6zQXyNl3wvkbXqb9egeRt
5Zk2OnfBxGvNvdZlCqTlevQGiytdcOEc03JahgIxucWecqmuC8Kn1P13N0iB
aAn9Uo+58iBWz4P/UEWB6Pb567071w3vHju7WnEVSJGYxK66m93wY8aBDjE5
BfIsW+prW2I3zBrf3nRQTIFEnVe8V17YDYmFK8o1u+WJ17orBynZHni6QzIt
OUueDH9/F+typQdy/WOPvNwmT3zqs0crLvWChpP344aN8qRqelvtuuheuGq1
sU18nTwpj3Ecf5zcC46L/uyw1ZcnwoYoMf1PvcBu2r52VFmeuAaX3TzK6IP9
a5jKpj/lSH2byWPLi30gKX2yqP6EHJGZeNHmfowPnv1bxcQ85Qh77b85vkF8
aGieb7zIVY7EfLtrcSSCD89yatID7OXI/dTRxcopfLBzW3pvzho5cmu267Tz
LXxIKecdPyIrR+Ljin8GmQtg660dcyZiOGQ8cCy0hymE08sVLMwjOcT399Je
LSUhPPn6yftGBIcEh82ttJojhImpJgUaZzlkYm2NpKuhEJ5HariYO3HIttqv
ZvcOCoFzh0q7ocMhfXqy1zWzhLDS4Gnt9wUcwjDSuDc9TwhOdY7/NOZyyFHT
sezBEiG8V6rfms3lkJxijUHvJiG4R73v/z7CJtxHe5q8xEVQFn15hWYBm8js
2HPNx0IEf1aYOni8Z5PDYylm06xFoNEwHpadzSZaQb4JD3eL4LTysUbzFDbR
0w/V8XMXwaIYuzMeV9lkYGne6NwIEYTFahZk72STYP9HB7xKRZC1qpk/YcUm
Iaeyn7+uEkFbY9S0jZvYxPHaFPO+byJYqcZyaTRhk5TE4+byPBH0xP1iTM5l
E8RNGbQSp8D8/oetGwUsErOwoP29HgW/rv4Yl+KxyN89f0LXGVEQG/Q3Nb+V
RYw89NjZaygQHDCSNa5hkauLAuMcLCi4pZEN2m9ZxHkgPax6HwUm3Nqjfa9Y
ZFGTxfsPjhR0Sf5WS37OIlnrzr2KcqVgZZfuyTkJLDJvCtUm701BS/IzXW4Y
i6xEEd0zgikIu1ve8uU8i/AM/boPh1Kw7HJfREQAiwSWB99OuUJByJGFvdJe
LBIa95zPj6RgsfajhJEdLJJ5bOvG8CQKatULtmVvY5H/OErua5MpOCP/85+3
BYucsQpY0JVKQRU1ezffhEVMQzc4DWRQ4JcZN7VFk0WuSVplagIFc5Leklh1
FrnJNHJBHykojfzuuXMGi9x7aZhkXkTBTN8Z5VUsFhH/wslQL6eg2Nnw1FUp
Fqm/uz2I/5kCL7sdCzZNMMn3x8GfH1dR8HFFZHBBP5PkRbD5rXUUeCzMXHaO
zyRvLbRzDjRQoKRS3WrSxSTsqbXj5Y0UuI3Jm+Q0MMk6lYo/h1spkP8QPpgC
TELdLvB7101B7vOnic5vmORT2IzhB70UHHzwyUrjFZNYBOzv8eRTkHVW5nnc
EyaxHT2gUiuiYP+x+Xt2xTPJo8/SOw//okD24HqmUiyTeOr5ivP7Kdi97oLz
tatMMs2IHfNqkAIpvQTu5lAm+at2JmRsiILnmiRf9jyTnJ6x7bv2MAV201q9
Ck8zSdyXwqgtIxSISU+onz/BJLhP+739KAWpQzMrVnsyyTUF3kbrMQpseMan
x1yZZFefrcmKvxSM1+9e+Pogk/gsFN1hjFPwpORUvc8eJlEKWLajmOaY5X6m
T22ZxGB+oOjMPwoi7h9Pb9nCJLlPJk7NmqDgLMNLfZo5k2huMRtOpvm4j3u4
Bab3Iyl0Vp2kwLnFdTjIiElsrJOKfGneZeHklLWcSYIdtKa/pXlTlkN1739M
8m1g/c5umlfP3rdm9nwm8fNoCftHs264fZrtLCbpq/yZOk6zxtAO5fAZTLLk
rfWHTpqVHKwvgiKTJHogkk0zo3zrwCCTSVQKyl550fzXYPOBxZL0+MoFd6fS
LIo3rzgwziAnedFHH9DrbWevN7ozxCBlwcf0uTTX+uEnZSIGOeusJDxG77ek
3YQr1sMgojN/o1/Tery1NDpn0M4gV/emGHTT+j1/bSA80sggV7QziydpfeM1
lu+Or2GQw29gszjNkVd1SuoqGCTIKayIT/tzaWSxPruYQfx0avWB9s+9UlPe
L5dBBBpuw3Nof/cbzQlIy2CQ6VaRli9/U2D1aGZPWyqDqMbLxmkNUGB4Wunj
5vsM8tB448IqOk+LuqYsPR/FID8sAg9LCOl6sJK/l3OdQV5OfEpRp/MnoSXr
N/cCg9huWr5Agc7r0A3JDrsABlmx0fhwVycFPX8nt0WcYJDXuQYvH/2koLJ6
ZNGwC4N4/L26paWZgnyToaglDgxi/Xrv011NdJ6T+yUd7RnkQ86Ewnu6XmLO
9DVXbGaQSXtb6TU1dD56eJskzBjk9Lp/0Xvpeguy6Xi9Yg2D9A4eWu1E16PT
oh83E3UZZIDJLtUpof2t+2x2UolBNhTkaWa8oUATl2U+l2cQO6X2K8o5FExP
K57dIUv70/VC5XAmnddzMLplTJYUy/9LL6L7R8mSjOearbLkzPrPM4/G0vqF
3Fb6kiJLlOOP3/L3pfeD/sieTJQlZ18fLf90jAL0d+fYnHuy5J1otZmMB91f
jqu1Hr8uS1odD8huoPvjzwOJKdP9ZIn8Q9eZ37dQ4GKcbrzfVJakNi1ws5pL
Qf2fKTqyq2XJtEdrdV3V6H6d6TMn3VCWsG9WeR5RomDhohXSEotlydZyp/2G
TAr6pudVPlaUJRnns306KRF4DpQfFDbLkDcfQ8XvvxFBy3Nt26hvMqTFdkj+
TKYIth2+vgFVy5CB3Pe1Fmki0G2z/u9moQw5/D4g7uk9EQx8/j6onyZDivqt
oy8EicDvaXdo4EkZ4jKcEfhgjQiCHCRfsLkyRFVgrJSYLoT0L+bXajkyZJvq
rSbrZCH8XBPheV+Gvj6j4l3/fSFsUFdaunRMmsgsfNg2Gi4E+UatdOt2aSIh
1bVX30kID2w2Zca8lCZP8sMtd3KFABtu5iywpMfjSuPOOQlgILsu6peZNPm0
pdpZzF4A8+ar+r9B0uTFqstcry0CCJNMWrFZT5owm8UNVQwFYEWycj1VpYlc
0Ox9CTICaDNqeJvdI0X2nf11MfQRH8S0Z4PpRSlyw2ZKV2tNHwROX7v/YhA9
fuq0skZRHwxPOv4r9pciey31N2zP6QPR1yfGm45IEZmGgrd+d/ug6aROrtU2
KVKBDi9v3dMHOYWrM/apSJGoX3salrb2wtG9e5P8n0sSnWO/o2Y19EDjlZjQ
tDoJ8uK2RETVHR7UFM155vBFgnT9SegcDOZBxWRylVKpBFlwYds29nEe5Pnk
qJx7L0HOOS4Lld/Kg8Q9NWm2SRJEW8bvjZc0D478J1f175gEMX4qLpvs3QV/
y84pW3EkCDNMf8AId8JMltvTwXXixEH5TMiN3HZwN1gs3TRzEtqeRDwX7PsG
h1a0pBQU/AXpaYLyv0OFsPjkqknPRyNge/yDTs3Bhyih2abw1Noh4H1D7yJz
KlH3eSUTc+UBEC8wD3uCm9DbOwvNeuyEwI0cybfx70CMPd2HxE2EUPF8ZOBJ
RAeym/PkgupcISRZ91sLEjrQQKomseQLIHXy1aEtFR1oEZllnHFWAIYfx+e7
zulEd/umLTtNP/ct22SxSlDUiXyRuDpnrBcK99vM+SbNQx+liPF8Wtdn2xJr
bFR4SLEsaPeawl6oa0jsIUt46JntePSxa72g29sg5mHDQ52Hh6fWafRC0jc3
D6l4HrK+LWQ82NwDeX+Ouy437Ea6vd8Hl97nwYXqUvEFdj3oxC/tRTNCeBD5
l7PW3aUH5Q6f3zdxhAe/HuoHxfv1oLUyi4srVvLA8699WXNUD7LWPB19uLYL
FNXm3kms70G++1RXJbG7gP/bx8PSphe9rd59dvrpDrDz9qxpwX1oouHFq38O
HZDxSsFAd1sfWtcm0dNp3gGlDgOu3vv6ULko1eqVUge4PvCZVXCqD/1g/51r
lfETatp2NyVm9KFJs7jCyz3toHr0iLrlLD5a/7aJ+c+uDc551czi8PnoRepj
oxLjNvhM7d6xdYSPlOO8Dt+kzzXzdF9aB0oLUP2wzK3Nta3w7/iLgLjZAjQ/
wE7x/lgLeB+pPttlLUAfzw9xsHkzMP86msdnC1CU42WPWsVmmF9/ODI2X4AO
m6pXuDX+gPLTGdPOfRYgRWmzKzeP/oBb3NTbnC4BOhB2m9kR2QSt79TvL+YK
0fg1PZlLbd8hVSH7ro+7EFV5lTirpn6HjqL07ep+QpRktafohQ89Pur2IeOc
EG2aGhzyTeY7fJly8VrsHSGKufNVYpF2A5ieZJi55wmR4T3vyfJT9ZAwKp0k
wRGhY09fjkzh1kCi43S771EipCvvGbyu7SsYqEwEmj0Qof7jS+R9nn+FSB3/
nQ8ei9Bxk6eateZfQTYladr0LBHy/ZK4NSqwGtSTjZepV4nQ777/LAwqvoDz
KV2tS1IUOpGVsj/K5Qu48HR937Eo9OfM/BPDYl8gp9dZr1mRQiOKsx++MaiE
uZ5Soq6ZFBo3nDq0+mEFvFnGG2DrU0gmeCR+w/FS+DfmrZq8n0Khlr45yZxS
uGovmZJwiEKM6QPljORP0MEjHmFuFGI95f8payoBj1Dv66rHKaTwpcVym1kx
rG5exbMKodCNu3sc01uLYKO32/dnYRSa6tjgP+V0EdT+dRMMRlBo2lB1Ys2L
QvBQmudqcYdCympFIzuVC+BBGMNV8jGFYjrXyr/J/AjCneMKJIVCqi/yNFW3
fISyB1cK3Z5RSH1t7tYf5/NhytVt5kGvKGRaaWeRXw8wnj3g+4ZQaMNBqxPB
bABd1q/V9QUU2jho8dAM59H3PT+x1mIKWaquHip9+h60bwcfzaqgkJ2LZsLX
wDdwf1g32/MbhcK9fcJuZedC7LvCqpbvFPoQWOBlLXoNtxqa4o1/UGhe5KE1
Xw/kwEJT3q53bRTa9eDV/Ft3s2Fz6+w1LT8pdOWppJx1dRao+Rz+Kuyk0AAk
NVWvewUnqowka3oopFX+++PNgExoDXG6n9JHIft609TtWRmwiNHdfkRAISLo
OFk9Px3+arx3zqYo1EO5Eo0PLyBhl2LS6n4KbZNhXE/UeQ63Y+FS5gCFZult
XJI4JRUaPF6tdhyi0EWLnrG5wSlQc3Cnwv0/FBIcCCtNGHwCntpKIYXDFLLx
W3h3rstjmFlrFNcwQqG3EZ9cEr4lwRWlWbbfRyk0N8nNYK5FInCOar0oHqNQ
2BuGVMLbeKCmFKTE/6VQy8Ptj9fuegCNw16mruMUel5xc91a4zhQ+5J1RvUf
hQJGq1vxrLvQLzV/51uaLbSmnsHid6C04MCXDRMUmmFjrYo7b8LZ3wo8oLl8
cp7X2WtX4bqRIHb+JIXc7B8/DbINhTWjOUJ/mqVeze88o3oeSmzWtOTQjFUs
V48RX/BeuNfjJ82/7sY49cc4Qtq0P9FjNAdK3C7asNICqZ345zBJs07soZJp
hl4oxcGr5BfNLSoZIrZCIPLPtC2vpNlGr+H9pbUhSDCZ7xFDc873nRdCA8JR
zP1vaVY0yxG+ZuHuG0j7QX7YIL1eFJl2qdA/Etl/fS15kWZvF/fewttRKPXT
v5kSNCca/WdZlBGD3D7/rHWn91/L4b8oqryHDvTl//eR1kumLXVKMf8hSuWJ
a0jTfM/eYNWhkATkt0EpV5/W18D0jnvH1CT0YdNpkRWtf+WSoXuHEh6hP7/e
FtHnFyQmlj15KC8ZPSxaZr+M9jOmd9qyTsunyCU2Z7oY7ffymhOOTk2pSHpf
lv+7QQo5PdEvchp5Tu9v5YIROj//rt/+03npJZq6x8P/1C9af5OxyMzwdFRx
19uzW0T/Xmt30XKVTBSfVG57mU8hXTVWy/G2TNTzcvGGD7309Qpv/2Qmv0Lt
asd+NndTKGpUZaGeYTYqcDOd09VBoZKK7+F6NrmoPCu9ht1E+3mysWTPf2/Q
Q4MVBsca6H4yr0kqRPItSpby+/mhjkKbAn4E1b56h3KcmxcoVVGoYlHrcd9p
gIJHNe6+ouvXo6715X0BoP92lt1wpOv7Ej72x9GRoKWqVryx9xRaIDimd2VV
PlpV8D6jO5uez/T486a+j2iqJXtq5hMKrYwZKKfsClCt/3yjZ4n0/NTxPsmC
AvRt1PLr9QcUehrrs2BJXCFaYXXVhRtFob7+EwmBm4vRO8kGDw7dzzzi/e+o
PytFrFX2dZ/2UMjkz/CrZcplyHz/9Pg9dhTiWJ78ahZSRteVBbfBiq6H4ZMK
nnvL0Uh7o8Q1MwqJtp6+nMf5jA5wkk+KtCmUG5SX99KwCtnqNl64OCZC8U8n
Pr/xqELxq72+ZP0WobDaNc0FiVUo/ekXVqVAhHYthr/f5KvR7Mr0g3ktIjRa
ByvFuquRvVK0enS+CK3Szs+0iq5BE3XuntrBImRQWx+VV1qD2se7ITyAvt8E
CE4vGa9B67/smVfnI0JapTNMGQdr0drUPUbLnESI6+xZA4vrkPK+xzNl14uQ
4J7aoE5ePWrykjLUEROhhxw/A7mu7+jjzgcXrh8RothXV1QCZjSil8b83TEO
QhS1O+Ffj0UjChtsGrphJ0QRKRVFhS8aUdXXBxEW64To5HpNu8CTTWiRyQ9R
m7IQWQdW+fHZzWi6Qpr+i48CJOGn9MNJpQ3tl3G4MMAQoN0OqV9z9dtQc3GB
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
cReZhQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$131435#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-0.9999999567753249, 0.9999997038208933}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7624310863686094`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"0bac826b-c656-472d-a4cf-3666e0f3e65c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{"x", "/", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762431099459123*^9, 3.7624311044803867`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"5fdb1f36-28f8-4dbe-a25c-dee4dae77b89"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
VPIw
        "]], LineBox[CompressedData["
1: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
Vvr/pvpQdN/WQbWagjhXYVZaXx/6FyAIfrs=
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$132998#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-8.54505781210432, 8.533356863965807}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.762431101936276*^9, 3.762431104830485*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"c1cf44dc-eb7c-4f15-a0bf-990b0c07772f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Tan", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7624323602241793`*^9, 3.762432373568956*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"74db7532-1c80-4d42-8ba1-dc65f786019c"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAfedN8v//E8AmegbITAsLQOZ7FvXb
/BPA5TCQ/y1aC0BOEN/3t/kTwFbCQTO7qgtAIDlw/W/zE8AP2cvMElEMQMKK
kgjg5hPAFwuN1Wy0DUArH1sLvOMTwFxfTCNgEg5AlLMjDpjgE8DxiXh4hHIO
QGXctBNQ2hPAwFZOlbI5D0AILtcewM0TwAPv0zQQcxBAccKfIZzKE8A0IWnm
CKwQQNpWaCR4xxPAXeTWTHvmEECrf/kpMMETwAJM+6sKYBFATtEbNaC0E8BI
pGkus2cSQLdl5Dd8sRPA8UfaL1SuEkAg+qw6WK4TwN6LO7AC9xJA8SI+QBCo
E8BbvKYQ6I4TQJR0YEuAmxPAy3R7bsrbFED9CClOXJgTwJ6C7lbFNRVAZp3x
UDiVE8DTzJXauZIVQDfGglbwjhPAkUOj5i1WFkCgWktZzIsTwIXV0X8DvRZA
CO8TXKiIE8CCXqdVfycXQNoXpWFgghPAoDwHNDoIGEBDrG1kPH8TwF55IFvr
fhhArEA2Zxh8E8DM+U6/J/oYQH1px2zQdRPAg7xHsVr/GUAgu+l3QGkTwGYq
CW+rTRxAiU+yehxmE8CaooUtnPEcQPLjen34YhPAGwF3/P2cHUDpQAv3Ll8T
wIYY+wZpeh5A8IrYEw==
        "]], LineBox[CompressedData["
1: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
p0/Q
        "]], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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

        "]], LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAOQhtVqheE0CQEhzhX5YewEUMBolc
ZRNAlQFpqdQZHcBYrsc/4GgTQJ8jkuvpYBzAalCJ9mNsE0CstRHDybAbwJCU
DGRrcxNAAn0ZkYBoGsCjNs4a73YTQDDpKqBFzxnAttiP0XJ6E0CQikl0rjwZ
wNscEz96gRNAeNg1rMApGMAmpRkaiY8TQL+hs3cJQxbAOUfb0AyTE0B3KNC+
xNQVwEzpnIeQlhNArO9EIo5qFcBxLSD1l50TQFzIA/hroRTAhM/hqxuhE0Bo
Te6aGkIUwJZxo2KfpBNA0SxYDQvmE8C8tSbQpqsTQEMNpwgKNxPAz1fohiqv
E0CqswLHy+MSwOL5qT2ushNAvt3HTTWTEsAHPi2rtbkTQMFWqdJ/+RHAUsYz
hsTHE0CZ+aMr3eAQwGVo9TxIyxNAkKdbirefEMB4Crfzy84TQP0wDv9mYBDA
nU46YdPVE0Apb7187c0PwOjWQDzi4xNABFfHHt0NDsD6eALzZecTQHdrbuH7
pA3ADRvEqenqE0BrTtoAvT4NwDJfRxfx8RNAp6294cB5DMBFAQnOdPUTQNPk
lAzUGgzAWKPKhPj4E0AftaU/Kr4LwGpFjDt8/BNA3eY2fa5jC8B9503y//8T
QCZ6BshMCwvAGOffFQ==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$133330#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-7.646850125635538, 7.619541272235557}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7624323739151735`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"4badbba5-d0be-4b18-a2e8-ffe1f0bc5281"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", 
     RowBox[{"Tan", "[", 
      FractionBox["x", "2"], "]"}]}], 
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"Tan", "[", 
       FractionBox["x", "2"], "]"}], "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762432376627326*^9, 3.7624323889620028`*^9}, {
  3.762432484670676*^9, 3.7624324851130805`*^9}, {3.7624325480732365`*^9, 
  3.7624325488260193`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"f7715b04-9d07-4197-880a-7d4dc6590fc6"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAfedN8v//E8AkegbITAsLQOZ7FvXb
/BPA5DCQ/y1aC0BOEN/3t/kTwFXCQTO7qgtAIDlw/W/zE8AQ2cvMElEMQMKK
kgjg5hPAFAuN1Wy0DUArH1sLvOMTwGBfTCNgEg5AlLMjDpjgE8DwiXh4hHIO
QGXctBNQ2hPAv1ZOlbI5D0AILtcewM0TwAPv0zQQcxBAccKfIZzKE8AyIWnm
CKwQQNpWaCR4xxPAXOTWTHvmEECrf/kpMMETwANM+6sKYBFATtEbNaC0E8BI
pGkus2cSQLdl5Dd8sRPA8UfaL1SuEkAg+qw6WK4TwN2LO7AC9xJA8SI+QBCo
E8BavKYQ6I4TQJR0YEuAmxPAy3R7bsrbFED9CClOXJgTwJ2C7lbFNRVAZp3x
UDiVE8DRzJXauZIVQDfGglbwjhPAkkOj5i1WFkCgWktZzIsTwIjV0X8DvRZA
CO8TXKiIE8CDXqdVfycXQNoXpWFgghPAnzwHNDoIGEBDrG1kPH8TwGB5IFvr
fhhArEA2Zxh8E8DN+U6/J/oYQH1px2zQdRPAg7xHsVr/GUAgu+l3QGkTwGoq
CW+rTRxAiU+yehxmE8CgooUtnPEcQPLjen34YhPAGwF3/P2cHUDpQAv3Ll8T
wIcY+wZpeh5A6ELYGg==
        "]], LineBox[CompressedData["
1:eJwVk3s41fcDx90Ow7l8v1/nIJTbCZNLc0ILpdpIoeO+Ibek31NWqbWoVrk+
TNpxyaVUU6FRa9HzKNU+73Ykk43fKvcjOxZnHBnLiZh+/f54P6//Xq+/3pYJ
+4N3aaipqe18v/8z72RlyqZQBoWM2R+xpSvg5j/1KF7MYG1vwFcbG5ZDw6dv
XBTAwPK6zOmF5nL8tkHK097K4JnF3dBVO8yQJCr7vG4zA9deE4d+oSlcHNNP
HPdm0BS9MyO6yARLNnuvBHoxGEkLSGlnmaDMZMPkjBuDA4VBkax/jdGmPnbK
w56BzLYno0ZohJKFrmqO7Xuful/ewh1DxM02t7+wZtDd8OOkfpAh5hVn+FnL
GYj4D0Yr8wVolad+HG7CwLxBUtriKEDRYEKMnRGD+bTakNnf+bDvcrvWQTFg
Z3asG1rJh+oXi18vchj0vWjzC35qgJ+lejMH9BjsdYh47pNpgKimIQ+BFoOo
/KND68cZnL6Y07njDQ0brr/vlf/S+Kz8wGvn1zT8Zjc6+EhoCIsil2lM04gw
81xZL6bxINtpZ804Dbv8zj2Huim8Su5WvZLRGBOerUhR8NCcBNOH/TS29ior
vE/wkBNX513cQ8Nf7sj/zpAH89AT37i/7wS4fvL9rUAuxB42K0610Oh8o1Hb
0seGmSu1OfghjVFl3FBjOhsKp7e7hT/R0Dl+LUWyio10q99utTXR0PrnSH1X
lj4adL/6lK6nodweW9+xTQ8GvY+SLxfSKNBn3S60+ABYVZWbdYbG1Armtqtc
B8knj19NyqfRqHvVff6qDlptRIP22TQyAudsiaMOjh7+bltjKo1ih1ZF6jZt
2P5ybPfZwzRc8hZ0/QTaeGYWkXnkII3c8n0hasMsOLVw7nkk0/DUtqpnp7Ig
Z47Zt8TSqDjFP6zeoIVvk8J9aqJprBO5hO/L0IJn80cJuZ/TsLb4uassRAul
8YoK/xAaOS9xmDunia0/huk+96ERnXdNYuCniYaA1YqXjjQCBYsFjh9oILZK
X6vNnoaVhzgjV64O9uyoeZ0tDeeA6827HqgjqfJCxD5LGnvuZg6e/1IdJhN6
j1V8GilH9u2/oVBDRu7Lap1FCoWCNL/a9nfEeRAP/5qjUOnjaxBe8I4MOlfK
nsxSqIk1doT4HXHrCRZIpig460bNNPUtkfGVyDIeoeB2X2Lf/c+/JFh6bueH
7RSUnM1efJ9FInz259DjVgqma/TeVnMXiepPp8gkKQWbsGHBQM8CqdCWiq/c
pzBsspGxTl4gw34TXstvUsgqiRnrOf+WfNHlYUyXUFBLS8s9Lpgn6//ILr4p
oVCXppCrRucINdPJDSygMCF6rDlxZ47cNkhk5edQyLYzFK2NmSNvw0/PaKVR
MCpzNXH64Q3JlQ12zO2gYBnoFDYeryKRr2y2lEVS4GdVeJitUxGHdwekrhEU
hg6pOdczKtJpwWo+KKYwL+WH9LfMEsNEx1rlJgonvW70hznOkivjX6cP21Io
uVN88DznNTk25ZUsGeFhbWmHKFlzhlTGuyu8ZTw8u/fKfGx0mtx/ujpxupuH
m95V7iXt02SpyTo6uJ0H12urgzKKpknGKV1//i0eWOm88krhNPmGfr6q/P1v
hhp7mU+D/ibnRMkTl5bx0KiSe+8vnCT3qnftFhvwsPte1NyjhEkyaBQ7osbh
waBGc1ncmkmyYjFoIF6Nh2yu4RdRvUpyucX9ifUYF2cuK+WfWSvJ92Ga9bW3
udDfMP/6Scs4uXPk3J6b27nYLjyqP79aQawSU6p7t3ARLZVHGmkrSIF4y7D6
Ji4eZrUVJg+MkYQPVWGha7gotVsyvZszRvQHgjbOG3NhaF+naHsxSmLW6xpv
lnPgE3cp3fP8S6LJSn3U/SUH5bnb/rokGiGBRWEWSxVsuIyFcvOqZOSoC8/P
t5iNT1a26v8nTkZqfm9LkZxmY0jFEaaZy8gS4ym1OsmGqV90iPPFQXKj2CrJ
N5GN7ZmhZODCAGGfnaqXOLHxd2229G51H2kvy3O3lurjjEao+szT58T3woPA
LUo9VAn2RzVZ/kpqHqd1H4rSRd31/hLnnypJ+95U+0w7XVyoTLkYY76H/A/x
JQfd
        "]], LineBox[CompressedData["
1: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
Uf70az8ipXYe5KBEBQ79SpQa/D+ik1BF
        "]], LineBox[CompressedData["
1:eJwVk2k4lH0fhm3JMraxjS1bJGWp7OR3a5NKEVGyFPIUQpt9SclTlvakKKlU
tJCiSP43qeSpJENlnbEMgzGLmXsky9v74Tqu4/p0HteHUz84eucBMRERkZa/
+X8blIxbeMkJ0SWyNj0obwnOMP24n88jEOwcNrXT08GTL3bnHBwm0L2GVUev
HtbGyQT7Vc8PArVmUQyN3mnhzg0U+fd1BDpjO8KtztDEqcZm9vblBAopHHiL
2Bp4eI5L6NNiAjlFd72T3q+BX/MNr72WSaCCubm4bm8Kbvo2dVg6gUBTGbSz
LzrVcdzgimJqBIGs1jSoRgao4xOsN2FhHgQq9a0POBCvhm/IkFO21SQQxTm4
uatXBe9i6js/JhHI7cZsEStNBY/ZYXNId0GAaPbvpvWNVPACzSC0eEiA9t7R
MtsZr4zzKioifj4VIO12GQ+SMxk/q/Y+b9sdAWpaS7ffKVDClyT/asAvC5Ds
8lbW62dK+BZXMUppnABtD3zjnrVMCS/u9WpKcBEg/fJRV465Ir56aPUM1UqA
cs5eLTzMVcCbxpQsLU0EyKJ0oOr2vwo4Q9hawJAXILJeYnnWG3nclLztmFcP
H9V2LOukgBz+hrKi9FkrH9lG1cpuGybh23Rl+qXf8ZHlz27HxFwSHrWyeQte
ykeavffcMgZl8cpNGwzM4vhoDg82vnNfBl/vbrj7bDgfhUtz44jdMjjVS+z8
YAAfObVGlX6Xl8GJffjvGxv4KItNWspKlcYdk5zaJMl85DYdWRUXLYU3lVud
pD2ZQrcXijbdPCeJ76pWrna8M4WUOg+R8j0lcUYdbzzvyhT64eX5OEtTEpdq
qfB1T5xCwq3hjVbli3D3oZUWta5TyJH18yZ/QALvpBj1XRngoVvvPy7PiBbH
/9GVUGF38NDVJc11VhvE8WmjQbctn3joK7mPe1ZDHNdcU1wlUsFD/lF7zOQ+
iOGB7jq5h1N4yDk2/Ja+sRg+kq7q5ErhofZu3oUXCyK4TEo5+4oMD72a/BJq
2SWCm8e73aPNclFm6aaCNVUieGxUikwinYsiCkUdGyJFcMm9wz+flHERx+zu
gPe7BbTUquoEeS0XfXZ3dJ3F59Bmix3Lgyy4qJNyrn5zxhyKNGX2PNbnooct
Eq1em+fQSz2dDRslueiHtVZ23vdZtF7uDDm+lYP+lTpw+RD7DwpmeJf37ucg
xek3bQddZ1AmfTLY1JuDpk6NKC9WnUFlPWfV4jZxULfobvtVg78R73tdiuIK
DvIXV1TUTf+NxNLc8jNH2ahRqBGm824awSpmm6ccG1lMaSVXBQhR7TWTjaM+
LFTTS7G0pfGR1N6REFEnFiq1jEheVMdHPnoPTmnqs5CCopWHQT4f8coM8W3j
E+gn41PbOk8+Wo4vcXyeNoHIm9DehQ9TKH9MZVXio3EURdMySkA8dAJEdUgz
THTM5ljNdC8HNUrgjkb9TASvD15+3PD3V0uqn3MTE4WgaNWLJRz0xHv2esx5
Jlr8WSt2/DAHDR0SkjsMmEiXktL0S4SDdl5lSd3eOoocDQqCtQMnkSXzF9/i
FgOF2d+YtNk5jo5zzJarZzBQROXyGrbxOHotTA+YD2eg7GktIf3PGHKRNP3w
2Y6BvM80W8U8GEM7DROvH6IOI+2QbimDeSY6EaDpcE92GKkdHUj3fjWKatv8
0tQSB5HQdr+doTsDbajtlp7zoSG644LXxAQdPSsrsf/oSENYSWzp2k90RCmI
PnRJj4aKJ0+VVpTQUadQ8vJWaj/yWPVSdyaQjoySfBRvzfShGf+NAYrtNNSY
LiBhrr3o47WcFF56P5o9v0Yyk/YLZfPqij4Hd6OY0vJpJeV25OAkOPznUTvy
CTMs/p5cgzJaqh7FXa5BHz//ylrj9RpqBNXPxMJeg4NZQ6XH9XZYKmfeqORA
BWtqZ179p3Yok5YTv36ECpZJE4krZ9uh4s7EWrtSKhh/Ul8vtZ8K8h91SN8o
HaB8IKodmXaAxmyqetDvDpgo1OKb13fCADkz1x3/AUWkWGu54V9Ad8y2MznY
DTdfZGskqXeBzlz1B+a9bsjzK54bdeuCscVB8tT+bsh59Pl907MuuPSqqnDp
7h6I32DokxzfDWfyvz1v3NILO5O/xY7L9oLO7A6bQLt+EItV7QnVoIFUrlqN
TyEd/PaVfX9tRYNovy0+YjgdKrfAJ5IHDe6vn/jaOkiHYN1D1S8zaaBh0MNo
WzEAjc11FyX4NGBlh4imvh2A01qhG+9/pQMVDwmnjgyCREPls8HTg1B0tsS6
ei8D/B+7ltgWDYJnh3lLQgYDXl7rKciuHQTl48mJUU8ZEBoueW4NdxACz3Rm
sBYY8F7ZL+R04BCcie2T93o4AplhohRD+2Gwu591zE2ECYtJHunBkwzYWdvz
/kv/OOxe5ofbSI/ARO7xOV2FCShbF7ogs3QE0qJVZ185T8D2hPiUF3tGwMJ8
tKXu9gTkMe4kSLwfAev5jZ2rg1lg3MA98qBgFJrr9eglwkmI7/lTkVg9ClcH
2vOaVrChRbiIs71tFCr7JF7a7WNDlLlmlFCSCYYnX9wyamFDdcG68M1HmfBt
vG6dhicHNsZeCR7bPAZHcvliaqu5kHfpVnF9yBj8lN/SRdnBhdEnD2mXU8fA
Jacn3SOSCzmDbwIdX45B8NU/ZvsfcoHqMeSXozsOdZXGK3T0eBC6wtrLnBiH
PU1MUpX2FJymda4/eo8FKkbHrzE3C6CvZuvh+DoWeBbFBVdFCMDhCp6X2sEC
w5FFu1vOC4CzsYyZtXgSJIhUeWqHAAIfp1y4FzEJ9fVLVDL/IcAhdmk3dQ0b
NJ7WKx+7KYS8HTckurexwW218mhgoxC4JvLm9ANskCGx+h+OCeFRt/Ak6zob
Yvm3l/k6TYOay3/GkrNsyFI5ssdnaBp+L7Kv0QrmgO9XY6ftm2fgwdGpL7ej
OLA4zni+NXYGvPufDugncaD5te/jlpIZqHhtQDK5ygF/0+alaxb9gbAIUpDV
Bw6YWx/rlWv5A9Rv/RLuply49W3rc9GoOTi19qbGNxsuXLm4dsKkZA4sy7zN
vdZzQdXbbpDTMwfZpz/57vHnQoWOgn309nlYZ/Oi7MB5Lpz4rrErzX4BKgoy
PVJ5XJAQpJw6dUME+085c0RBhAcKZV+b8bciGCP7TGqxHA/6f7/NPzkggmkn
ZzxpMuGBxUj584tmothZ/1NSskE86EpAIltbRLF71PSiwkge7Pq1yoHFE8Xq
t6XbmCfyIISU5bRCWwzjO50M9bzGA3vCv/lcjBi2TycVv/4fDyg2we7r9MWx
pGspvst/8cBBfd/uNTvEsTy5lMlaBg8Cjov+oaeIY5/nkrT7RKfgbuemxuxe
ccyuLyF+qd0UJKo6+Zc8kMAUi05YPr8/BY7MFc5OBySxFeonPq6rnALxjfmV
qFgS23TheCAVTYGbziWXg/2SWHLasRxh1xQcfnNZblvgYmw06MjoWiU+xAxd
KAuPkMLEf8aktS7hg9FmN7J+pRS2xCNGbf9KPmgVCs65z0hh3lj0hgxXPhBb
i2rsL0hjuN7hOy0pfOgKkpzo+CyDdedH2vpn84HcsfGfCj1ZjFCM/MrK58Ml
wuPe0VhZbKVoxKziSz6IFnYd5S8jYfn0g7t9x/iQnSriLV0ih73Yc5A9KuTD
8bdKb+1k5LGvbf9kJi4SQCvFo5J/RB6TaAx7eUtPAOrmL8YT3BSw6LuhikM+
AvDU5phzchWx8wk3Cs+HCGAXQ19OrVkRe+bx1cQ+RgCJ6nbO78SVsMl5W5fz
5/7uT5ed+GlKmHxn5Be7PAGQbJsLb+JKmNnT4j2Dd/96dSE6T06cjEXulT1q
VyeAtuyIn6W5ZCxnNTY/0PyXL7Jr73wHGXsifSIr969Xb8nnNGP1lLHxV313
ByYFcPHc9j6rOmUsXKWyPUefgJMZT8xUyKpY1jgjyNacgFyFC2m3o1Sxskat
CboDAUmL0tRcv6pizJgzErbeBExXPjMovK6GSW2uvUjfR4C5i/qr+6LqmIku
WzvnMAEmtSoBGdHq2MEvu63pmQTM30rqe+RLwc7ez23IvkLAf17dFw9+p2CP
khrdbe4QcLTtY6/AUwMbWb4yLLuGAL7oscRH+zQxSdH9POsPBCz8yt1ygqOJ
Gf+8lkr7TsCz/h/kfZlaWFjmQp71BAF9fp3rrD5oY5kBVoa0aQLu67C1pI7o
YA+sDpVnLRJCYroMuc1wCXbCx4ThIiuEfyl/JA8lLsH+B0nFfS8=
        "]], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAOQhtVqheE0CREhzhX5YewEUMBolc
ZRNAmQFpqdQZHcBYrsc/4GgTQJ0jkuvpYBzAalCJ9mNsE0CqtRHDybAbwJCU
DGRrcxNAA30ZkYBoGsCjNs4a73YTQC7pKqBFzxnAttiP0XJ6E0CTikl0rjwZ
wNscEz96gRNAe9g1rMApGMAmpRkaiY8TQMGhs3cJQxbAOUfb0AyTE0B1KNC+
xNQVwEzpnIeQlhNAre9EIo5qFcBxLSD1l50TQFvIA/hroRTAhM/hqxuhE0Bo
Te6aGkIUwJZxo2KfpBNA0CxYDQvmE8C8tSbQpqsTQEQNpwgKNxPAz1fohiqv
E0CpswLHy+MSwOL5qT2ushNAu93HTTWTEsAHPi2rtbkTQL9WqdJ/+RHAUsYz
hsTHE0CZ+aMr3eAQwGVo9TxIyxNAj6dbirefEMB4Crfzy84TQP8wDv9mYBDA
nU46YdPVE0Amb7187c0PwOjWQDzi4xNABlfHHt0NDsD6eALzZecTQHhrbuH7
pA3ADRvEqenqE0BpTtoAvT4NwDJfRxfx8RNAqK294cB5DMBFAQnOdPUTQNXk
lAzUGgzAWKPKhPj4E0AetaU/Kr4LwGpFjDt8/BNA3eY2fa5jC8B9503y//8T
QCR6BshMCwvAHX/fFA==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$136605#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-7.646850125635539, 7.6195412722355575`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.762432389206196*^9, 3.762432485417431*^9, 
  3.76243254941695*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"0227bad7-c5f6-433b-8f02-64cf70202472"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7624324194177513`*^9, 3.7624324230229263`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"4b6e9c17-c771-4e46-9338-5fdc7f78a845"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
hl4oxcGr5BfNLSoZIrZCIPLPtC2vpNlGr+H9pbUhSDCZ7xFDc873nRdCA8JR
zP1vaVY0yxG+ZuHuG0j7QX7YIL1eFJl2qdA/Etl/fS15kWZvF/fewttRKPXT
v5kSNCca/WdZlBGD3D7/rHWn91/L4b8oqryHDvTl//eR1kumLXVKMf8hSuWJ
a0jTfM/eYNWhkATkt0EpV5/W18D0jnvH1CT0YdNpkRWtf+WSoXuHEh6hP7/e
FtHnFyQmlj15KC8ZPSxaZr+M9jOmd9qyTsunyCU2Z7oY7ffymhOOTk2pSHpf
lv+7QQo5PdEvchp5Tu9v5YIROj//rt/+03npJZq6x8P/1C9af5OxyMzwdFRx
19uzW0T/Xmt30XKVTBSfVG57mU8hXTVWy/G2TNTzcvGGD7309Qpv/2Qmv0Lt
asd+NndTKGpUZaGeYTYqcDOd09VBoZKK7+F6NrmoPCu9ht1E+3mysWTPf2/Q
Q4MVBsca6H4yr0kqRPItSpby+/mhjkKbAn4E1b56h3KcmxcoVVGoYlHrcd9p
gIJHNe6+ouvXo6715X0BoP92lt1wpOv7Ej72x9GRoKWqVryx9xRaIDimd2VV
PlpV8D6jO5uez/T486a+j2iqJXtq5hMKrYwZKKfsClCt/3yjZ4n0/NTxPsmC
AvRt1PLr9QcUehrrs2BJXCFaYXXVhRtFob7+EwmBm4vRO8kGDw7dzzzi/e+o
PytFrFX2dZ/2UMjkz/CrZcplyHz/9Pg9dhTiWJ78ahZSRteVBbfBiq6H4ZMK
nnvL0Uh7o8Q1MwqJtp6+nMf5jA5wkk+KtCmUG5SX99KwCtnqNl64OCZC8U8n
Pr/xqELxq72+ZP0WobDaNc0FiVUo/ekXVqVAhHYthr/f5KvR7Mr0g3ktIjRa
ByvFuquRvVK0enS+CK3Szs+0iq5BE3XuntrBImRQWx+VV1qD2se7ITyAvt8E
CE4vGa9B67/smVfnI0JapTNMGQdr0drUPUbLnESI6+xZA4vrkPK+xzNl14uQ
4J7aoE5ePWrykjLUEROhhxw/A7mu7+jjzgcXrh8RothXV1QCZjSil8b83TEO
QhS1O+Ffj0UjChtsGrphJ0QRKRVFhS8aUdXXBxEW64To5HpNu8CTTWiRyQ9R
m7IQWQdW+fHZzWi6Qpr+i48CJOGn9MNJpQ3tl3G4MMAQoN0OqV9z9dtQc3GB
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
cReZhQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$133994#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-0.9999999567753249, 0.9999997038208933}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.762432423566467*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"6c63c8f2-e0d2-463d-9a50-83c97c787016"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"Tan", "[", 
       FractionBox["x", "2"], "]"}], "2"]}], 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"Tan", "[", 
       FractionBox["x", "2"], "]"}], "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7624324262367396`*^9, 3.7624324609985867`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"e2cf4696-0889-4ac5-8114-2aa1f8c7b4e3"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
IXJY5FFdM8//d35L/v/57f8AzRCTdA==
        "]], LineBox[CompressedData["
1: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
HTe0Z2JxkYLQZfY58bov6P8D5tpDGQ==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$134658#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-0.9999949158596809, 0.9999997038208934}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7624324444560623`*^9, 3.762432461240081*^9}},
 CellLabel->"Out[93]=",ExpressionUUID->"fb7e36c6-9229-4dbd-b07d-6957761d42d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762432495453268*^9, 3.7624324966014204`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"a5683a83-7ba5-4d6d-a23f-ce09ea1a561d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$135609#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-0.999999987301805, 0.9999999723133323}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.762432496920213*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"c112624b-36ef-4763-9fa5-51da84b58025"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", 
     RowBox[{"Tan", "[", 
      FractionBox["x", "2"], "]"}]}], 
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"Tan", "[", 
       FractionBox["x", "2"], "]"}], "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762432499142251*^9, 3.762432517155632*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"3507770b-9674-4c97-b820-391865dc4517"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
zcYcH13FTQdCOTF6UlBnZTu4XW0//gd8ITiU
        "]], LineBox[CompressedData["
1:eJwtmHlUjP/7xtu00WanSCRJQlIk3ZNosUZJn0q7SrKVFqQNlYoQUUREtKCS
StE9ibIkRJH2bdpm5t0yNVvL7/md8/1rzuucec55v6/ruu/nOo+a24n9h8VE
REQCREVE/v/Xk60Q6q8sQ+cb0foPqPpgqIv4i+mzJOmPuzIKpNv+oMhqVTS9
JEHPvWIVe+VUO4bMNXG6FCpBL3/TmKke047cKbeJyiAJeso0Q5uX99uRXZux
eYePBL34n6fMg6/t2BisU2y1V4LeZKxvwFDvwMIPW/IOLZCgm4qrVk+r68Bj
jo7pQc/F6U/5L9QWrerCf3HJ0dl1YnTF3G8LvbIZ+OvjkhyX72L0tYfuVC17
x8Dqqac/5nwWoytlK7rX1jCwzL9wQfhbMbr94n2G04YZ+MjhV7ZNuhjd2Je5
iW7Qgz6r5H5MnBSju6h6Loik96DwS/h8qxlidBNGmiKzshc5EtJbpkmK0TkR
MvK19b3INk5wLZkSpVsvPff8GaMX2/JTs9RHROkPdfdlr5Dsww8pJUb8BlF6
ZPfHG0e39WG8D8fl0VNR+p8Ym1yxsj5UkfXO5GwVpTfGzF62+kk/OpVVxy81
EqXfCk/dAQX9+NBv3UmrDaL0reurpI0r+lGjUaCfs0KUfkfr1CLR9n5ck3Pl
g/sMUTq88Dp7T3kAt+551VpbJ0Iv+jJSsfjKAB65MTknz1uE7rZo8KasKxNz
zNz5La4idHLYPObuMSayBVVNMxxE6JaxPj/nnWWin/v1dO/dIvTQ0jpa7Q0m
huipr1uiK0L/oFmXvLuCiYufJ95ZzJ3C13ubbtguYeHRDVrTGlWm8O6bB0VB
X1joN+3N00CFKTydxirW+83Cs3XmO2aKTaGQFfG7qZmFsQGHEyx7JvF5bQiw
B1mY9TptQXHeJH40GdCaM5eNfRvm6dwym0SfmLA3xxzZODgt48faTZPYvOaG
dYMHG3l1ev7VqyZxhH/r0ZpjbJQO3F8srjSJBeylFvfOs1Gz8MpWv8YJ7N8T
oBSQykYvfYmDe09O4Dzaju+qDWw8LpnI73ebwOky+1T02tgYWK92L+rABL7I
ba7S7WFjVCC0vzOcwBtfJjQIh40ZhWePak+bwMLY1jB3BYIvomTkP3HHMfj5
us1f5hAstL2T694/jhNLwtYoqxCsHHs9mvJ9HB0UvfPOaRLs1h8Kk0kZRy+3
PY/0aQSZkuFLn8SPo+YTZg57O0FOvfxHWtg4bpKtrrm2k6BEkLZssMc4vt97
0yLRlqB6kddNhs441s++kXntKEF3g5ZnFRVCTPaWmjxynaDnMwNbsyIhJn3S
iw26RdBnwXXxz1lCzOjJ/HMqmeBJoalTzXUhOq/9mKP9kGAIZs5qcBbisaaP
kyUvCYatFS93sBZi3Pxua51XBCMfOh5vMRPimNQ6u6uFBGMuKHzuXC1Exa4l
nrPfEbxpHhDKFgqwyTfPZeNngreLa1adIgLUr9DjKVYTTFmp2TDSIcAcfsma
+hqCadMb1/M/C/AoKAdr/CaYHqLXfu6dAFf5FV/KqyeYwbpydTJXgCPfWrRX
NhB8/p3WJ35HgJaW301amgnm0lKSouIE2LKoNEe5jWBB3oipTJgAbaL9s7d3
ECxJzLgv7ynAf9kKzs4Mgu8kRHZd/0+A4Z/9lfb2EqQH/MeftZs6z9Yn+1f1
U/4cnGGzQE+AgoMjIZksgp8/HRa9t0KA11SI+05CsHoTvlisLEDG1cC6hkGC
tcp+MupiAtymf8Tm7QjBuvivhRmjfDx8fKaL4ijBvxPqHiv7+HjFoWLYaoxg
a+ufMp0ffBQ2Gmbd5hHssFrnm1fBx2VO97+l8gkyymMX6BXxsdPfNOCagGCf
bldlYRYfW02S0k4IqXykbzm96T4ft1bL7908TpDMvq329jofJblrw0coHr40
WGN8iY8OUfHr70wQHB2zDCkP5uOfxe+8V04S5Hmlr9zmy8d3231Un1Is/Dte
X+nMR01X84NKUwQnLW0vWlrz0aJ4lqI3xaKlL9dVm/Ex1D/FMptiCW2Z1j2G
fAy7ly/eSLFUqlv8z9V8PLUYjLkUy8q/3WSjxkfBRx3+FMXyYXN66mfzcadJ
iN4oxUqDx2/+J83HRUt0Buspnu36yaRJyMPSX7baTyieX6tGnAgPGS9m9zlT
rGx67l57Bw/ruq9rSFG8uOC3pUc9D6WvSnSnUOdXW67DZXzmoe79F+rKFKsn
RT8+8o6HM9nN3dHU/VdIte9j5vJwuz5Ts53SRyvYcOr4Yx5OKgBbg2J68x6t
ziQe7s4u7zOj9LU1dT9w8DIPazY84+2l9Gc+Cwr/eo6H2/LSlbdS/kTKx2fD
cR4mXgmwXkT5N/90Wv0rFx5qPyNp7ZS/LxoKRDWteXh2J0cigfK/4XHzQcWN
PGzzC579ZJjgcdnhyItaPHybIf9ebojS86TkC54KD23KHWOdqXyt3bxGol2U
h2lJYifLBqg8ppmuOcDh4s2dnISvfQQdJe3sPzO42NHw83t5DzV/P8Nz875y
sahx4+sjnZQ+Brcal5dxUTWw9ZByOzUP9zIlU3K5GLAhR7uwhWCbV61j5C0u
Bj/JMH1KzZPB5DIZa2cujiZsigui5rHafaNe1T4uqncV3/H7StDt8y7nzdu4
+Kquq9H2E8GrNwNeL1vJRUtfoxmN5VRetapcOcNjaBmx72AttR9CrjXGe3eP
4Sp/LZt5uQRnjpGipj9jOMncmbI9h6Bx+Xz5j2/HsELRV87pMcFbB31KbkWN
4WO1z62hiZQ/70K7Zc6MobeNSpB8AuXP0kTF0KNjSOs9fCI6lvKDVerpaUVx
Qk/ChgiC2y7KzTJYOIbbncJI5DGC//rUjLNnjOH+WDbzkDe13/bqH1GdGkVe
moLXUneCdxc6o1TXKJ49GNzmZUfNS27u0b/PR3Gyt9Wm24Tgw2brD2dMRnHX
VFbbc0WCul26gt96o3hx77PmG7IEP/QrrV2rOYqfzlgEe0hQ9+d+v8uQH0VU
ZN/6xmWj1sxd/tZNHLwl0dRe1MzGfLNtS1cHcXA40thx8AkbTXcvs4vx4WCf
xZTKw/ts/G0tdrXzEAeTjb+WGd9m45gLnZ+8jYPnY8SKaTFs3HzO6KfkTA6q
ZQgkXI6w8cNLvfC2nBH8KXPMSlGTjQcKZxVuThvBs/ZGh6+rspHxdnggKXEE
y3afyJqi3pfSX3IP7j47grLn/BvTp7Fxd5f2mhLzEWzryDk5vYOF9fOXtyR2
DKNSLMfa8TYLeyLmGJnPH8Yp839lOhwmyp5/SRJlh5Ftkax9ppeJOsGW6W3j
Q/i00sL7RRMTA4+flz3bPoTimxf7NnxgoqRD99+crCGsS7p8V/cmE9X1XgfM
3DKE7zM1zvF1mOjGsHnZ7DqIHYcUfJUPDGBUO9tNy2YQl9RsjfhpNoBZTTFz
g8wGMbUoLcl/4wAO1749r7hqEC+ayDHPUf1FLMzyThS1t4Mk9Hzvt/UjrOv7
uU+O4PSSjO16Xv1Ycktze68tC18GVh4dPtyH0g497qJGLJw9aisXf6APbZdk
RC5UY2HuTpOqWdv7cDhrGX3XABPXRmA+a1kfrqQv3pwXxsR4Ja+86rZevNM/
e93ZZwP4LSWyzORgLwaA6KIZgj58eSJ2uRPVB9f2NXDWpFI9UbD7tEFVF54e
XL1y3kUGNmm69i4s6MJibsShSR8Giq3xSRtK60ITSa3K6o0MnLUvdvqZs124
f9nZ20d+d+O/bewFQ9pdGHBooWH69G70+lafcC2hE0t+2ofNPduJx16+0+nY
2YHbShplJmzbkPZRdp26eSuezHzJU5r1C5cbBdot+FqLtp7LHtaGvEESlxM0
w+8NVlU3xK63LoZfhnPodZbFYLi6PN/q9i9w+6s718HyF4gFzmnyWNAG69Pd
G082toC9S1ZtsV4bdOa+rDaf3gr5O+DzDKs2KBT0L5De3ApuqkcKC6LawOPk
sNG2lFZ4/+ntNQlOG2wOVDv2a1UbXFD22P64ph2WSTc9EzLaQKI8/0XnhU5Q
uz3eM2DdAVIzrCLc2AzQnh9QWyDRDXYr7On6Mj1gcqTStXd+N2Rt9ZiSVe+B
Vy7pKnKru2HPmeDzr/7rge5Ar6aVB7ohiZF2RuJjD3R+1he8eNwNGuVDpzLu
9oKkc0VkI40B2wMT3fot+gESTNKcjvVA0vXUh2Xu/bDLQFosNawHenOett0I
7Qd7p62tX673QHxnqdPmgn6oCZz6y3ndA7+tuuzjVQfgtfxLz/CJHvBYtcFa
Z2wACko1BD6Xe+FCW72pXzoL9JdkD2282Qctb3YeC37LgupkLR/D9D4wTKQn
hdax4Pa3mRu08/tgcHtWX6wUG4ry76S2fe8Dp+zzCelH2TB3hFMaJ9sPhoHq
jb/XE+jVv+3aGdIP/Gmb3ii7DUKH8M+Qw4EByPAb+Xb/+CBE38pGW7cBsGl9
3qF2bhA2HAipoZ0YgNzipTM0bw5CWUJMQkfMAHgeneGsVzkIs6LzPziUDsDv
H60Su7WG4FWBr8XiRUzIvRtlFTo8BJtaFUxzfzHh66yoHgWRYeBlLxc93soE
Rtyl0Idyw/DB9oxw7gATVEIu5nzQHIZnu50uaImxIMYxUnq68zAENYjybdew
wGVRKP3212Ho9F59uuwSC87dOn9wZcMwvJIq1dS+xoIkufPsEsYwbPb3SbmY
Quk0cU6lRXQE/uqcuz36ggUbW84Eq28cAU3z+lV/6lmg+CBgbd7jEXAUxsTd
WMqGVfMCqrbmj4DVXrGiZ6vYYJZw2uk3jgCr4cuaTD02hIT5x3P/jUBzpz/x
NmNDr/Op3i1KHFjb+Wa0w5sN9CXH0r6c58CpvwaVpZlsaLzja+AYxwEp45lt
/nlsGFP0rWHd4cAhDfGeOW/YoC16dFyxgAP3NphmzPvEhjvt3nYH+zkwQ8zP
RqmbDSceeSh22Y6ClPe10b8LCVw9k3zvqvsoeM3h/vd+CYEXVjWam06OgnfQ
MaM7GgTYkwYmVy+Pgk8lx1dGl4Cvw3S/jW9H4bXG9AWiFgTidWmTHZ9GITvW
QHbPbgI5MgGxV+pG4ZLi5UPR+wkMFLU86mCPwsTphEXoSMBndv6veLUxmJ8S
lbX1JIHYAYazgc4YWE/rtB4+TSDrvTKz3XAM6sriza6eIdB38pKEgc0YzHpo
Nh4bScD7m92G9qgxmOEa6nA7kUDM4yvlcYljcE9ugWjmbQLPzr3frZ82BrZ/
4V/GXQI9K7U9496MgX220SKvdAKeUVNJG5hjcHli7BE/j0DUIb1lbbwxuB3+
4KHvawIZekdexk7jQvaEdvnXYgLdHbVVrYu5IFeUYL8HCXhABu/yPi7Y1DqU
eXwlcHFu40U9Jy5Me/42bmMNgccsBaVWHy48PxDsw/tBoPPumZV6F7kwR03z
gFE9ATfeLvuWQi7ETTfO/91KIPJ7BCOmgnr+4HCTdAeBRxmFfut/cKE4O2nG
yi4C7TZL4mL6uHCh1itgdS8BEe0D89aPccFcQzFHqZ/AEvHY9GYxHmjEPOho
HyDgkjdSqqvCg/k2nB1mhEB4jKZFsyYPbC8ln/03SCDN+dDv6A08cLLpfmI/
TICuf8NFdysPRqYYXytHCLTKVTGb9vDg1/6SgcWjBCa7hMHRDjzY+jhawn2M
wOK3a6fpevPgyt8LcxK5BJx8UhZFR/BAH5QXFfEJCBtkaoau8OBJxVBAhoDA
HcszoY4pPNjJdI2PFBLQe9OrU5XBg3HtHued4wR+atq1rnvFg/WJ0oMiEwSO
36lKuIc8sKu0M0qnWFbagCZVTf1fKnCb7iSBp0EZg6f+8kBNT1b6BcXbeuY8
bOrigWv5l6i5UwTabC/tMx/igUp5MP0oxecrOaL5EzzIbm0reE7xQn2PfBVZ
PpzyaHRvorjwyS+36Ll8GF236xvV/8F6jums4aV8EH5cOkT1fxi8mF/huIYP
FzbZf+dQHM9RO121mQ9/aHwvqv/DSo/r6roWfAhdNbP0McWVv0Tq7tnwQa/r
/Seq/4Ob6clLUq58aB7Uu071f5jKb93gd4wPzn6ps+9R57+3dC+j6Qwfrqtv
sV5E8cYbZUnmUXyQc3LZHUfdv05Uxzz/Bh/EFJ3FGZRefqdSuSoP+MD/eC9g
NcXy7TOeRWfzIfNJzGNXSt9sqxC74SI+PDueei2S0t+CPiB96AMfVM+6Gl6j
/Ola4/Cm6gcfIko8H8XyCEQ8+HJEt5kP60p3fD5F+blYwXBhah8f1NIKX26n
/C4JzfwiNcaHo8udbSWpPHAOxaxqlhcAnevXs5vKz7Vv3EZzZQE05UX8+k3l
a/UWr/j8FQII7551wYLKn6eKGSuaJoCrkpfXjlH5FI9/nTq8SwDiCr5r11L5
TROq7zn0nwDaPtZybal8N/wTf6nrJwDtmqx2Hyr/gTv8nVNDBWBXFyxpR83H
zJIOBek4ARDOBe66NgK7kstPNqcL4OGyWNOcRgJlB8N0Y+oEwJTzySr5ScCh
it0x3C6Axc87D8p/J8DTd0o8xBaArvLG5j3VBNbN3cLRlRLCrBTlwKRKan5/
C143bxRCCwiUaCUEaNt8PC22C+H5M42XgkICza8a5r7aJ4QC9nPdR68IzE0s
DorxEYLTnx5OUQ6By/sCN62/JwQXVYuHk6kEblRr+eZkCsHI2zD+azLlt3nr
/eVFQtDJT5KPvEUgd4uFxPxaIXRoVHZnxxP4u3Lh93GpcTgfLWUwQu2/jsc1
ooFzxqEwvH2DXAABpuoFPbJ0HOSerGcoUvtTZC4zuX3LOJidOn2k7jABTbEy
j0r/cTjZYOFqbUVA97zfbYgYh4VLbPeX7iBgxNP4Unx1HFqkWmbKbSdgxU5Y
k505Dn8cY2ce30Qg6J+rIKF1HLxOTIRrqFF5zp927b+dE+AUNjl8msmGH6tL
3tfaTUCU0pH2c9T75N+z46M7PScgeeHCHt8WNrDv/7E3jpiAzHCPXXI/qJ4Q
l7l8WdEEMJOvy1vks+Gw++5S5tJJePSBvizLjw0Ss28xwgSTAP3fdlp2smAm
O1R+ptQUGB8VD972jwVqn7z1H8+agrfKz/VX/2SBcYhR1CftKbCt+xdRVcaC
M12dy5Wcp8A9P46oJrOAXaB7+FHFFDgfK9l1eAcLmFq9p9zMRGh/jMtDjz1g
Amde86XsXSI0XCH3SuMmE4QStcmc/SK0zLcqpjUxTJBtLS2PchahSbrfutF7
igkrEhOUsoNFaJtb817vMGWCm1A/byRLhBZiouv5tWMA/ny9NHhRQZT2pMjz
+MjsAbhpnLr9wFxRGn314t8ekgOwP68gZfkiUdpek8n777lUT0vq3FapJUpb
OPr2qum/fqh0NUmWMhOlucSyxRzv90Mhd9wkNkSUJvloXu3g0n5IWnY6MaFP
lLa5y+QCf1EfHDjnpp9SIUYbfc+ct6aFAUmpsyW5n8VoTapubvbVDKjHyjrr
H2K0PyLaJkElDLCVWBUg1yxGu7hCuu9SEgPsroy8Ch8To61O7VvC280A+wcX
13mtFKc1V4qYG5Z0g0tFhrZegjhtVs3PnuiYLvCdPrC0xl6CJjkvYIo72Q6q
2ZVJkv3TaBd9K1gmCg1wrtjUWuGuFM1gb7ddvcUn+N/3c9r/vp/D/wHhj+O4

        "]], LineBox[CompressedData["
1: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
v44NzQnNEeP/ARPf29A=
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$136273#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 5}, {-0.9999999873018048, 0.9999999723133323}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7624325128691254`*^9, 3.7624325173357277`*^9}},
 CellLabel->"Out[97]=",ExpressionUUID->"34b54d07-e719-4b1f-bf62-3ddd6778e1cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<1/cos(x)\>\"", ",", 
   RowBox[{"IncludePods", "\[Rule]", 
    RowBox[{"{", "\"\<Indefinite Integral\>\"", "}"}]}], ",", 
   RowBox[{"PodStates", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Step-by-step solution\>\"", ",", "\"\<Show all steps\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7624330880065966`*^9, 3.7624330920940156`*^9}, {
  3.7624331511955876`*^9, 3.7624331517663364`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"631636f8-a069-49a4-881c-ae43d09ce541"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "1/cos(x)", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, IncludePods -> {"Indefinite Integral"}, 
    PodStates -> {"Step-by-step solution", "Show all steps"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Indefinite integrals", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[1/Cos[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   RowBox[{"sec", "(", "x", ")"}], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{"log", "(", 
                    RowBox[{
                    RowBox[{"tan", "(", "x", ")"}], "+", 
                    RowBox[{"sec", "(", "x", ")"}]}], ")"}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Helvetica", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}, StripOnInput -> False], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Take the integral:\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"sec", "(", "x", ")"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Multiply \"", "\"numerator \"", "\"and \"", 
                    "\"denominator \"", "\"of \"", 
                    TemplateBox[{
                    RowBox[{"sec", "(", "x", ")"}], "\" \""}, "RowDefault"], 
                    "\"by \"", 
                    RowBox[{
                    RowBox[{"tan", "(", "x", ")"}], "+", 
                    RowBox[{"sec", "(", "x", ")"}]}]}, "RowDefault"], 
                    "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["sec", "2"], "(", "x", ")"}], "+", 
                    RowBox[{
                    RowBox[{"sec", "(", "x", ")"}], " ", 
                    RowBox[{"tan", "(", "x", ")"}]}]}], 
                    RowBox[{
                    RowBox[{"sec", "(", "x", ")"}], "+", 
                    RowBox[{"tan", "(", "x", ")"}]}]], HoldForm], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["sec", "2"], "(", "x", ")"}], "+", 
                    RowBox[{
                    RowBox[{"sec", "(", "x", ")"}], " ", 
                    RowBox[{"tan", "(", "x", ")"}]}]}], 
                    RowBox[{
                    RowBox[{"sec", "(", "x", ")"}], "+", 
                    RowBox[{"tan", "(", "x", ")"}]}]], HoldForm], "\",\"", 
                    "\" \""}, "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"tan", "(", "x", ")"}], "+", 
                    RowBox[{"sec", "(", "x", ")"}]}]}], "\" \""}, 
                    "RowDefault"], "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\[LongEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["sec", "2"], "(", "x", ")"}], "+", 
                    RowBox[{
                    RowBox[{"tan", "(", "x", ")"}], " ", 
                    RowBox[{"sec", "(", "x", ")"}]}]}], ")"}]}], 
                    "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "x"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", "u"], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    FractionBox["1", "u"], "\" \""}, "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    RowBox[{"log", "(", "u", ")"}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{"log", "(", "u", ")"}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"tan", "(", "x", ")"}], "+", 
                    RowBox[{"sec", "(", "x", ")"}]}]}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{"log", "(", 
                    RowBox[{
                    RowBox[{"tan", "(", "x", ")"}], "+", 
                    RowBox[{"sec", "(", "x", ")"}]}], ")"}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}, StripOnInput -> False], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Helvetica",
                     FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "2"}, {
         XMLElement["info", {"text" -> "sec(x) is the secant function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Sec.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Sec", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/Secant.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                TemplateBox[{
                  RowBox[{"sec", "(", "x", ")"}], "\" \"", 
                  "\"is the secant function\""}, "RowDefault"], 
                TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}], 
         XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}], 
           XMLElement["cell", {"compressed" -> False, "string" -> True}, {
             Cell[
              BoxData[
               FormBox[
                TemplateBox[{
                  RowBox[{"log", "(", "x", ")"}], "\" \"", 
                  "\"is the natural logarithm\""}, "RowDefault"], 
                TraditionalForm]], "Output", {
              Background -> None, 
               GraphicsBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
                 DefaultAxesStyle -> Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsAxes"], DefaultFrameStyle -> 
                 Directive[
                   GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                   FontOpacity -> 1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, 
                   "GraphicsFrameTicks"], DefaultTicksStyle -> 
                 Directive[
                  FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
               Graphics3DBoxOptions -> {
                DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
              NumberPoint -> ".", 
              AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
              RenderingOptions -> {
               "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}]}]}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "IndefiniteIntegral__Hide steps"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "Math", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.078", 
    "parsetiming" -> "0.28", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSPa7731c30538h74547aa0000044gba5e5iebg714h", "host" -> 
    "http://www4f.wolframalpha.com", "server" -> "40", "related" -> 
    "http://www4f.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa7741c30538h74547aa000001g3h22d9c61e54g58938868876970470874", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2019, 3, 24, 17, 19, 13.619252`8.886728209502541}, "Line" -> 
    100, "SessionID" -> 33681050585085282212}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "1/cos(x)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1213., {472., 482.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.7624330943338842`*^9, 3.7624331536317854`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"0753634a-45d4-43ce-9912-626eaeea56da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Derivative", "[", 
  RowBox[{
   RowBox[{"ArcSin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.762438663285505*^9, 3.762438669525009*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"254a8d6f-e75b-4661-bca5-3381bba04c8e"],

Cell[BoxData[
 RowBox[{"Derivative", "[", 
  RowBox[{
   RowBox[{"ArcSin", "[", "x", "]"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{{3.7624386699239388`*^9, 3.762438678157872*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"51564876-ec0e-4a16-b10d-3e5e6b99e4b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "\[ExponentialE]", 
   RowBox[{
    SqrtBox["2"], " "}]], 
  RowBox[{
   FractionBox["1", 
    RowBox[{"Cos", "[", "x", "]"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.7624389376628227`*^9, 3.7624390040944824`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"cb3c55da-3765-48ce-bd28-987a0053e0c5"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "\[ExponentialE]", 
   SqrtBox["2"]], 
  RowBox[{
   RowBox[{"Sec", "[", "x", "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{{3.7624390073001237`*^9, 3.762439009453905*^9}},
 CellLabel->
  "Out[104]=",ExpressionUUID->"de8916bd-6355-4d10-81e3-c4dc0b564646"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Log", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7624394743482995`*^9, 3.762439479347267*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"25751a76-fd20-4a0d-b2fc-a0b294e56a09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "x"}], "+", 
  RowBox[{"x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.7624394796961794`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"5974b1a9-4292-49af-a782-6a28f880b3bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.762439586133933*^9, 3.762439597035195*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"1a96f4b3-aa20-425a-a93b-71153d5a5cb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", "x"}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"ArcTan", "[", "x", "]"}]}], "+", 
  RowBox[{"x", " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.762439597216646*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"2a575603-de56-4f07-a00e-0448585b1d52"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Derivative", "[", 
  RowBox[{
   RowBox[{"x", "*", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}], "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.762439798953474*^9, 3.7624398194065037`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"898b7506-2364-48f2-9746-2c0e0f4044d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "*", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7624398871075983`*^9, 3.762439901939249*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"a6ce7723-9189-48e2-bf8c-df343e3fca5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.762439904591747*^9, 3.762439907541709*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"078fbf20-d14f-4c95-ae8c-a3401d117217"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["x", "2"]}], 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}]], "+", 
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}], "]"}]}]], "Output",
 CellChangeTimes->{3.762439908533864*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"948e94cd-0c8f-4b2d-b985-1da4cca865f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"ArcTan", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7624399466230717`*^9, 3.7624399596036263`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"bb40d35a-3079-4353-b8f2-31ec5ef7aa32"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["x", "2"]}]]], "Output",
 CellChangeTimes->{{3.7624399542403283`*^9, 3.7624399602454185`*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"de6a3cc2-2e6a-4f9c-ae25-50c58a72fca2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"3", "x"}], "]"}], "3"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", "x"}], "+", "5"}], ")"}]}], ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7624403156321135`*^9, 3.7624403517369013`*^9}, {
  3.7624414380514803`*^9, 3.7624414435788503`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"d5d63d77-e57b-4978-bb31-cf092a0f03ee"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "9"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"6", " ", "x"}]}], ")"}]}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"3", " ", "x"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"3", " ", "x"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7624403489714794`*^9, 3.7624403519414425`*^9}, 
   3.7624414439819736`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"2f099c75-18d3-42a1-80e9-4ba0a80f5a4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"3", "x"}], "]"}], "3"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"9", 
          SuperscriptBox["x", "2"]}], "+", 
         RowBox[{"15", "x"}], "-", "38"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"3", "x"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["2", "3"], "x"}], "+", 
         FractionBox["5", "9"]}], ")"}]}]}], ",", "x"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.762440610689788*^9, 3.762440662671509*^9}, {
   3.762440700548921*^9, 3.7624407022325134`*^9}, 3.762440771284027*^9, {
   3.7624409739949827`*^9, 3.7624410015914125`*^9}, {3.762441331551365*^9, 
   3.7624413592591343`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"dc2e8596-d85e-4548-8f70-9ec27083ec79"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["112", "3"]}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}], "+", 
  RowBox[{"15", " ", "x", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}], "+", 
  RowBox[{"9", " ", 
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["10", "3"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}], "+", 
  RowBox[{"4", " ", "x", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.762440652457187*^9, 3.76244066296644*^9}, 
   3.7624407026206903`*^9, {3.7624409747472982`*^9, 3.762441002155828*^9}, {
   3.7624413334900255`*^9, 3.762441359621341*^9}},
 CellLabel->
  "Out[141]=",ExpressionUUID->"154951db-e4b1-40fd-a39b-d2560c011006"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"3", "x"}], "]"}], "3"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"9", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"15", "x"}], "-", "38"}], ")"}]}], ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.7624407805546007`*^9, {3.762440915863372*^9, 3.762440937617177*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"9ea230f9-7597-42c3-9ab8-958e4af34215"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "38"}], "+", 
     RowBox[{"15", " ", "x"}], "+", 
     RowBox[{"9", " ", 
      SuperscriptBox["x", "2"]}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"5", "+", 
     RowBox[{"6", " ", "x"}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7624407809425735`*^9, {3.762440916610901*^9, 3.76244093779615*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"11f2f1e9-5015-463b-adca-8a0cdec6246a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"3", "x"}], "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["2", "3"], "x"}], "+", 
       FractionBox["5", "9"]}], ")"}]}], ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.762440784772537*^9, 3.762440788499505*^9}, {
  3.7624408335335236`*^9, 3.762440834418727*^9}, {3.7624408954624205`*^9, 
  3.762440899138241*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"d65c77b2-759a-444d-bdb5-1e84305fe958"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["2", "3"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"(", 
    RowBox[{"5", "+", 
     RowBox[{"6", " ", "x"}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7624407889361644`*^9, 3.7624408347215323`*^9, {3.762440896124925*^9, 
   3.762440899716589*^9}},
 CellLabel->
  "Out[122]=",ExpressionUUID->"779f5152-5bfa-41b5-a6fe-b7b6be93ac43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["5", "9"]}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}], "-", 
     RowBox[{
      FractionBox["2", "3"], " ", "x", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}]}], ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.762441176342819*^9},
 CellLabel->
  "In[135]:=",ExpressionUUID->"9423c5d3-9c05-401e-9cfa-f97b80dad72d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  RowBox[{"(", 
   RowBox[{"5", "+", 
    RowBox[{"6", " ", "x"}]}], ")"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"3", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.762441160839654*^9, 3.762441176897732*^9}},
 CellLabel->
  "Out[135]=",ExpressionUUID->"ea4764fc-0b8d-44ae-a743-6b0213ced502"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "x"}], "+", 
        FractionBox["5", "3"]}], ")"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}]}], ",", "x"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7624410389515367`*^9, 3.7624410883940463`*^9}, {
  3.7624411567370467`*^9, 3.762441157920492*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"ba9fa854-8bcc-4946-87d5-5f0cd4f310d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FractionBox["5", "3"], "+", 
    RowBox[{"2", " ", "x"}]}], ")"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"3", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.7624410466893272`*^9, 3.7624410885988226`*^9, {3.762441151286685*^9, 
   3.762441179283078*^9}},
 CellLabel->
  "Out[136]=",ExpressionUUID->"8e393d6b-ffd1-4d05-9c99-38b3606b25da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"3", "x"}], "]"}], "3"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"11", "x"}], "-", "17"}], ")"}]}], ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7624412033771343`*^9, 3.7624412414646454`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"a6db0235-2e77-43f2-b188-468979fccbcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "17"}], "+", 
     RowBox[{"11", " ", "x"}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["x", "2"]}]}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"(", 
    RowBox[{"11", "+", 
     RowBox[{"6", " ", "x"}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7624412295546546`*^9, 3.7624412419561663`*^9}},
 CellLabel->
  "Out[138]=",ExpressionUUID->"21659a7f-b37d-4c10-98a7-aff51b158563"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"3", "x"}], "]"}], "3"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", 
         SuperscriptBox["x", "2"]}], "+", 
        RowBox[{"5", "x"}], "-", "12"}], ")"}]}], "+", 
     RowBox[{
      FractionBox["1", "9"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"5", "+", 
           RowBox[{"6", "x"}]}], ")"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"3", "x"}], "]"}]}], "-", 
        RowBox[{"2", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", "x"}], "]"}]}]}], ")"}]}]}], ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7624415597325306`*^9, 3.762441570886772*^9}, {
  3.7624416120350184`*^9, 3.762441635657298*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"f0e87d69-6d74-4d56-80b3-27ac5d95a241"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "12"}], "+", 
    RowBox[{"5", " ", "x"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"]}]}], ")"}], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"3", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.762441571459405*^9, 3.7624416361370015`*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"f69cccf7-04ff-4287-bf3a-e8cb12dc6c53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "9"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"3", "x"}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"9", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"15", "x"}], "-", "38"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"3", "x"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"6", "x"}]}], ")"}]}]}], ")"}]}], ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.762441750858059*^9, 3.7624417865540743`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"19384a87-28f4-4ee0-9b1a-9baa08eeeca4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "12"}], "+", 
    RowBox[{"5", " ", "x"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"]}]}], ")"}], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"3", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.7624417867811794`*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"91d9d71d-40d6-4e7a-b8f4-17e5f6c854f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Sin", "[", "x", "]"}], "2"], 
     SuperscriptBox[
      RowBox[{"Cos", "[", "x", "]"}], "2"]}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7624418721537013`*^9, 3.7624419023788185`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"d07b51fa-35bc-4aa1-80c9-9fd1cfa6486b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"Cot", "[", 
   RowBox[{"2", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.76244188168696*^9, 3.762441903351781*^9}},
 CellLabel->
  "Out[148]=",ExpressionUUID->"2036acac-8b59-4b0b-8807-5d21cc02b2df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "2"]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7624419127863417`*^9, 3.7624419262350407`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"a5194260-96fa-4d68-a04e-1a125b7f4768"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cot", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.762441922074859*^9, 3.7624419265559425`*^9}},
 CellLabel->
  "Out[150]=",ExpressionUUID->"a7f1666c-e94b-4043-bdf1-21f9b3bd5ac3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "x", "]"}], "2"]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.762441935436654*^9, 3.7624419358543444`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"a2d62ab4-fa6e-4172-a846-209fbed3fa9d"],

Cell[BoxData[
 RowBox[{"Tan", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.7624419363952827`*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"8f149c6a-8da0-4353-86b4-22855b217631"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Cot", "[", 
     RowBox[{"2", "x"}], "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.76244211175937*^9, 3.762442120605468*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"98a45ed3-a23b-44c1-9c6b-8067d9b66e8c"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"Csc", "[", 
    RowBox[{"2", " ", "x"}], "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.7624421211025677`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"78822adb-8957-4f69-a1f2-68e71958a806"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], 
    RowBox[{"Cot", "[", 
     RowBox[{"2", "x"}], "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.762442201624264*^9, 3.762442207106537*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"a36eb22c-d2ba-43b7-a021-41ec65054679"],

Cell[BoxData[
 RowBox[{"4", " ", 
  SuperscriptBox[
   RowBox[{"Csc", "[", 
    RowBox[{"2", " ", "x"}], "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.7624422075330615`*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"f4f5bb13-239d-4347-a3a1-e5955c401e24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{"x", "-", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"Cos", "[", "x", "]"}], "+", 
        RowBox[{"Sin", "[", "x", "]"}]}], "]"}]}], ")"}]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.76245267912159*^9, 3.762452722794406*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"0f092d96-1712-4da4-8df7-1fabac010add"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], "-", 
      RowBox[{"Sin", "[", "x", "]"}]}], 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], "+", 
      RowBox[{"Sin", "[", "x", "]"}]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7624527007505445`*^9, 3.7624527231408596`*^9}},
 CellLabel->
  "Out[156]=",ExpressionUUID->"f40bf7f7-626a-4ca4-abfe-fe92ba853d66"]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 369, 9, 68, "Input",ExpressionUUID->"110cf883-e1e7-4b8c-a898-e1529b883a71"],
Cell[952, 33, 277, 6, 65, "Output",ExpressionUUID->"8598a4ed-e4c9-45db-aa80-00dce29ae078"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1266, 44, 320, 7, 68, "Input",ExpressionUUID->"68623e80-0ba6-41ad-9078-6499cd302cff"],
Cell[1589, 53, 304, 7, 69, "Output",ExpressionUUID->"691c1d45-e650-4b2b-82e6-61b1ce59a204"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1930, 65, 439, 12, 48, "Input",ExpressionUUID->"49d2759b-7d4a-460b-8136-e89a9926eedb"],
Cell[2372, 79, 688, 21, 69, "Output",ExpressionUUID->"b9640fb3-41ad-46de-aa40-f0575971b265"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3097, 105, 396, 10, 83, "Input",ExpressionUUID->"094d7602-82c5-4f42-a062-250e6d606223"],
Cell[3496, 117, 245, 6, 49, "Output",ExpressionUUID->"b13ae403-9492-44a1-86bb-332a9806c51a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3778, 128, 458, 12, 88, "Input",ExpressionUUID->"3784142c-4a9b-459a-a5e1-af977083db1c"],
Cell[4239, 142, 272, 6, 69, "Output",ExpressionUUID->"9b490d10-d725-4080-a22c-963b58b7bfe0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4548, 153, 384, 10, 71, "Input",ExpressionUUID->"59a8dea4-25c2-4a74-80af-44c13493ed8f"],
Cell[4935, 165, 564, 15, 99, "Output",ExpressionUUID->"ac28281f-52b0-47df-ad4c-8321f206d3db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5536, 185, 440, 12, 67, "Input",ExpressionUUID->"978a0483-b1d7-4aba-9365-2bca0477dfa9"],
Cell[5979, 199, 266, 7, 89, "Output",ExpressionUUID->"32c4f00e-bf2e-4cd2-bc41-4a568d72cc8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6282, 211, 479, 15, 69, "Input",ExpressionUUID->"41e5a45d-a697-428e-b5a8-a42e60b2d7ec"],
Cell[6764, 228, 99703, 1630, 445, "Output",ExpressionUUID->"d5486a38-cfc3-4e41-b264-732920988afc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106504, 1863, 347, 8, 75, "Input",ExpressionUUID->"236f81ef-c0a9-435e-bbe4-bfc064f0fa66"],
Cell[106854, 1873, 269, 7, 89, "Output",ExpressionUUID->"ed63a2bd-bbc9-4215-9fe3-a66cc164800e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107160, 1885, 282, 6, 42, "Input",ExpressionUUID->"ce405448-861e-44ef-9c7b-4b79dab795d7"],
Cell[107445, 1893, 151, 2, 67, "Output",ExpressionUUID->"9acc071c-6360-4750-bf66-6e1bab155262"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107633, 1900, 560, 15, 76, "Input",ExpressionUUID->"261221b2-22b8-458f-8b0c-47e2d49fd66a"],
Cell[108196, 1917, 734, 22, 89, "Output",ExpressionUUID->"f117ba47-864a-4907-980c-16642fbc1e0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108967, 1944, 688, 18, 76, "Input",ExpressionUUID->"3bcc7e01-59aa-4856-8f07-0b96a3a8e4ba"],
Cell[109658, 1964, 755, 23, 114, "Output",ExpressionUUID->"b104f0f9-b821-4452-b077-12d0c8b5a7ac"]
}, Open  ]],
Cell[110428, 1990, 156, 3, 42, "Input",ExpressionUUID->"53e9471f-256f-4b2e-9e25-05d1893ded03"],
Cell[CellGroupData[{
Cell[110609, 1997, 600, 19, 124, "Input",ExpressionUUID->"03172399-9fd0-4c0f-b90d-b6c3e1c98623"],
Cell[111212, 2018, 234, 4, 67, "Output",ExpressionUUID->"c86ac452-0fe8-4d41-a91b-1ca474cccc8d"],
Cell[111449, 2024, 216, 3, 67, "Output",ExpressionUUID->"fe6b420e-d8ba-4f69-bbb5-1e61fe2fa11e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111702, 2032, 258, 5, 57, "Input",ExpressionUUID->"cf1148b1-6ec4-4852-b2cd-4462aec4bb87"],
Cell[111963, 2039, 219, 3, 67, "Output",ExpressionUUID->"3a2c3bf0-0f0e-4f21-bd05-6e2b29ac0b25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112219, 2047, 233, 4, 42, "Input",ExpressionUUID->"f370752d-8b51-48aa-8c64-584829641487"],
Cell[112455, 2053, 221, 3, 67, "Output",ExpressionUUID->"5d9feb93-b7d8-42a4-b2dc-427204dcb02e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112713, 2061, 229, 4, 42, "Input",ExpressionUUID->"c984c327-2193-4572-b306-718e0ac40299"],
Cell[112945, 2067, 169, 2, 67, "Output",ExpressionUUID->"c8aaf70e-5ddc-4c34-adea-2982e96ee6fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113151, 2074, 456, 13, 76, "Input",ExpressionUUID->"0904310d-504b-44ac-af11-7cde9820541f"],
Cell[113610, 2089, 627, 21, 89, "Output",ExpressionUUID->"4ae35920-909a-4839-ae91-c8a8b643ca16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114274, 2115, 356, 9, 71, "Input",ExpressionUUID->"b51165da-6f8b-4ce0-94c6-f7336a322856"],
Cell[114633, 2126, 207, 3, 67, "Output",ExpressionUUID->"7a77fcb3-851d-48eb-91df-a24faa21b6c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114877, 2134, 504, 10, 72, "Input",ExpressionUUID->"06e3f053-0b5e-485c-9349-a2ef6f1ed8a1"],
Cell[115384, 2146, 18859, 379, 1043, "Output",ExpressionUUID->"3d2d674e-e54a-4195-b1f9-c59fc8bd2f35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134280, 2530, 337, 9, 42, "Input",ExpressionUUID->"0a41d124-b1be-4885-bcd9-8a2d3b27b53b"],
Cell[134620, 2541, 338, 10, 67, "Output",ExpressionUUID->"a5ee1ce5-b078-4c00-8441-4834eaee76fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134995, 2556, 356, 11, 46, "Input",ExpressionUUID->"0ea200be-efde-4527-a5a0-138c7183a7e2"],
Cell[135354, 2569, 1148, 34, 97, "Output",ExpressionUUID->"efe88c24-eadd-4000-bcc1-5bebdd68a81a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136539, 2608, 484, 14, 46, "Input",ExpressionUUID->"80c6e77e-af2a-4f69-802b-4b7d14b3c7da"],
Cell[137026, 2624, 1398, 44, 150, "Output",ExpressionUUID->"c80d7ffc-89ca-40f8-b6b3-3504a3963246"]
}, Open  ]],
Cell[138439, 2671, 1491, 46, 138, "Input",ExpressionUUID->"d8e05bea-1ad1-4af1-80f7-739743c27f90"],
Cell[CellGroupData[{
Cell[139955, 2721, 254, 5, 42, "Input",ExpressionUUID->"d9aa4bf5-9617-4732-af42-dadcca0df33e"],
Cell[140212, 2728, 776, 25, 93, "Output",ExpressionUUID->"0b2eada9-e7e0-4098-88af-5ea4669554d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141025, 2758, 208, 3, 42, "Input",ExpressionUUID->"5e897484-f976-41df-906c-3a07673cc4b7"],
Cell[141236, 2763, 266, 7, 89, "Output",ExpressionUUID->"d0697f20-f7fc-4e99-a3ab-45913815288c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141539, 2775, 341, 8, 42, "Input",ExpressionUUID->"68d7b2d6-42c2-4282-85ea-9b0aca9d739d"],
Cell[141883, 2785, 7729, 144, 360, "Output",ExpressionUUID->"e6c9e36d-12ff-4005-8b0f-615dc4dddc75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149649, 2934, 342, 8, 42, "Input",ExpressionUUID->"e89788bd-d4a0-4f31-8a0c-451485ad8827"],
Cell[149994, 2944, 3373, 75, 378, "Output",ExpressionUUID->"66d897b9-c9ae-4d02-8476-7190a776fc24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153404, 3024, 268, 5, 42, "Input",ExpressionUUID->"643caa10-d795-412f-9f65-04a10536d07e"],
Cell[153675, 3031, 245, 5, 67, "Output",ExpressionUUID->"f564054e-939b-4bec-9011-6153a6bef065"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153957, 3041, 537, 17, 91, "Input",ExpressionUUID->"edc98d8a-bcf5-4546-970c-f85a5de35fa2"],
Cell[154497, 3060, 367, 9, 93, "Output",ExpressionUUID->"fed97bdd-b08b-4298-804c-2dcd1cbcf3a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154901, 3074, 499, 10, 72, "Input",ExpressionUUID->"1774bbb0-fa12-4569-9c36-9213eaf0cb43"],
Cell[155403, 3086, 31605, 635, 1961, "Output",ExpressionUUID->"bdce4bb8-b607-4d6a-b8e7-dee66f88b297"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187045, 3726, 356, 9, 42, "Input",ExpressionUUID->"db792ef2-29bc-4577-858a-afef48825e04"],
Cell[187404, 3737, 21840, 376, 378, "Output",ExpressionUUID->"0105dd09-0a1c-4a57-918e-1b5a59b97a7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209281, 4118, 393, 10, 42, "Input",ExpressionUUID->"3ba5324a-df1e-4bd5-a303-271e16fa7648"],
Cell[209677, 4130, 13552, 239, 379, "Output",ExpressionUUID->"8c5a04bc-e3bb-4522-98d2-3ad347a94c9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223266, 4374, 286, 6, 73, "Input",ExpressionUUID->"808204a6-af5e-418a-82d3-601161e94510"],
Cell[223555, 4382, 362, 10, 86, "Output",ExpressionUUID->"0e618a6c-cdf6-4812-80d0-866bf42d30a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223954, 4397, 288, 6, 73, "Input",ExpressionUUID->"682f6f8c-79ec-435f-af2f-618a45da8420"],
Cell[224245, 4405, 527, 16, 86, "Output",ExpressionUUID->"d6621378-652f-4adf-8aed-2d863d9e2752"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224809, 4426, 336, 8, 42, "Input",ExpressionUUID->"0d185925-ab8a-424f-a545-b3e466b49bb4"],
Cell[225148, 4436, 13374, 237, 378, "Output",ExpressionUUID->"0bac826b-c656-472d-a4cf-3666e0f3e65c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238559, 4678, 363, 9, 42, "Input",ExpressionUUID->"5fdb1f36-28f8-4dbe-a25c-dee4dae77b89"],
Cell[238925, 4689, 11819, 213, 378, "Output",ExpressionUUID->"c1cf44dc-eb7c-4f15-a0bf-990b0c07772f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250781, 4907, 338, 8, 42, "Input",ExpressionUUID->"74db7532-1c80-4d42-8ba1-dc65f786019c"],
Cell[251122, 4917, 16158, 287, 378, "Output",ExpressionUUID->"4badbba5-d0be-4b18-a2e8-ffe1f0bc5281"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267317, 5209, 623, 17, 96, "Input",ExpressionUUID->"f7715b04-9d07-4197-880a-7d4dc6590fc6"],
Cell[267943, 5228, 16479, 293, 378, "Output",ExpressionUUID->"0227bad7-c5f6-433b-8f02-64cf70202472"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284459, 5526, 340, 8, 42, "Input",ExpressionUUID->"4b6e9c17-c771-4e46-9338-5fdc7f78a845"],
Cell[284802, 5536, 13372, 237, 378, "Output",ExpressionUUID->"6c63c8f2-e0d2-463d-9a50-83c97c787016"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298211, 5778, 555, 16, 95, "Input",ExpressionUUID->"e2cf4696-0889-4ac5-8114-2aa1f8c7b4e3"],
Cell[298769, 5796, 13613, 242, 378, "Output",ExpressionUUID->"fb7e36c6-9229-4dbd-b07d-6957761d42d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312419, 6043, 338, 8, 42, "Input",ExpressionUUID->"a5683a83-7ba5-4d6d-a23f-ce09ea1a561d"],
Cell[312760, 6053, 15132, 266, 378, "Output",ExpressionUUID->"c112624b-36ef-4763-9fa5-51da84b58025"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327929, 6324, 517, 15, 117, "Input",ExpressionUUID->"3507770b-9674-4c97-b820-391865dc4517"],
Cell[328449, 6341, 15393, 272, 361, "Output",ExpressionUUID->"34b54d07-e719-4b1f-bf62-3ddd6778e1cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343879, 6618, 554, 12, 73, "Input",ExpressionUUID->"631636f8-a069-49a4-881c-ae43d09ce541"],
Cell[344436, 6632, 22214, 439, 982, "Output",ExpressionUUID->"0753634a-45d4-43ce-9912-626eaeea56da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366687, 7076, 269, 6, 43, "Input",ExpressionUUID->"254a8d6f-e75b-4661-bca5-3381bba04c8e"],
Cell[366959, 7084, 272, 6, 49, "Output",ExpressionUUID->"51564876-ec0e-4a16-b10d-3e5e6b99e4b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367268, 7095, 392, 11, 84, "Input",ExpressionUUID->"cb3c55da-3765-48ce-bd28-987a0053e0c5"],
Cell[367663, 7108, 348, 9, 81, "Output",ExpressionUUID->"de8916bd-6355-4d10-81e3-c4dc0b564646"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368048, 7122, 267, 6, 43, "Input",ExpressionUUID->"25751a76-fd20-4a0d-b2fc-a0b294e56a09"],
Cell[368318, 7130, 249, 7, 49, "Output",ExpressionUUID->"5974b1a9-4292-49af-a782-6a28f880b3bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368604, 7142, 317, 8, 48, "Input",ExpressionUUID->"1a96f4b3-aa20-425a-a93b-71153d5a5cb0"],
Cell[368924, 7152, 390, 12, 53, "Output",ExpressionUUID->"2a575603-de56-4f07-a00e-0448585b1d52"]
}, Open  ]],
Cell[369329, 7167, 347, 9, 48, "Input",ExpressionUUID->"898b7506-2364-48f2-9746-2c0e0f4044d6"],
Cell[369679, 7178, 336, 9, 48, "Input",ExpressionUUID->"a6ce7723-9189-48e2-bf8c-df343e3fca5f"],
Cell[CellGroupData[{
Cell[370040, 7191, 255, 6, 43, "Input",ExpressionUUID->"078fbf20-d14f-4c95-ae8c-a3401d117217"],
Cell[370298, 7199, 376, 12, 75, "Output",ExpressionUUID->"948e94cd-0c8f-4b2d-b985-1da4cca865f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370711, 7216, 264, 6, 43, "Input",ExpressionUUID->"bb40d35a-3079-4353-b8f2-31ec5ef7aa32"],
Cell[370978, 7224, 249, 6, 71, "Output",ExpressionUUID->"de6a3cc2-2e6a-4f9c-ae25-50c58a72fca2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371264, 7235, 507, 15, 78, "Input",ExpressionUUID->"d5d63d77-e57b-4978-bb31-cf092a0f03ee"],
Cell[371774, 7252, 574, 18, 69, "Output",ExpressionUUID->"2f099c75-18d3-42a1-80e9-4ba0a80f5a4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372385, 7275, 986, 29, 81, "Input",ExpressionUUID->"dc2e8596-d85e-4548-8f70-9ec27083ec79"],
Cell[373374, 7306, 874, 25, 69, "Output",ExpressionUUID->"154951db-e4b1-40fd-a39b-d2560c011006"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374285, 7336, 534, 17, 78, "Input",ExpressionUUID->"9ea230f9-7597-42c3-9ab8-958e4af34215"],
Cell[374822, 7355, 620, 20, 54, "Output",ExpressionUUID->"11f2f1e9-5015-463b-adca-8a0cdec6246a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375479, 7380, 568, 16, 80, "Input",ExpressionUUID->"d65c77b2-759a-444d-bdb5-1e84305fe958"],
Cell[376050, 7398, 541, 17, 69, "Output",ExpressionUUID->"779f5152-5bfa-41b5-a6fe-b7b6be93ac43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376628, 7420, 645, 20, 77, "Input",ExpressionUUID->"9423c5d3-9c05-401e-9cfa-f97b80dad72d"],
Cell[377276, 7442, 356, 10, 69, "Output",ExpressionUUID->"ea4764fc-0b8d-44ae-a743-6b0213ced502"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377669, 7457, 702, 21, 80, "Input",ExpressionUUID->"ba9fa854-8bcc-4946-87d5-5f0cd4f310d8"],
Cell[378374, 7480, 403, 12, 69, "Output",ExpressionUUID->"8e393d6b-ffd1-4d05-9c99-38b3606b25da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378814, 7497, 511, 16, 78, "Input",ExpressionUUID->"a6db0235-2e77-43f2-b188-468979fccbcf"],
Cell[379328, 7515, 631, 20, 69, "Output",ExpressionUUID->"21659a7f-b37d-4c10-98a7-aff51b158563"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379996, 7540, 956, 31, 78, "Input",ExpressionUUID->"f0e87d69-6d74-4d56-80b3-27ac5d95a241"],
Cell[380955, 7573, 408, 12, 54, "Output",ExpressionUUID->"f69cccf7-04ff-4287-bf3a-e8cb12dc6c53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[381400, 7590, 773, 25, 77, "Input",ExpressionUUID->"19384a87-28f4-4ee0-9b1a-9baa08eeeca4"],
Cell[382176, 7617, 386, 12, 54, "Output",ExpressionUUID->"91d9d71d-40d6-4e7a-b8f4-17e5f6c854f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382599, 7634, 402, 11, 83, "Input",ExpressionUUID->"d07b51fa-35bc-4aa1-80c9-9fd1cfa6486b"],
Cell[383004, 7647, 270, 7, 49, "Output",ExpressionUUID->"2036acac-8b59-4b0b-8807-5d21cc02b2df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383311, 7659, 319, 8, 83, "Input",ExpressionUUID->"a5194260-96fa-4d68-a04e-1a125b7f4768"],
Cell[383633, 7669, 226, 5, 49, "Output",ExpressionUUID->"a7f1666c-e94b-4043-bdf1-21f9b3bd5ac3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383896, 7679, 317, 8, 83, "Input",ExpressionUUID->"a2d62ab4-fa6e-4172-a846-209fbed3fa9d"],
Cell[384216, 7689, 184, 4, 49, "Output",ExpressionUUID->"8f149c6a-8da0-4353-86b4-22855b217631"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384437, 7698, 297, 8, 43, "Input",ExpressionUUID->"98a45ed3-a23b-44c1-9c6b-8067d9b66e8c"],
Cell[384737, 7708, 257, 7, 49, "Output",ExpressionUUID->"78822adb-8957-4f69-a1f2-68e71958a806"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385031, 7720, 318, 9, 43, "Input",ExpressionUUID->"a36eb22c-d2ba-43b7-a021-41ec65054679"],
Cell[385352, 7731, 257, 7, 49, "Output",ExpressionUUID->"f4f5bb13-239d-4347-a3a1-e5955c401e24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385646, 7743, 455, 14, 77, "Input",ExpressionUUID->"0f092d96-1712-4da4-8df7-1fabac010add"],
Cell[386104, 7759, 482, 14, 108, "Output",ExpressionUUID->"f40bf7f7-626a-4ca4-abfe-fe92ba853d66"]
}, Open  ]]
}
]
*)

